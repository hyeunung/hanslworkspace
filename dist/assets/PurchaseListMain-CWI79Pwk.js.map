{"version":3,"file":"PurchaseListMain-CWI79Pwk.js","sources":["../../node_modules/lucide-react/dist/esm/icons/circle-x.js","../../node_modules/lucide-react/dist/esm/icons/funnel.js","../../src/hooks/usePurchaseData.ts","../../src/hooks/useDebounce.ts","../../src/hooks/useFastPurchaseFilters.ts","../../src/components/purchase/PurchaseDetailModal.tsx","../../src/components/purchase/MobilePurchaseCard.tsx","../../node_modules/@radix-ui/react-alert-dialog/dist/index.mjs","../../src/components/ui/alert-dialog.tsx","../../src/components/purchase/FastPurchaseTable.tsx","../../src/components/purchase/PurchaseItemsModal.tsx","../../src/components/purchase/PurchaseListMain.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"path\", { d: \"m15 9-6 6\", key: \"1uzhvr\" }],\n  [\"path\", { d: \"m9 9 6 6\", key: \"z0biqf\" }]\n];\nconst CircleX = createLucideIcon(\"circle-x\", __iconNode);\n\nexport { __iconNode, CircleX as default };\n//# sourceMappingURL=circle-x.js.map\n","/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M10 20a1 1 0 0 0 .553.895l2 1A1 1 0 0 0 14 21v-7a2 2 0 0 1 .517-1.341L21.74 4.67A1 1 0 0 0 21 3H3a1 1 0 0 0-.742 1.67l7.225 7.989A2 2 0 0 1 10 14z\",\n      key: \"sc7q7i\"\n    }\n  ]\n];\nconst Funnel = createLucideIcon(\"funnel\", __iconNode);\n\nexport { __iconNode, Funnel as default };\n//# sourceMappingURL=funnel.js.map\n","import { useState, useEffect, useCallback } from 'react';\nimport { createClient } from '@/lib/supabase/client';\nimport { logger } from '@/lib/logger';\nimport { toast } from 'sonner';\n\nexport interface Purchase {\n  id: number;\n  purchase_order_number?: string;\n  request_date: string;\n  delivery_request_date?: string;\n  progress_type: string;\n  is_payment_completed: boolean;\n  payment_category: string;\n  payment_completed_at?: string;\n  currency: string;\n  request_type: string;\n  vendor?: {\n    vendor_name: string;\n    vendor_payment_schedule?: string;\n  };\n  vendor_name: string;\n  vendor_payment_schedule?: string;\n  vendor_id?: number;\n  contact_id?: number;\n  vendor_contacts?: {\n    contact_name: string;\n  } | Array<{\n    contact_name: string;\n  }>;\n  contact_name?: string;\n  requester_name: string;\n  project_vendor: string;\n  sales_order_number: string;\n  project_item: string;\n  middle_manager_status?: string;\n  final_manager_status?: string;\n  total_amount: number;\n  is_received: boolean;\n  received_at?: string;\n\n  is_po_download?: boolean;\n  items?: any[];\n  purchase_request_items?: any[];\n  item_name?: string;\n  specification?: string;\n  quantity?: number;\n  unit_price_value?: number;\n  amount_value?: number;\n  remark?: string;\n  line_number?: number;\n  link?: string;\n  purchase_status?: string;\n}\n\nexport interface Vendor {\n  id: number;\n  vendor_name: string;\n  vendor_contacts?: any[];\n}\n\nexport interface Employee {\n  id: string;\n  name: string;\n  email: string;\n  full_name?: string;\n}\n\nexport const usePurchaseData = () => {\n  const [purchases, setPurchases] = useState<Purchase[]>([]);\n  const [vendors, setVendors] = useState<Vendor[]>([]);\n  const [employees, setEmployees] = useState<Employee[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [currentUserRoles, setCurrentUserRoles] = useState<string[]>([]);\n  const [currentUserName, setCurrentUserName] = useState<string>('');\n  \n  const supabase = createClient();\n\n  // 초기 데이터 로드 (업체 목록, 사용자 권한)\n  useEffect(() => {\n    const loadInitialData = async () => {\n      try {\n        // 업체 목록, 직원 목록, 사용자 정보를 병렬로 로드\n        const [vendorResult, employeeResult, userResult] = await Promise.all([\n          supabase.from('vendors').select('id, vendor_name').order('vendor_name'),\n          supabase.from('employees').select('id, name, email, full_name').order('full_name'),\n          supabase.auth.getUser()\n        ]);\n\n        if (vendorResult.error) throw vendorResult.error;\n        setVendors(vendorResult.data || []);\n        \n        if (employeeResult.error) throw employeeResult.error;\n        setEmployees(employeeResult.data || []);\n\n        // 사용자 권한 및 이름 로드\n        if (userResult.data.user && !userResult.error) {\n          // 먼저 ID로 시도\n          let { data: employeeData } = await supabase\n            .from('employees')\n            .select('*')\n            .eq('id', userResult.data.user.id)\n            .maybeSingle();\n          \n          // ID로 찾지 못했으면 email로 시도 (일반적인 케이스)\n          if (!employeeData && userResult.data.user.email) {\n            const emailResult = await supabase\n              .from('employees')\n              .select('*')\n              .eq('email', userResult.data.user.email)\n              .maybeSingle();\n            \n            employeeData = emailResult.data;\n          }\n          \n          if (employeeData) {\n            // purchase_role을 쉼표로 분할하고 각 role의 공백을 제거\n            let roles: string[] = [];\n            \n            // purchase_role이 배열인지 문자열인지 확인\n            if (employeeData.purchase_role) {\n              if (Array.isArray(employeeData.purchase_role)) {\n                // 배열인 경우\n                roles = employeeData.purchase_role.map((r: any) => String(r).trim());\n              } else {\n                // 문자열인 경우 (일반적)\n                const roleString = String(employeeData.purchase_role);\n                // 쉼표로 분할하고 공백 제거\n                roles = roleString\n                  .split(',')\n                  .map((r: string) => r.trim())\n                  .filter((r: string) => r.length > 0);\n              }\n            }\n            \n            setCurrentUserRoles(roles);\n            setCurrentUserName(employeeData.full_name || employeeData.name || '');\n          }\n        }\n      } catch (error) {\n        logger.error('초기 데이터 로드 실패', error);\n      }\n    };\n\n    loadInitialData();\n  }, []);\n\n  // 발주 목록 로드\n  const loadPurchases = useCallback(async () => {\n    setLoading(true);\n    \n    try {\n      const { data: { user }, error: authError } = await supabase.auth.getUser();\n      \n      if (authError || !user) {\n        logger.error('사용자 인증 실패', authError);\n        toast.error('로그인이 필요합니다.');\n        setLoading(false);\n        return;\n      }\n\n      // 발주 데이터 조회 (hanslwebapp과 완전히 동일)\n      const { data, error } = await supabase\n        .from('purchase_requests')\n        .select(`\n          *,\n          vendors (\n            vendor_name,\n            vendor_payment_schedule\n          ),\n          vendor_contacts (\n            contact_name\n          ),\n          purchase_request_items (\n            item_name,\n            specification,\n            quantity,\n            unit_price_value,\n            amount_value,\n            remark,\n            line_number,\n            link\n          )\n        `)\n        .order('request_date', { ascending: false })\n        .limit(2000);\n\n      if (error) throw error;\n\n      // 데이터 변환 (hanslwebapp과 동일)\n      const processedData = (data || []).map((request: any) => {\n        // 첫 번째 품목 정보 (기존 방식과 호환성 유지)\n        const firstItem = request.purchase_request_items?.[0] || {};\n        \n        return {\n          id: Number(request.id),\n          purchase_order_number: request.purchase_order_number as string,\n          request_date: request.request_date as string,\n          delivery_request_date: request.delivery_request_date as string,\n          progress_type: request.progress_type as string,\n          payment_completed_at: request.payment_completed_at as string,\n          payment_category: request.payment_category as string,\n          currency: request.currency as string,\n          request_type: request.request_type as string,\n          vendor: request.vendors || null,\n          vendor_name: request.vendors?.vendor_name || '',\n          vendor_payment_schedule: request.vendors?.vendor_payment_schedule || '',\n          vendor_contacts: request.vendor_contacts || [],\n          requester_name: request.requester_name as string,\n          item_name: firstItem.item_name as string || '',\n          specification: firstItem.specification as string || '',\n          quantity: Number(firstItem.quantity) || 0,\n          unit_price_value: Number(firstItem.unit_price_value) || 0,\n          amount_value: Number(firstItem.amount_value) || 0,\n          remark: firstItem.remark as string || '',\n          project_vendor: request.project_vendor as string,\n          sales_order_number: request.sales_order_number as string,\n          project_item: request.project_item as string,\n          line_number: Number(firstItem.line_number) || 1,\n          contact_name: request.vendor_contacts?.contact_name || '',\n          middle_manager_status: request.middle_manager_status as string,\n          final_manager_status: request.final_manager_status as string,\n          is_received: !!request.is_received,\n          received_at: request.received_at as string,\n          is_payment_completed: !!request.is_payment_completed,\n          is_po_download: !!request.is_po_download,\n          link: firstItem.link as string | undefined,\n          // 전체 품목 리스트 추가 (hanslwebapp과 동일하게 items로 통일)\n          items: request.purchase_request_items || [],\n          // 총 금액 계산\n          total_amount: request.purchase_request_items?.reduce((sum: number, item: any) => \n            sum + (Number(item.amount_value) || 0), 0) || 0,\n          purchase_status: request.purchase_status || 'pending'\n        };\n      });\n\n      // 데이터 로드 완료\n      setPurchases(processedData);\n    } catch (error) {\n      logger.error('발주 목록 로드 실패', error);\n      toast.error('발주 목록을 불러올 수 없습니다.');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    loadPurchases();\n  }, [loadPurchases]);\n\n  return {\n    purchases,\n    vendors,\n    employees,\n    loading,\n    currentUserRoles,\n    currentUserName,\n    refreshPurchases: loadPurchases\n  };\n};","import { useEffect, useState } from 'react';\n\n/**\n * Hook to debounce a value\n * Useful for search inputs and other expensive operations\n */\nexport function useDebounce<T>(value: T, delay: number = 500): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value);\n\n  useEffect(() => {\n    // Set up the timeout\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    // Clean up the timeout if value changes\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}","import { useState, useMemo, useEffect } from 'react';\nimport { useDebounce } from '@/hooks/useDebounce';\nimport { Purchase } from './usePurchaseData';\nimport { createClient } from '@/lib/supabase/client';\n\n// 상수 정의\nconst HIDDEN_EMPLOYEES = ['정현웅', '정희웅'];\n\nexport const useFastPurchaseFilters = (purchases: Purchase[], currentUserRoles: string[], currentUserName: string) => {\n  const supabase = createClient();\n  const [activeTab, setActiveTab] = useState('pending');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [vendorFilter, setVendorFilter] = useState('');\n  const [selectedEmployee, setSelectedEmployee] = useState('');\n  const [purchaseNumberFilter, setPurchaseNumberFilter] = useState('');\n  const [itemNameFilter, setItemNameFilter] = useState('');\n  const [specificationFilter, setSpecificationFilter] = useState('');\n  const [approvalStatusFilter, setApprovalStatusFilter] = useState('');\n  const [remarkFilter, setRemarkFilter] = useState('');\n  \n  // 기간 필터 초기값 설정 (올해 1월 1일 ~ 오늘)\n  const thisYear = new Date().getFullYear();\n  const defaultStart = new Date(thisYear, 0, 1).toISOString().split('T')[0];\n  const defaultEnd = new Date().toISOString().split('T')[0];\n  const [dateFromFilter, setDateFromFilter] = useState(defaultStart);\n  const [dateToFilter, setDateToFilter] = useState(defaultEnd);\n  \n  const debouncedSearchTerm = useDebounce(searchTerm, 300);\n  \n  // 권한별 로직 계산\n  const isAdmin = currentUserRoles?.includes('app_admin') || currentUserRoles?.includes('final_approver');\n  \n  // 탭별 기본 직원 필터 계산\n  const computeDefaultEmployee = (tabKey: string): string => {\n    if (!currentUserName) return currentUserName || '';\n    \n    // 기본값은 항상 로그인한 사용자 본인\n    return currentUserName;\n  };\n  \n  // 탭 변경 시 직원 필터 기본값 설정\n  useEffect(() => {\n    if (!currentUserName) return;\n    const defaultEmployee = computeDefaultEmployee(activeTab);\n    setSelectedEmployee(defaultEmployee);\n  }, [activeTab, currentUserName, isAdmin]);\n  \n  // 1단계: 권한별 필터링 (한번만 실행)\n  const visiblePurchases = useMemo(() => {\n    if (currentUserRoles.includes('purchase_manager') || currentUserRoles.includes('app_admin')) {\n      return purchases;\n    }\n    return purchases.filter(p => !HIDDEN_EMPLOYEES.includes(p.requester_name));\n  }, [purchases, currentUserRoles]);\n\n  // 2단계: 날짜 필터링 (날짜 변경시만 실행)\n  const dateFilteredPurchases = useMemo(() => {\n    return visiblePurchases.filter((purchase) => {\n      const requestDate = purchase.request_date ? purchase.request_date.split('T')[0] : '';\n      const matchesDateFrom = !dateFromFilter || requestDate >= dateFromFilter;\n      const matchesDateTo = !dateToFilter || requestDate <= dateToFilter;\n      return matchesDateFrom && matchesDateTo;\n    });\n  }, [visiblePurchases, dateFromFilter, dateToFilter]);\n\n  // 3단계: 탭별 필터링 (탭 변경시만 실행)\n  const tabFilteredPurchases = useMemo(() => {\n    return dateFilteredPurchases.filter((purchase) => {\n      switch (activeTab) {\n        case 'pending':\n          return ['pending', '대기', '', null].includes(purchase.final_manager_status as any);\n        case 'purchase': {\n          // 구매요청 건이면서, 구매완료 전인 항목\n          const isRequest = purchase.payment_category === '구매요청';\n          const notPaid = !purchase.is_payment_completed;\n          if (!isRequest || !notPaid) return false;\n          \n          // 선진행은 승인 없이도 표시, 일반은 최종승인 완료된 것만 표시\n          const isSeonJin = (purchase.progress_type || '').includes('선진행');\n          const finalApproved = purchase.final_manager_status === 'approved';\n          \n          return isSeonJin || finalApproved;\n        }\n        case 'receipt': {\n          const notReceived = !purchase.is_received;\n          const cond = (purchase.progress_type || '').includes('선진행') || purchase.final_manager_status === 'approved';\n          return notReceived && cond;\n        }\n        case 'done':\n          return true;\n        default:\n          return true;\n      }\n    });\n  }, [dateFilteredPurchases, activeTab]);\n\n  // 4단계: 직원 필터링 (직원 선택시만 실행)\n  const employeeFilteredPurchases = useMemo(() => {\n    // 전체 직원 선택 시\n    if (!selectedEmployee || selectedEmployee === 'all' || selectedEmployee === '전체') {\n      return tabFilteredPurchases;\n    }\n    // 특정 직원 선택 시\n    return tabFilteredPurchases.filter(purchase => purchase.requester_name === selectedEmployee);\n  }, [tabFilteredPurchases, selectedEmployee]);\n\n  // 5단계: 업체 필터링 (업체 선택시만 실행)\n  const vendorFilteredPurchases = useMemo(() => {\n    if (!vendorFilter) {\n      return employeeFilteredPurchases;\n    }\n    return employeeFilteredPurchases.filter(purchase => purchase.vendor_name === vendorFilter);\n  }, [employeeFilteredPurchases, vendorFilter]);\n\n  // 6단계: 추가 필터 적용\n  const additionalFilteredPurchases = useMemo(() => {\n    let filtered = vendorFilteredPurchases;\n    \n    // 발주요청번호 필터\n    if (purchaseNumberFilter) {\n      const term = purchaseNumberFilter.trim().toLowerCase();\n      filtered = filtered.filter(p => p.purchase_order_number?.toLowerCase().includes(term));\n    }\n    \n    // 품명 필터\n    if (itemNameFilter) {\n      const term = itemNameFilter.trim().toLowerCase();\n      filtered = filtered.filter(p => {\n        if (p.items && p.items.length > 0) {\n          return p.items.some(item => item.item_name?.toLowerCase().includes(term));\n        }\n        return false;\n      });\n    }\n    \n    // 규격 필터\n    if (specificationFilter) {\n      const term = specificationFilter.trim().toLowerCase();\n      filtered = filtered.filter(p => {\n        if (p.items && p.items.length > 0) {\n          return p.items.some(item => item.specification?.toLowerCase().includes(term));\n        }\n        return false;\n      });\n    }\n    \n    // 승인상태 필터\n    if (approvalStatusFilter && approvalStatusFilter !== 'all') {\n      filtered = filtered.filter(p => {\n        switch (approvalStatusFilter) {\n          case 'pending':\n            return !p.final_manager_status || p.final_manager_status === 'pending' || p.final_manager_status === '대기';\n          case 'approved':\n            return p.final_manager_status === 'approved';\n          case 'rejected':\n            return p.final_manager_status === 'rejected' || p.middle_manager_status === 'rejected';\n          default:\n            return true;\n        }\n      });\n    }\n    \n    // 비고 필터\n    if (remarkFilter) {\n      const term = remarkFilter.trim().toLowerCase();\n      filtered = filtered.filter(p => {\n        if (p.items && p.items.length > 0) {\n          return p.items.some(item => item.remark?.toLowerCase().includes(term));\n        }\n        return false;\n      });\n    }\n    \n    return filtered;\n  }, [vendorFilteredPurchases, purchaseNumberFilter, itemNameFilter, specificationFilter, approvalStatusFilter, remarkFilter]);\n\n  // 7단계: 검색 필터링 (검색어 변경시만 실행)\n  const searchFilteredPurchases = useMemo(() => {\n    if (!debouncedSearchTerm) {\n      return additionalFilteredPurchases;\n    }\n    \n    const term = debouncedSearchTerm.trim().toLowerCase();\n    \n    return additionalFilteredPurchases.filter(purchase => {\n      // 빠른 검색 (기본 필드만)\n      if (purchase.purchase_order_number?.toLowerCase().includes(term) ||\n          purchase.vendor_name?.toLowerCase().includes(term) ||\n          purchase.requester_name?.toLowerCase().includes(term) ||\n          purchase.project_vendor?.toLowerCase().includes(term)) {\n        return true;\n      }\n      \n      // 품목 검색 (필요할 때만)\n      if (purchase.items && purchase.items.length > 0) {\n        return purchase.items.some(item => \n          (item.item_name && item.item_name.toLowerCase().includes(term)) ||\n          (item.specification && item.specification.toLowerCase().includes(term))\n        );\n      }\n      \n      return false;\n    });\n  }, [additionalFilteredPurchases, debouncedSearchTerm]);\n\n  // 8단계: 최종 정렬 - 최신순 (내림차순)\n  const filteredPurchases = useMemo(() => {\n    return [...searchFilteredPurchases].sort((a, b) => {\n      // request_date를 기준으로 내림차순 정렬 (최신이 위로)\n      const dateA = a.request_date ? new Date(a.request_date).getTime() : 0;\n      const dateB = b.request_date ? new Date(b.request_date).getTime() : 0;\n      return dateB - dateA;\n    });\n  }, [searchFilteredPurchases]);\n\n  // 탭 카운트 (캐시됨, 날짜 필터 기준)\n  const tabCounts = useMemo(() => {\n    const getUniqueOrderCount = (filtered: Purchase[]) => {\n      return new Set(filtered.map(p => p.purchase_order_number)).size;\n    };\n    \n    return {\n      pending: getUniqueOrderCount(dateFilteredPurchases.filter(p => \n        ['pending', '대기', '', null].includes(p.final_manager_status as any)\n      )),\n      purchase: getUniqueOrderCount(dateFilteredPurchases.filter(p => {\n        // 구매요청 건이면서, 구매완료 전인 항목\n        const isRequest = p.payment_category === '구매요청';\n        const notPaid = !p.is_payment_completed;\n        if (!isRequest || !notPaid) return false;\n        \n        // 선진행은 승인 없이도 표시, 일반은 최종승인 완료된 것만 표시\n        const isSeonJin = (p.progress_type || '').includes('선진행');\n        const finalApproved = p.final_manager_status === 'approved';\n        \n        return isSeonJin || finalApproved;\n      })),\n      receipt: getUniqueOrderCount(dateFilteredPurchases.filter(p => {\n        const notReceived = !p.is_received;\n        const cond = (p.progress_type || '').includes('선진행') || p.final_manager_status === 'approved';\n        return notReceived && cond;\n      })),\n      done: getUniqueOrderCount(dateFilteredPurchases)\n    };\n  }, [dateFilteredPurchases]);\n\n  // 사용자별 저장된 기간 불러오기\n  useEffect(() => {\n    (async () => {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) return;\n      \n      const { data } = await supabase\n        .from('user_preferences')\n        .select('period_start, period_end')\n        .eq('user_id', user.id)\n        .single();\n        \n      if (data) {\n        const ps = data.period_start ? new Date(data.period_start).toISOString().split('T')[0] : defaultStart;\n        const pe = data.period_end ? new Date(data.period_end).toISOString().split('T')[0] : defaultEnd;\n        setDateFromFilter(ps);\n        setDateToFilter(pe);\n      }\n    })();\n  }, []);\n  \n  // 기간 변경 시 즉시 저장 (사용자별)\n  useEffect(() => {\n    (async () => {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) return;\n      if (!dateFromFilter || !dateToFilter) return;\n      \n      await supabase.from('user_preferences').upsert({\n        user_id: user.id,\n        period_start: dateFromFilter,\n        period_end: dateToFilter,\n        updated_at: new Date().toISOString()\n      });\n    })();\n  }, [dateFromFilter, dateToFilter]);\n\n  return {\n    // States\n    activeTab,\n    searchTerm,\n    vendorFilter,\n    dateFromFilter,\n    dateToFilter,\n    selectedEmployee,\n    purchaseNumberFilter,\n    itemNameFilter,\n    specificationFilter,\n    approvalStatusFilter,\n    remarkFilter,\n    \n    // Setters\n    setActiveTab,\n    setSearchTerm,\n    setVendorFilter,\n    setDateFromFilter,\n    setDateToFilter,\n    setSelectedEmployee,\n    setPurchaseNumberFilter,\n    setItemNameFilter,\n    setSpecificationFilter,\n    setApprovalStatusFilter,\n    setRemarkFilter,\n    \n    // Computed values\n    filteredPurchases,\n    tabCounts\n  };\n};","import { useEffect, useState } from 'react'\nimport { createClient } from '@/lib/supabase/client'\nimport { PurchaseRequestWithDetails } from '@/types/purchase'\nimport { \n  Calendar, \n  User, \n  Building2, \n  Package, \n  CreditCard,\n  X,\n  FileText,\n  DollarSign,\n  Edit2,\n  Trash2,\n  Save,\n  Plus,\n  CheckCircle,\n  XCircle,\n  Check,\n  Truck\n} from 'lucide-react'\nimport { Button } from '@/components/ui/button'\nimport { Badge } from '@/components/ui/badge'\nimport { Input } from '@/components/ui/input'\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog'\nimport { toast } from 'sonner'\n\ninterface PurchaseDetailModalProps {\n  purchaseId: number | null\n  isOpen: boolean\n  onClose: () => void\n  embedded?: boolean  // Dialog 없이 내용만 렌더링\n  currentUserRoles?: string[]\n  activeTab?: string\n  onRefresh?: () => void\n  onDelete?: (purchase: PurchaseRequestWithDetails) => void\n}\n\nexport default function PurchaseDetailModal({ \n  purchaseId, \n  isOpen, \n  onClose, \n  embedded = false,\n  currentUserRoles = [],\n  activeTab,\n  onRefresh,\n  onDelete\n}: PurchaseDetailModalProps) {\n  const [loading, setLoading] = useState(false)\n  const [purchase, setPurchase] = useState<PurchaseRequestWithDetails | null>(null)\n  const [isEditing, setIsEditing] = useState(false)\n  const [editedPurchase, setEditedPurchase] = useState<PurchaseRequestWithDetails | null>(null)\n  const [editedItems, setEditedItems] = useState<any[]>([])\n  const [deletedItemIds, setDeletedItemIds] = useState<number[]>([])\n  const supabase = createClient()\n  \n  // 권한 체크\n  const canEdit = currentUserRoles.includes('final_approver') || \n                  currentUserRoles.includes('app_admin') || \n                  currentUserRoles.includes('ceo')\n  \n  const canDelete = canEdit\n  \n  // 입고 권한 체크 (final_approver, app_admin, ceo가 입고 처리 가능)\n  const canReceiptCheck = currentUserRoles.includes('final_approver') || \n                         currentUserRoles.includes('app_admin') || \n                         currentUserRoles.includes('ceo')\n  \n  // 승인 권한 체크\n  const canApproveMiddle = currentUserRoles.includes('middle_manager') || \n                           currentUserRoles.includes('app_admin') || \n                           currentUserRoles.includes('ceo')\n  \n  const canApproveFinal = currentUserRoles.includes('final_approver') || \n                          currentUserRoles.includes('app_admin') || \n                          currentUserRoles.includes('ceo')\n\n  useEffect(() => {\n    if (purchaseId && isOpen) {\n      loadPurchaseDetail(purchaseId.toString())\n    }\n  }, [purchaseId, isOpen])\n\n  const loadPurchaseDetail = async (id: string) => {\n    try {\n      setLoading(true)\n      const supabase = createClient()\n      \n      const { data, error } = await supabase\n        .from('purchase_requests')\n        .select(`\n          *,\n          vendors(id, vendor_name),\n          purchase_request_items(*)\n        `)\n        .eq('id', id)\n        .single()\n\n      if (error) throw error\n\n      if (data) {\n        const purchaseData = {\n          ...data,\n          items: data.purchase_request_items || [],\n          vendor: data.vendors || { id: 0, vendor_name: '알 수 없음' },\n          vendor_contacts: []\n        } as PurchaseRequestWithDetails\n        setPurchase(purchaseData)\n        setEditedPurchase(purchaseData)\n        setEditedItems(purchaseData.items || [])\n      }\n    } catch (error) {\n      toast.error('발주 상세 정보를 불러오는데 실패했습니다.')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const getStatusBadge = () => {\n    if (!purchase) return null\n    \n    if (purchase.is_received) {\n      return <Badge className=\"bg-green-100 text-green-800\">입고완료</Badge>\n    } else if (purchase.middle_manager_status === 'approved' && purchase.final_manager_status === 'approved') {\n      return <Badge className=\"bg-hansl-100 text-hansl-800\">구매진행</Badge>\n    } else if (purchase.middle_manager_status === 'rejected' || purchase.final_manager_status === 'rejected') {\n      return <Badge className=\"bg-red-100 text-red-800\">반려</Badge>\n    } else {\n      return <Badge className=\"bg-yellow-100 text-yellow-800\">승인대기</Badge>\n    }\n  }\n\n  const formatDate = (date: string | null) => {\n    if (!date) return '-'\n    return new Date(date).toLocaleDateString('ko-KR')\n  }\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('ko-KR').format(amount)\n  }\n\n  const handleSave = async () => {\n    if (!purchase || !editedPurchase) return\n    \n    try {\n      // 발주 기본 정보 업데이트\n      const totalAmount = editedItems.reduce((sum, item) => sum + (item.amount_value || 0), 0)\n      \n      const { error: updateError } = await supabase\n        .from('purchase_requests')\n        .update({\n          purchase_order_number: editedPurchase.purchase_order_number,\n          requester_name: editedPurchase.requester_name,\n          vendor_name: editedPurchase.vendor?.vendor_name || editedPurchase.vendor_name,\n          delivery_request_date: editedPurchase.delivery_request_date,\n          request_date: editedPurchase.request_date,\n          payment_category: editedPurchase.payment_category,\n          project_vendor: editedPurchase.project_vendor,\n          total_amount: totalAmount,\n          updated_at: new Date().toISOString()\n        })\n        .eq('id', purchase.id)\n\n      if (updateError) throw updateError\n\n      // 삭제된 항목들 처리\n      if (deletedItemIds.length > 0) {\n        const { error: deleteError } = await supabase\n          .from('purchase_request_items')\n          .delete()\n          .in('id', deletedItemIds)\n\n        if (deleteError) throw deleteError\n      }\n\n      // 각 아이템 업데이트 또는 생성\n      for (const item of editedItems) {\n        if (item.id) {\n          // 기존 항목 업데이트\n          const { error } = await supabase\n            .from('purchase_request_items')\n            .update({\n              item_name: item.item_name,\n              specification: item.specification,\n              quantity: item.quantity,\n              unit_price_value: item.unit_price_value,\n              amount_value: item.amount_value,\n              remark: item.remark,\n              updated_at: new Date().toISOString()\n            })\n            .eq('id', item.id)\n\n          if (error) throw error\n        } else {\n          // 새 항목 생성\n          const { error } = await supabase\n            .from('purchase_request_items')\n            .insert({\n              purchase_request_id: purchase.id,\n              item_name: item.item_name,\n              specification: item.specification,\n              quantity: item.quantity,\n              unit_price_value: item.unit_price_value,\n              amount_value: item.amount_value,\n              remark: item.remark,\n              line_number: item.line_number || editedItems.indexOf(item) + 1,\n              created_at: new Date().toISOString()\n            })\n\n          if (error) throw error\n        }\n      }\n\n      toast.success('발주 내역이 수정되었습니다.')\n      setIsEditing(false)\n      setDeletedItemIds([])\n      onRefresh?.()\n      \n      // 수정된 데이터 다시 로드\n      await loadPurchaseDetail(purchaseId?.toString() || '')\n    } catch (error) {\n      toast.error('저장 중 오류가 발생했습니다.')\n    }\n  }\n\n  const handleItemChange = (index: number, field: string, value: any) => {\n    const newItems = [...editedItems]\n    \n    if (field === 'amount_value') {\n      // 금액을 직접 수정한 경우\n      newItems[index] = {\n        ...newItems[index],\n        amount_value: value\n      }\n    } else if (field === 'quantity' || field === 'unit_price_value') {\n      // 수량이나 단가를 수정한 경우 금액 자동 계산\n      const quantity = field === 'quantity' ? value : newItems[index].quantity\n      const unitPrice = field === 'unit_price_value' ? value : newItems[index].unit_price_value\n      newItems[index] = {\n        ...newItems[index],\n        [field]: value,\n        amount_value: quantity * unitPrice\n      }\n    } else {\n      // 기타 필드 수정\n      newItems[index] = {\n        ...newItems[index],\n        [field]: value\n      }\n    }\n    \n    setEditedItems(newItems)\n  }\n\n  const handleAddItem = () => {\n    const newItem = {\n      item_name: '',\n      specification: '',\n      quantity: 1,\n      unit_price_value: 0,\n      amount_value: 0,\n      remark: '',\n      line_number: editedItems.length + 1\n    }\n    setEditedItems([...editedItems, newItem])\n  }\n\n  const handleRemoveItem = (index: number) => {\n    const item = editedItems[index]\n    if (item.id) {\n      setDeletedItemIds([...deletedItemIds, item.id])\n    }\n    const newItems = editedItems.filter((_, i) => i !== index)\n    setEditedItems(newItems)\n  }\n\n  // 입고 처리 함수\n  const handleReceiptToggle = async (itemId: number, isReceived: boolean) => {\n    if (!canReceiptCheck) {\n      toast.error('입고 처리 권한이 없습니다.')\n      return\n    }\n\n    try {\n      // purchase_request_items 테이블 업데이트\n      const { error } = await supabase\n        .from('purchase_request_items')\n        .update({\n          is_received: isReceived,\n          delivery_status: isReceived ? 'received' : 'pending',\n          received_quantity: isReceived ? \n            purchase?.items?.find(item => String(item.id) === String(itemId))?.quantity || 0 : 0,\n          received_at: isReceived ? new Date().toISOString() : null\n        })\n        .eq('id', itemId)\n\n      if (error) throw error\n\n      toast.success(isReceived ? '입고 처리되었습니다.' : '입고가 취소되었습니다.')\n      \n      // 데이터 새로고침\n      if (purchaseId) {\n        await loadPurchaseDetail(purchaseId.toString())\n      }\n      \n      // 부모 컴포넌트 새로고침\n      onRefresh?.()\n    } catch (error) {\n      toast.error('입고 처리 중 오류가 발생했습니다.')\n    }\n  }\n\n  // 승인 처리\n  const handleApprove = async (type: 'middle' | 'final') => {\n    if (!purchase) return\n    \n    try {\n      const updateData = type === 'middle' \n        ? { \n            middle_manager_status: 'approved'\n          }\n        : { \n            final_manager_status: 'approved'\n          }\n      \n      const { error } = await supabase\n        .from('purchase_requests')\n        .update(updateData)\n        .eq('id', purchase.id)\n      \n      if (error) {\n        throw error\n      }\n      \n      toast.success(`${type === 'middle' ? '중간' : '최종'} 승인이 완료되었습니다.`)\n      onRefresh?.()\n      await loadPurchaseDetail(purchaseId?.toString() || '')\n    } catch (error) {\n      toast.error('승인 처리 중 오류가 발생했습니다.')\n    }\n  }\n  \n  // 반려 처리\n  const handleReject = async (type: 'middle' | 'final') => {\n    if (!purchase) return\n    \n    const reason = window.prompt('반려 사유를 입력해주세요:')\n    if (!reason) return\n    \n    try {\n      const updateData = type === 'middle'\n        ? {\n            middle_manager_status: 'rejected'\n          }\n        : {\n            final_manager_status: 'rejected'\n          }\n      \n      const { error } = await supabase\n        .from('purchase_requests')\n        .update(updateData)\n        .eq('id', purchase.id)\n      \n      if (error) {\n        throw error\n      }\n      \n      toast.success(`${type === 'middle' ? '중간' : '최종'} 반려가 완료되었습니다.`)\n      onRefresh?.()\n      await loadPurchaseDetail(purchaseId?.toString() || '')\n    } catch (error) {\n      toast.error('반려 처리 중 오류가 발생했습니다.')\n    }\n  }\n\n  const content = (\n    <>\n      {loading ? (\n        <div className=\"flex items-center justify-center py-12\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-hansl-600\"></div>\n        </div>\n      ) : purchase ? (\n        <div className=\"space-y-6\">\n            {/* 기본 정보 */}\n            <div className=\"bg-gray-50 rounded-lg p-4\">\n              <h3 className=\"font-semibold mb-3 flex items-center\">\n                <FileText className=\"w-4 h-4 mr-2\" />\n                기본 정보\n              </h3>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <p className=\"text-sm text-gray-500\">요청자</p>\n                  <p className=\"font-medium\">{purchase.requester_name}</p>\n                </div>\n                <div>\n                  <p className=\"text-sm text-gray-500\">요청일</p>\n                  <p className=\"font-medium\">{formatDate(purchase.request_date)}</p>\n                </div>\n                <div>\n                  <p className=\"text-sm text-gray-500\">입고요청일</p>\n                  <p className=\"font-medium\">{formatDate(purchase.delivery_request_date)}</p>\n                </div>\n                <div>\n                  <p className=\"text-sm text-gray-500\">결제유형</p>\n                  <p className=\"font-medium\">{purchase.payment_category || '-'}</p>\n                </div>\n              </div>\n            </div>\n\n            {/* 업체 정보 */}\n            <div className=\"bg-gray-50 rounded-lg p-4\">\n              <h3 className=\"font-semibold mb-3 flex items-center\">\n                <Building2 className=\"w-4 h-4 mr-2\" />\n                업체 정보\n              </h3>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <p className=\"text-sm text-gray-500\">업체명</p>\n                  <p className=\"font-medium\">{purchase.vendor?.vendor_name || '-'}</p>\n                </div>\n                <div>\n                  <p className=\"text-sm text-gray-500\">프로젝트 업체</p>\n                  <p className=\"font-medium\">{purchase.project_vendor || '-'}</p>\n                </div>\n              </div>\n            </div>\n\n            {/* 품목 리스트 */}\n            <div className=\"bg-gray-50 rounded-lg p-4\">\n              <h3 className=\"font-semibold mb-3 flex items-center\">\n                <Package className=\"w-4 h-4 mr-2\" />\n                품목 리스트\n              </h3>\n              <div className=\"overflow-x-auto\">\n                <table className=\"min-w-full\">\n                  <thead className=\"bg-white\">\n                    <tr>\n                      {canReceiptCheck && activeTab === 'receipt' && (\n                        <th className=\"px-3 py-2 text-center text-xs font-medium text-gray-500\">입고</th>\n                      )}\n                      <th className=\"px-3 py-2 text-left text-xs font-medium text-gray-500\">품명</th>\n                      <th className=\"px-3 py-2 text-left text-xs font-medium text-gray-500\">규격</th>\n                      <th className=\"px-3 py-2 text-center text-xs font-medium text-gray-500\">수량</th>\n                      <th className=\"px-3 py-2 text-right text-xs font-medium text-gray-500\">단가</th>\n                      <th className=\"px-3 py-2 text-right text-xs font-medium text-gray-500\">금액</th>\n                      <th className=\"px-3 py-2 text-left text-xs font-medium text-gray-500\">비고</th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\n                    {(isEditing ? editedItems : purchase.items)?.map((item, index) => (\n                      <tr key={index}>\n                        {canReceiptCheck && activeTab === 'receipt' && (\n                          <td className=\"px-3 py-2 text-center\">\n                            <div className=\"flex items-center justify-center\">\n                              {item.is_received || item.delivery_status === 'received' ? (\n                                <button\n                                  onClick={() => handleReceiptToggle(item.id, false)}\n                                  className=\"flex items-center gap-1 px-2 py-1 text-xs bg-green-100 text-green-800 rounded-md hover:bg-green-200 transition-colors\"\n                                  disabled={!canReceiptCheck}\n                                >\n                                  <CheckCircle className=\"w-3 h-3\" />\n                                  입고완료\n                                </button>\n                              ) : (\n                                <button\n                                  onClick={() => handleReceiptToggle(item.id, true)}\n                                  className=\"flex items-center gap-1 px-2 py-1 text-xs bg-gray-100 text-gray-600 rounded-md hover:bg-gray-200 transition-colors\"\n                                  disabled={!canReceiptCheck}\n                                >\n                                  <Package className=\"w-3 h-3\" />\n                                  미입고\n                                </button>\n                              )}\n                            </div>\n                          </td>\n                        )}\n                        <td className=\"px-3 py-2\">\n                          {isEditing ? (\n                            <Input\n                              value={item.item_name}\n                              onChange={(e) => handleItemChange(index, 'item_name', e.target.value)}\n                              className=\"text-sm\"\n                            />\n                          ) : (\n                            <span className=\"text-sm\">{item.item_name}</span>\n                          )}\n                        </td>\n                        <td className=\"px-3 py-2\">\n                          {isEditing ? (\n                            <Input\n                              value={item.specification}\n                              onChange={(e) => handleItemChange(index, 'specification', e.target.value)}\n                              className=\"text-sm\"\n                            />\n                          ) : (\n                            <span className=\"text-sm\">{item.specification}</span>\n                          )}\n                        </td>\n                        <td className=\"px-3 py-2 text-center\">\n                          {isEditing ? (\n                            <Input\n                              type=\"number\"\n                              value={item.quantity}\n                              onChange={(e) => handleItemChange(index, 'quantity', Number(e.target.value))}\n                              className=\"text-sm text-center w-20 mx-auto\"\n                            />\n                          ) : (\n                            <span className=\"text-sm\">{item.quantity}</span>\n                          )}\n                        </td>\n                        <td className=\"px-3 py-2 text-right\">\n                          {isEditing ? (\n                            <Input\n                              type=\"number\"\n                              value={item.unit_price_value}\n                              onChange={(e) => handleItemChange(index, 'unit_price_value', Number(e.target.value))}\n                              className=\"text-sm text-right\"\n                            />\n                          ) : (\n                            <span className=\"text-sm\">{formatCurrency(item.unit_price_value)} {purchase.currency}</span>\n                          )}\n                        </td>\n                        <td className=\"px-3 py-2 text-right\">\n                          {isEditing ? (\n                            <Input\n                              type=\"number\"\n                              value={item.amount_value}\n                              onChange={(e) => handleItemChange(index, 'amount_value', Number(e.target.value))}\n                              className=\"text-sm text-right\"\n                            />\n                          ) : (\n                            <span className=\"text-sm\">{formatCurrency(item.amount_value)} {purchase.currency}</span>\n                          )}\n                        </td>\n                        <td className=\"px-3 py-2\">\n                          {isEditing ? (\n                            <div className=\"flex items-center gap-2\">\n                              <Input\n                                value={item.remark || ''}\n                                onChange={(e) => handleItemChange(index, 'remark', e.target.value)}\n                                className=\"text-sm\"\n                              />\n                              <Button\n                                size=\"sm\"\n                                variant=\"ghost\"\n                                onClick={() => handleRemoveItem(index)}\n                                className=\"text-red-600 hover:bg-red-50\"\n                              >\n                                <Trash2 className=\"w-4 h-4\" />\n                              </Button>\n                            </div>\n                          ) : (\n                            <span className=\"text-sm\">{item.remark || '-'}</span>\n                          )}\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                  <tfoot className=\"bg-gray-100\">\n                    <tr>\n                      <td colSpan={canReceiptCheck && activeTab === 'receipt' ? 5 : 4} className=\"px-3 py-2 text-sm font-semibold text-right\">\n                        총액\n                      </td>\n                      <td className=\"px-3 py-2 text-sm font-semibold text-right\">\n                        {formatCurrency(\n                          (isEditing ? editedItems : purchase.items)?.reduce((sum, item) => sum + (item.amount_value || 0), 0) || 0\n                        )} {purchase.currency}\n                      </td>\n                      <td></td>\n                    </tr>\n                  </tfoot>\n                </table>\n              </div>\n              {isEditing && (\n                <Button\n                  size=\"sm\"\n                  variant=\"outline\"\n                  onClick={handleAddItem}\n                  className=\"w-full mt-2\"\n                >\n                  <Plus className=\"w-4 h-4 mr-1\" />\n                  항목 추가\n                </Button>\n              )}\n            </div>\n\n            {/* 승인 정보 */}\n            <div className=\"bg-gray-50 rounded-lg p-4\">\n              <h3 className=\"font-semibold mb-3 flex items-center\">\n                <User className=\"w-4 h-4 mr-2\" />\n                승인 정보\n              </h3>\n              <div className=\"space-y-4\">\n                {/* 중간 승인 */}\n                <div>\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-sm text-gray-500\">중간승인</p>\n                      <Badge \n                        variant={purchase.middle_manager_status === 'approved' ? 'default' : 'secondary'}\n                        className={purchase.middle_manager_status === 'approved' ? 'bg-green-100 text-green-800' : \n                                 purchase.middle_manager_status === 'rejected' ? 'bg-red-100 text-red-800' : ''}\n                      >\n                        {purchase.middle_manager_status === 'approved' ? '승인' : \n                         purchase.middle_manager_status === 'rejected' ? '반려' : '대기'}\n                      </Badge>\n                    </div>\n                    {!isEditing && canApproveMiddle && \n                     purchase.middle_manager_status !== 'approved' && \n                     purchase.middle_manager_status !== 'rejected' && (\n                      <div className=\"flex gap-2\">\n                        <Button\n                          size=\"sm\"\n                          onClick={() => handleApprove('middle')}\n                          className=\"bg-green-600 hover:bg-green-700 text-white\"\n                        >\n                          <CheckCircle className=\"w-4 h-4 mr-1\" />\n                          승인\n                        </Button>\n                        <Button\n                          size=\"sm\"\n                          variant=\"outline\"\n                          onClick={() => handleReject('middle')}\n                          className=\"text-red-600 hover:bg-red-50\"\n                        >\n                          <XCircle className=\"w-4 h-4 mr-1\" />\n                          반려\n                        </Button>\n                      </div>\n                    )}\n                  </div>\n                </div>\n                \n                {/* 최종 승인 */}\n                <div>\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-sm text-gray-500\">최종승인</p>\n                      <Badge \n                        variant={purchase.final_manager_status === 'approved' ? 'default' : 'secondary'}\n                        className={purchase.final_manager_status === 'approved' ? 'bg-green-100 text-green-800' : \n                                 purchase.final_manager_status === 'rejected' ? 'bg-red-100 text-red-800' : ''}\n                      >\n                        {purchase.final_manager_status === 'approved' ? '승인' : \n                         purchase.final_manager_status === 'rejected' ? '반려' : '대기'}\n                      </Badge>\n                    </div>\n                    {!isEditing && canApproveFinal && \n                     purchase.middle_manager_status === 'approved' &&\n                     purchase.final_manager_status !== 'approved' && \n                     purchase.final_manager_status !== 'rejected' && (\n                      <div className=\"flex gap-2\">\n                        <Button\n                          size=\"sm\"\n                          onClick={() => handleApprove('final')}\n                          className=\"bg-green-600 hover:bg-green-700 text-white\"\n                        >\n                          <CheckCircle className=\"w-4 h-4 mr-1\" />\n                          승인\n                        </Button>\n                        <Button\n                          size=\"sm\"\n                          variant=\"outline\"\n                          onClick={() => handleReject('final')}\n                          className=\"text-red-600 hover:bg-red-50\"\n                        >\n                          <XCircle className=\"w-4 h-4 mr-1\" />\n                          반려\n                        </Button>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className=\"text-center py-12 text-gray-500\">\n            발주 정보를 불러올 수 없습니다.\n          </div>\n        )}\n    </>\n  )\n\n  // embedded가 true면 Dialog 없이 내용만 반환\n  if (embedded) {\n    return content\n  }\n\n  // embedded가 false면 Dialog로 감싸서 반환\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent className=\"w-full max-w-[95vw] sm:max-w-4xl max-h-[90vh] overflow-y-auto\">\n        <DialogHeader>\n          <DialogTitle className=\"flex items-center justify-between\">\n            <span className=\"text-xl font-bold\">\n              {isEditing ? '발주 내역 수정' : '발주 상세 정보'}\n            </span>\n            {purchase && (\n              <div className=\"flex items-center gap-2\">\n                <span className=\"text-sm text-gray-500\">#{purchase.purchase_order_number}</span>\n                {!isEditing && getStatusBadge()}\n                {!isEditing && canEdit && (\n                  <>\n                    <Button\n                      size=\"sm\"\n                      variant=\"outline\"\n                      onClick={() => setIsEditing(true)}\n                      className=\"text-blue-600 hover:bg-blue-50\"\n                    >\n                      <Edit2 className=\"w-4 h-4 mr-1\" />\n                      수정\n                    </Button>\n                    {canDelete && onDelete && (\n                      <Button\n                        size=\"sm\"\n                        variant=\"outline\"\n                        onClick={() => onDelete(purchase)}\n                        className=\"text-red-600 hover:bg-red-50\"\n                      >\n                        <Trash2 className=\"w-4 h-4 mr-1\" />\n                        삭제\n                      </Button>\n                    )}\n                  </>\n                )}\n                {isEditing && (\n                  <>\n                    <Button\n                      size=\"sm\"\n                      variant=\"outline\"\n                      onClick={() => {\n                        setIsEditing(false)\n                        setEditedPurchase(purchase)\n                        setEditedItems(purchase.items || [])\n                        setDeletedItemIds([])\n                      }}\n                    >\n                      <X className=\"w-4 h-4 mr-1\" />\n                      취소\n                    </Button>\n                    <Button\n                      size=\"sm\"\n                      onClick={handleSave}\n                      className=\"bg-hansl-600 hover:bg-hansl-700 text-white\"\n                    >\n                      <Save className=\"w-4 h-4 mr-1\" />\n                      저장\n                    </Button>\n                  </>\n                )}\n              </div>\n            )}\n          </DialogTitle>\n        </DialogHeader>\n        {content}\n      </DialogContent>\n    </Dialog>\n  )\n}","import { memo } from 'react'\nimport { Eye } from 'lucide-react'\nimport { Badge } from '@/components/ui/badge'\n\ninterface Purchase {\n  id: number\n  purchase_order_number?: string\n  requester_name: string\n  vendor_name: string\n  middle_manager_status?: string\n  final_manager_status?: string\n  is_received: boolean\n  total_amount: number\n  currency: string\n  delivery_request_date?: string\n  request_date: string\n  items?: any[]\n  contact_name?: string\n  item_name?: string\n  specification?: string\n  quantity?: number\n  unit_price_value?: number\n  amount_value?: number\n  remark?: string\n  project_vendor?: string\n  sales_order_number?: string\n  project_item?: string\n  vendor_payment_schedule?: string\n  payment_category?: string\n  is_payment_completed?: boolean\n  progress_type?: string\n}\n\ninterface MobilePurchaseCardProps {\n  purchase: Purchase\n  onClick: (purchase: Purchase) => void\n}\n\nconst formatDate = (dateStr?: string) => {\n  if (!dateStr) return '-'\n  const date = new Date(dateStr)\n  return `${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`\n}\n\nconst getReceiptProgress = (purchase: Purchase) => {\n  if (!purchase.items || purchase.items.length === 0) return { received: 0, total: 0, percentage: 0 }\n  \n  const total = purchase.items.length\n  const received = purchase.items.filter((item: any) => item.is_received || item.delivery_status === 'received').length\n  const percentage = total > 0 ? Math.round((received / total) * 100) : 0\n  \n  return { received, total, percentage }\n}\n\nconst StatusBadge = memo(({ purchase }: { purchase: Purchase }) => {\n  const status = purchase.is_received \n    ? 'completed'\n    : (purchase.middle_manager_status === 'approved' && purchase.final_manager_status === 'approved')\n    ? 'inProgress'\n    : (purchase.middle_manager_status === 'rejected' || purchase.final_manager_status === 'rejected')\n    ? 'rejected'\n    : 'pending'\n  \n  const config = {\n    completed: { text: '입고완료', className: 'bg-green-100 text-green-800' },\n    inProgress: { text: '구매진행', className: 'bg-hansl-100 text-hansl-800' },\n    rejected: { text: '반려', className: 'bg-red-100 text-red-800' },\n    pending: { text: '승인대기', className: 'bg-yellow-100 text-yellow-800' }\n  }\n  \n  const { text, className } = config[status]\n  return <Badge className={`${className} text-xs`}>{text}</Badge>\n})\n\nStatusBadge.displayName = 'StatusBadge'\n\nconst MobilePurchaseCard = memo(({ purchase, onClick }: MobilePurchaseCardProps) => {\n  const receiptProgress = getReceiptProgress(purchase)\n  const isAdvance = purchase.progress_type === '선진행' || purchase.progress_type?.includes('선진행')\n  \n  return (\n    <div \n      className={`bg-white rounded-lg border p-4 space-y-3 cursor-pointer transition-all hover:shadow-md ${isAdvance ? 'border-red-400 bg-red-50 hover:bg-red-100' : 'hover:bg-gray-50'}`}\n      onClick={() => onClick(purchase)}\n    >\n      {/* 헤더 */}\n      <div className=\"flex items-start justify-between\">\n        <div>\n          <div className=\"flex items-center gap-2\">\n            {isAdvance ? (\n              <Badge className=\"bg-red-500 text-white font-bold text-xs px-2 py-0.5\">\n                선진행\n              </Badge>\n            ) : (\n              <Badge className=\"bg-gray-200 text-gray-700 text-xs px-2 py-0.5\">\n                일반\n              </Badge>\n            )}\n            <span className=\"font-semibold text-sm text-gray-900\">\n              {purchase.purchase_order_number || '-'}\n            </span>\n          </div>\n          <div className=\"text-xs text-gray-500 mt-1\">\n            {formatDate(purchase.request_date)} 요청\n          </div>\n        </div>\n        <StatusBadge purchase={purchase} />\n      </div>\n\n      {/* 중간 정보 */}\n      <div className=\"space-y-2\">\n        <div className=\"flex items-center justify-between text-sm\">\n          <span className=\"text-gray-600\">요청자</span>\n          <span className=\"font-medium\">{purchase.requester_name}</span>\n        </div>\n        <div className=\"flex items-center justify-between text-sm\">\n          <span className=\"text-gray-600\">업체</span>\n          <span className=\"font-medium\">{purchase.vendor_name}</span>\n        </div>\n        {purchase.project_vendor && (\n          <div className=\"flex items-center justify-between text-sm\">\n            <span className=\"text-gray-600\">PJ업체</span>\n            <span className=\"font-medium truncate max-w-[150px]\">{purchase.project_vendor}</span>\n          </div>\n        )}\n        {purchase.project_item && (\n          <div className=\"flex items-center justify-between text-sm\">\n            <span className=\"text-gray-600\">PJ ITEM</span>\n            <span className=\"font-medium truncate max-w-[150px]\">{purchase.project_item}</span>\n          </div>\n        )}\n        {purchase.sales_order_number && (\n          <div className=\"flex items-center justify-between text-sm\">\n            <span className=\"text-gray-600\">수주번호</span>\n            <span className=\"font-medium truncate max-w-[150px]\">{purchase.sales_order_number}</span>\n          </div>\n        )}\n        {purchase.item_name && (\n          <div className=\"flex items-center justify-between text-sm\">\n            <span className=\"text-gray-600\">품목</span>\n            <span className=\"font-medium truncate max-w-[150px]\">{purchase.item_name}</span>\n          </div>\n        )}\n        <div className=\"flex items-center justify-between text-sm\">\n          <span className=\"text-gray-600\">금액</span>\n          <span className=\"font-semibold text-gray-900\">\n            {(purchase.amount_value || purchase.total_amount)?.toLocaleString()} {purchase.currency}\n          </span>\n        </div>\n      </div>\n\n      {/* 입고 현황 */}\n      <div className=\"space-y-1\">\n        <div className=\"flex items-center justify-between text-xs\">\n          <span className=\"text-gray-600\">입고현황</span>\n          <span className=\"text-gray-700\">\n            {receiptProgress.received}/{receiptProgress.total} ({receiptProgress.percentage}%)\n          </span>\n        </div>\n        <div className=\"bg-gray-200 rounded-full h-2\">\n          <div \n            className={`h-2 rounded-full transition-all ${\n              receiptProgress.percentage === 100 ? 'bg-green-500' : \n              receiptProgress.percentage > 0 ? 'bg-hansl-500' : 'bg-gray-300'\n            }`}\n            style={{ width: `${receiptProgress.percentage}%` }}\n          />\n        </div>\n      </div>\n\n      {/* 결제 상태 */}\n      {purchase.is_payment_completed !== undefined && (\n        <div className=\"flex items-center justify-between text-sm\">\n          <span className=\"text-gray-600\">결제</span>\n          {purchase.is_payment_completed ? (\n            <Badge className=\"bg-green-100 text-green-800 text-xs\">완료</Badge>\n          ) : (\n            <Badge className=\"bg-gray-100 text-gray-800 text-xs\">대기</Badge>\n          )}\n        </div>\n      )}\n\n      {/* 카드 전체가 클릭 가능하므로 버튼 제거 */}\n      <div className=\"pt-2 border-t\">\n        <div className=\"flex items-center justify-center text-xs text-gray-500\">\n          <Eye className=\"w-3 h-3 mr-1\" />\n          클릭하여 상세보기\n        </div>\n      </div>\n    </div>\n  )\n})\n\nMobilePurchaseCard.displayName = 'MobilePurchaseCard'\n\nexport default MobilePurchaseCard","\"use client\";\n\n// src/alert-dialog.tsx\nimport * as React from \"react\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\";\nimport { createDialogScope } from \"@radix-ui/react-dialog\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { createSlottable } from \"@radix-ui/react-slot\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar ROOT_NAME = \"AlertDialog\";\nvar [createAlertDialogContext, createAlertDialogScope] = createContextScope(ROOT_NAME, [\n  createDialogScope\n]);\nvar useDialogScope = createDialogScope();\nvar AlertDialog = (props) => {\n  const { __scopeAlertDialog, ...alertDialogProps } = props;\n  const dialogScope = useDialogScope(__scopeAlertDialog);\n  return /* @__PURE__ */ jsx(DialogPrimitive.Root, { ...dialogScope, ...alertDialogProps, modal: true });\n};\nAlertDialog.displayName = ROOT_NAME;\nvar TRIGGER_NAME = \"AlertDialogTrigger\";\nvar AlertDialogTrigger = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeAlertDialog, ...triggerProps } = props;\n    const dialogScope = useDialogScope(__scopeAlertDialog);\n    return /* @__PURE__ */ jsx(DialogPrimitive.Trigger, { ...dialogScope, ...triggerProps, ref: forwardedRef });\n  }\n);\nAlertDialogTrigger.displayName = TRIGGER_NAME;\nvar PORTAL_NAME = \"AlertDialogPortal\";\nvar AlertDialogPortal = (props) => {\n  const { __scopeAlertDialog, ...portalProps } = props;\n  const dialogScope = useDialogScope(__scopeAlertDialog);\n  return /* @__PURE__ */ jsx(DialogPrimitive.Portal, { ...dialogScope, ...portalProps });\n};\nAlertDialogPortal.displayName = PORTAL_NAME;\nvar OVERLAY_NAME = \"AlertDialogOverlay\";\nvar AlertDialogOverlay = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeAlertDialog, ...overlayProps } = props;\n    const dialogScope = useDialogScope(__scopeAlertDialog);\n    return /* @__PURE__ */ jsx(DialogPrimitive.Overlay, { ...dialogScope, ...overlayProps, ref: forwardedRef });\n  }\n);\nAlertDialogOverlay.displayName = OVERLAY_NAME;\nvar CONTENT_NAME = \"AlertDialogContent\";\nvar [AlertDialogContentProvider, useAlertDialogContentContext] = createAlertDialogContext(CONTENT_NAME);\nvar Slottable = createSlottable(\"AlertDialogContent\");\nvar AlertDialogContent = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeAlertDialog, children, ...contentProps } = props;\n    const dialogScope = useDialogScope(__scopeAlertDialog);\n    const contentRef = React.useRef(null);\n    const composedRefs = useComposedRefs(forwardedRef, contentRef);\n    const cancelRef = React.useRef(null);\n    return /* @__PURE__ */ jsx(\n      DialogPrimitive.WarningProvider,\n      {\n        contentName: CONTENT_NAME,\n        titleName: TITLE_NAME,\n        docsSlug: \"alert-dialog\",\n        children: /* @__PURE__ */ jsx(AlertDialogContentProvider, { scope: __scopeAlertDialog, cancelRef, children: /* @__PURE__ */ jsxs(\n          DialogPrimitive.Content,\n          {\n            role: \"alertdialog\",\n            ...dialogScope,\n            ...contentProps,\n            ref: composedRefs,\n            onOpenAutoFocus: composeEventHandlers(contentProps.onOpenAutoFocus, (event) => {\n              event.preventDefault();\n              cancelRef.current?.focus({ preventScroll: true });\n            }),\n            onPointerDownOutside: (event) => event.preventDefault(),\n            onInteractOutside: (event) => event.preventDefault(),\n            children: [\n              /* @__PURE__ */ jsx(Slottable, { children }),\n              /* @__PURE__ */ jsx(DescriptionWarning, { contentRef })\n            ]\n          }\n        ) })\n      }\n    );\n  }\n);\nAlertDialogContent.displayName = CONTENT_NAME;\nvar TITLE_NAME = \"AlertDialogTitle\";\nvar AlertDialogTitle = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeAlertDialog, ...titleProps } = props;\n    const dialogScope = useDialogScope(__scopeAlertDialog);\n    return /* @__PURE__ */ jsx(DialogPrimitive.Title, { ...dialogScope, ...titleProps, ref: forwardedRef });\n  }\n);\nAlertDialogTitle.displayName = TITLE_NAME;\nvar DESCRIPTION_NAME = \"AlertDialogDescription\";\nvar AlertDialogDescription = React.forwardRef((props, forwardedRef) => {\n  const { __scopeAlertDialog, ...descriptionProps } = props;\n  const dialogScope = useDialogScope(__scopeAlertDialog);\n  return /* @__PURE__ */ jsx(DialogPrimitive.Description, { ...dialogScope, ...descriptionProps, ref: forwardedRef });\n});\nAlertDialogDescription.displayName = DESCRIPTION_NAME;\nvar ACTION_NAME = \"AlertDialogAction\";\nvar AlertDialogAction = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeAlertDialog, ...actionProps } = props;\n    const dialogScope = useDialogScope(__scopeAlertDialog);\n    return /* @__PURE__ */ jsx(DialogPrimitive.Close, { ...dialogScope, ...actionProps, ref: forwardedRef });\n  }\n);\nAlertDialogAction.displayName = ACTION_NAME;\nvar CANCEL_NAME = \"AlertDialogCancel\";\nvar AlertDialogCancel = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeAlertDialog, ...cancelProps } = props;\n    const { cancelRef } = useAlertDialogContentContext(CANCEL_NAME, __scopeAlertDialog);\n    const dialogScope = useDialogScope(__scopeAlertDialog);\n    const ref = useComposedRefs(forwardedRef, cancelRef);\n    return /* @__PURE__ */ jsx(DialogPrimitive.Close, { ...dialogScope, ...cancelProps, ref });\n  }\n);\nAlertDialogCancel.displayName = CANCEL_NAME;\nvar DescriptionWarning = ({ contentRef }) => {\n  const MESSAGE = `\\`${CONTENT_NAME}\\` requires a description for the component to be accessible for screen reader users.\n\nYou can add a description to the \\`${CONTENT_NAME}\\` by passing a \\`${DESCRIPTION_NAME}\\` component as a child, which also benefits sighted users by adding visible context to the dialog.\n\nAlternatively, you can use your own component as a description by assigning it an \\`id\\` and passing the same value to the \\`aria-describedby\\` prop in \\`${CONTENT_NAME}\\`. If the description is confusing or duplicative for sighted users, you can use the \\`@radix-ui/react-visually-hidden\\` primitive as a wrapper around your description component.\n\nFor more information, see https://radix-ui.com/primitives/docs/components/alert-dialog`;\n  React.useEffect(() => {\n    const hasDescription = document.getElementById(\n      contentRef.current?.getAttribute(\"aria-describedby\")\n    );\n    if (!hasDescription) console.warn(MESSAGE);\n  }, [MESSAGE, contentRef]);\n  return null;\n};\nvar Root2 = AlertDialog;\nvar Trigger2 = AlertDialogTrigger;\nvar Portal2 = AlertDialogPortal;\nvar Overlay2 = AlertDialogOverlay;\nvar Content2 = AlertDialogContent;\nvar Action = AlertDialogAction;\nvar Cancel = AlertDialogCancel;\nvar Title2 = AlertDialogTitle;\nvar Description2 = AlertDialogDescription;\nexport {\n  Action,\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogOverlay,\n  AlertDialogPortal,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n  Cancel,\n  Content2 as Content,\n  Description2 as Description,\n  Overlay2 as Overlay,\n  Portal2 as Portal,\n  Root2 as Root,\n  Title2 as Title,\n  Trigger2 as Trigger,\n  createAlertDialogScope\n};\n//# sourceMappingURL=index.mjs.map\n","import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/40 backdrop-blur-sm\",\n      \"data-[state=open]:animate-in data-[state=closed]:animate-out\",\n      \"data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50\",\n        \"w-full max-w-md translate-x-[-50%] translate-y-[-50%]\",\n        \"grid gap-4 bg-white border border-gray-200\",\n        \"rounded-lg p-6 shadow-professional-xl\",\n        \"duration-200\",\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out\",\n        \"data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n        \"data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95\",\n        \"data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%]\",\n        \"data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%]\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end gap-3\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-gray-800 tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-gray-600\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}","import { memo, useMemo, useState } from \"react\";\nimport { Badge } from \"@/components/ui/badge\";\nimport PurchaseDetailModal from \"./PurchaseDetailModal\";\nimport MobilePurchaseCard from \"./MobilePurchaseCard\";\nimport { createClient } from \"@/lib/supabase/client\";\nimport { toast } from \"sonner\";\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n} from \"@/components/ui/alert-dialog\";\n\ninterface Purchase {\n  id: number;\n  purchase_order_number?: string;\n  payment_category?: string; // 결제종류 필드\n  requester_name: string;\n  vendor_name: string;\n  middle_manager_status?: string;\n  final_manager_status?: string;\n  is_received: boolean;\n  total_amount: number;\n  currency: string;\n  delivery_request_date?: string;\n  request_date: string;\n  items?: any[];\n  // 추가 필드들\n  contact_name?: string;\n  item_name?: string;\n  specification?: string;\n  quantity?: number;\n  unit_price_value?: number;\n  amount_value?: number;\n  remark?: string;\n  project_vendor?: string;\n  sales_order_number?: string;\n  project_item?: string;\n  vendor_payment_schedule?: string;\n  is_payment_completed?: boolean;\n  progress_type?: string; // 선진행/일반 구분\n}\n\ninterface FastPurchaseTableProps {\n  purchases: Purchase[];\n  activeTab?: string; // 현재 활성 탭\n  currentUserRoles?: string[];\n  onRefresh?: () => void;\n}\n\n// 상태 배지 컴포넌트 (더 빠르게)\nconst StatusBadge = memo(({ purchase }: { purchase: Purchase }) => {\n  const status = purchase.is_received \n    ? 'completed'\n    : (purchase.middle_manager_status === 'approved' && purchase.final_manager_status === 'approved')\n    ? 'inProgress'\n    : (purchase.middle_manager_status === 'rejected' || purchase.final_manager_status === 'rejected')\n    ? 'rejected'\n    : 'pending';\n  \n  const config = {\n    completed: { text: '입고완료', className: 'bg-green-100 text-green-800' },\n    inProgress: { text: '구매진행', className: 'bg-hansl-100 text-hansl-800' },\n    rejected: { text: '반려', className: 'bg-red-100 text-red-800' },\n    pending: { text: '승인대기', className: 'bg-yellow-100 text-yellow-800' }\n  };\n  \n  const { text, className } = config[status];\n  return <Badge className={className}>{text}</Badge>;\n});\n\nStatusBadge.displayName = 'StatusBadge';\n\n// 구매현황 탭 전용 - 간단한 구매 상태 배지\nconst PurchaseStatusBadge = memo(({ purchase }: { purchase: Purchase }) => {\n  // 입고 상태 확인\n  const isReceived = purchase.is_received || \n                     (purchase.items && purchase.items.length > 0 && \n                      purchase.items.every((item: any) => \n                        item.is_received === true || \n                        item.delivery_status === 'received' ||\n                        item.delivery_status === 'completed'\n                      ));\n  \n  // 입고 완료되면 구매완료\n  if (isReceived) {\n    return <Badge className=\"bg-gray-100 text-gray-600 text-[11px]\">구매완료</Badge>;\n  }\n  \n  // 그 외 모든 경우는 진행중 (노란색)\n  return <Badge className=\"bg-yellow-100 text-yellow-800 text-[11px]\">진행중</Badge>;\n});\n\nPurchaseStatusBadge.displayName = 'PurchaseStatusBadge';\n\n// 모든 탭에서 공통으로 사용할 칼럼 크기 (인라인 스타일로 변경) - 간격 최적화\nconst COMMON_COLUMN_WIDTHS = {\n  approvalStatus: { style: { width: '80px', minWidth: '80px', maxWidth: '80px' }, className: \"text-center\" },\n  purchaseOrderNumber: { style: { width: '130px', minWidth: '130px', maxWidth: '130px', paddingLeft: '8px' }, className: \"\" },\n  paymentCategory: { style: { width: '80px', minWidth: '80px', maxWidth: '80px' }, className: \"text-center\" },\n  requesterName: { style: { width: '70px', minWidth: '70px', maxWidth: '70px' }, className: \"\" },\n  requestDate: { style: { width: '85px', minWidth: '85px', maxWidth: '85px' }, className: \"\" },\n  vendorName: { style: { width: '120px', minWidth: '120px', maxWidth: '120px' }, className: \"\" },\n  contactName: { style: { width: '70px', minWidth: '70px', maxWidth: '70px' }, className: \"\" },\n  deliveryRequestDate: { style: { width: '85px', minWidth: '85px', maxWidth: '85px' }, className: \"\" },\n  itemName: { style: { width: '180px', minWidth: '180px', maxWidth: '180px' }, className: \"\" },\n  specification: { style: { width: '200px', minWidth: '200px', maxWidth: '200px' }, className: \"\" },\n  quantity: { style: { width: '50px', minWidth: '50px', maxWidth: '50px' }, className: \"text-center\" },\n  unitPrice: { style: { width: '80px', minWidth: '80px', maxWidth: '80px' }, className: \"text-right\" },\n  amount: { style: { width: '90px', minWidth: '90px', maxWidth: '90px' }, className: \"text-right\" },\n  remark: { style: { width: 'auto', minWidth: '200px' }, className: \"\" },  // 비고는 auto로 남은 공간 차지\n  paymentSchedule: { style: { width: '80px', minWidth: '80px', maxWidth: '80px' }, className: \"\" },\n  purchaseStatus: { style: { width: '80px', minWidth: '80px', maxWidth: '80px' }, className: \"text-center\" },\n  projectVendor: { style: { width: '120px', minWidth: '120px', maxWidth: '120px' }, className: \"\" },\n  salesOrderNumber: { style: { width: '100px', minWidth: '100px', maxWidth: '100px' }, className: \"\" },\n  projectItem: { style: { width: '120px', minWidth: '120px', maxWidth: '120px' }, className: \"\" },\n  receiptProgress: { style: { width: '80px', minWidth: '80px', maxWidth: '80px' }, className: \"text-center\" },\n  status: { style: { width: '80px', minWidth: '80px', maxWidth: '80px' }, className: \"text-center\" },\n  receipt: { style: { width: '80px', minWidth: '80px', maxWidth: '80px' }, className: \"text-center\" },\n  paymentStatus: { style: { width: '70px', minWidth: '70px', maxWidth: '70px' }, className: \"text-center\" },\n  link: { style: { width: '80px', minWidth: '80px', maxWidth: '80px' }, className: \"\" }\n};\n\n// 승인 상태 상세 표시 컴포넌트 (승인대기 탭용)\nconst ApprovalStatusBadge = memo(({ purchase }: { purchase: Purchase }) => {\n  const middleApproved = purchase.middle_manager_status === 'approved';\n  const middleRejected = purchase.middle_manager_status === 'rejected';\n  const finalApproved = purchase.final_manager_status === 'approved';\n  const finalRejected = purchase.final_manager_status === 'rejected';\n\n  // 전체 상태 결정\n  if (middleRejected || finalRejected) {\n    // 하나라도 반려면 반려 표시\n    return (\n      <div className=\"flex flex-col items-center gap-0.5\">\n        <div className=\"flex items-center gap-0.5\">\n          <div className=\"w-1.5 h-1.5 bg-red-500 rounded-full animate-pulse\"></div>\n        </div>\n        <Badge className=\"bg-red-100 text-red-800 text-[11px] font-medium px-1.5 py-0\">\n          반려\n        </Badge>\n      </div>\n    );\n  }\n  \n  if (middleApproved && finalApproved) {\n    // 둘 다 승인이면 완료\n    return (\n      <div className=\"flex flex-col items-center gap-0.5\">\n        <div className=\"flex items-center gap-0.5\">\n          <div className=\"w-1.5 h-1.5 bg-green-500 rounded-full\"></div>\n        </div>\n        <Badge className=\"bg-green-100 text-green-800 text-[11px] font-medium px-1.5 py-0\">\n          승인완료\n        </Badge>\n      </div>\n    );\n  }\n  \n  if (middleApproved && !finalApproved && !finalRejected) {\n    // 중간승인만 완료\n    return (\n      <div className=\"flex flex-col items-center gap-0.5\">\n        <div className=\"flex items-center gap-1\">\n          <div className=\"w-1.5 h-1.5 bg-green-500 rounded-full\"></div>\n          <div className=\"w-3 h-0.5 bg-gray-300\"></div>\n          <div className=\"w-1.5 h-1.5 bg-gray-300 rounded-full\"></div>\n        </div>\n        <Badge className=\"bg-yellow-100 text-yellow-800 text-[11px] font-medium px-1.5 py-0\">\n          1차 승인\n        </Badge>\n      </div>\n    );\n  }\n  \n  // 둘 다 대기\n  return (\n    <div className=\"flex flex-col items-center gap-0.5\">\n      <div className=\"flex items-center gap-1\">\n        <div className=\"w-1.5 h-1.5 bg-gray-300 rounded-full\"></div>\n        <div className=\"w-3 h-0.5 bg-gray-300\"></div>\n        <div className=\"w-1.5 h-1.5 bg-gray-300 rounded-full\"></div>\n      </div>\n      <Badge className=\"bg-gray-100 text-gray-600 text-[11px] font-medium px-1.5 py-0\">\n        승인대기\n      </Badge>\n    </div>\n  );\n});\n\nApprovalStatusBadge.displayName = 'ApprovalStatusBadge';\n\n// 입고 현황 계산 함수\nconst getReceiptProgress = (purchase: Purchase) => {\n  // purchase_requests 테이블의 is_received 필드 우선 체크\n  if (purchase.is_received) {\n    return { received: 1, total: 1, percentage: 100 };\n  }\n  \n  // items 배열이 없으면 전체 미입고로 처리\n  if (!purchase.items || purchase.items.length === 0) {\n    return { received: 0, total: 1, percentage: 0 };\n  }\n  \n  // 개별 아이템 입고 상태 계산\n  const total = purchase.items.length;\n  const received = purchase.items.filter((item: any) => \n    item.is_received === true || \n    item.delivery_status === 'received' ||\n    item.delivery_status === 'completed'\n  ).length;\n  const percentage = total > 0 ? Math.round((received / total) * 100) : 0;\n  \n  return { received, total, percentage };\n};\n\n// 날짜 포맷 함수\nconst formatDate = (dateStr?: string) => {\n  if (!dateStr) return '-';\n  const date = new Date(dateStr);\n  return `${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`;\n};\n\n// 선진행 구분 배지\nconst ProgressTypeBadge = memo(({ type }: { type?: string }) => {\n  const isAdvance = type === '선진행' || type?.includes('선진행');\n  \n  if (isAdvance) {\n    return (\n      <Badge className=\"bg-red-500 text-white font-bold text-[11px] px-2 py-0.5\">\n        선진행\n      </Badge>\n    );\n  }\n  \n  return (\n    <Badge className=\"bg-gray-200 text-gray-700 text-[11px] px-2 py-0.5\">\n      일반\n    </Badge>\n  );\n});\n\nProgressTypeBadge.displayName = 'ProgressTypeBadge';\n\n// 테이블 행 컴포넌트 메모화\nconst TableRow = memo(({ purchase, onClick, activeTab }: { \n  purchase: Purchase; \n  onClick: (purchase: Purchase) => void;\n  activeTab?: string;\n}) => {\n  const receiptProgress = getReceiptProgress(purchase);\n  const isAdvance = purchase.progress_type === '선진행' || purchase.progress_type?.includes('선진행');\n  \n  return (\n    <tr \n      className={`border-b hover:bg-gray-100 cursor-pointer transition-colors ${isAdvance ? 'bg-red-50 hover:bg-red-100' : ''}`}\n      onClick={() => onClick(purchase)}\n    >\n      {/* 승인대기 탭에서는 승인상태를 맨 앞에 표시 */}\n      {activeTab === 'pending' && (\n        <td className={`px-2 py-1.5 whitespace-nowrap ${COMMON_COLUMN_WIDTHS.approvalStatus.className}`} style={COMMON_COLUMN_WIDTHS.approvalStatus.style}>\n          <ApprovalStatusBadge purchase={purchase} />\n        </td>\n      )}\n      {/* 구매현황 탭에서는 구매상태를 맨 앞에 표시 */}\n      {activeTab === 'purchase' && (\n        <td className={`px-2 py-1.5 whitespace-nowrap ${COMMON_COLUMN_WIDTHS.purchaseStatus.className}`} style={COMMON_COLUMN_WIDTHS.purchaseStatus.style}>\n          <PurchaseStatusBadge purchase={purchase} />\n        </td>\n      )}\n      {/* 입고현황 탭에서는 입고진행을 맨 앞에 표시 */}\n      {activeTab === 'receipt' && (\n        <td className={`px-2 py-1.5 ${COMMON_COLUMN_WIDTHS.receiptProgress.className}`} style={COMMON_COLUMN_WIDTHS.receiptProgress.style}>\n          <div className=\"flex items-center justify-center gap-1\">\n            <div className=\"bg-gray-200 rounded-full h-1.5 w-8\">\n              <div \n                className={`h-1.5 rounded-full ${\n                  receiptProgress.percentage === 100 ? 'bg-green-500' : \n                  receiptProgress.percentage > 0 ? 'bg-hansl-500' : 'bg-gray-300'\n                }`}\n                style={{ width: `${receiptProgress.percentage}%` }}\n              />\n            </div>\n            <span className=\"text-[11px] text-gray-600\">\n              {receiptProgress.percentage}%\n            </span>\n          </div>\n        </td>\n      )}\n      <td className={`px-2 py-1.5 font-medium text-[11px] whitespace-nowrap ${COMMON_COLUMN_WIDTHS.purchaseOrderNumber.className}`} style={COMMON_COLUMN_WIDTHS.purchaseOrderNumber.style}>\n        <span className=\"block truncate\" title={purchase.purchase_order_number || ''}>\n          {purchase.purchase_order_number || '-'}\n        </span>\n      </td>\n      {/* 승인대기, 입고현황, 전체항목 탭에서만 결제종류 표시 */}\n      {(activeTab === 'pending' || activeTab === 'receipt' || activeTab === 'done' || !activeTab) && (\n        <td className={`px-2 py-1.5 text-[11px] whitespace-nowrap ${COMMON_COLUMN_WIDTHS.paymentCategory.className}`} style={COMMON_COLUMN_WIDTHS.paymentCategory.style}>\n          <Badge className={`text-[11px] ${\n            purchase.payment_category === '구매요청' ? 'bg-blue-100 text-blue-800' : \n            purchase.payment_category === '경비 청구' ? 'bg-green-100 text-green-800' :\n            'bg-gray-100 text-gray-800'\n          }`}>\n            {purchase.payment_category || '-'}\n          </Badge>\n        </td>\n      )}\n      <td className={`px-2 py-1.5 text-[11px] whitespace-nowrap ${COMMON_COLUMN_WIDTHS.requesterName.className}`} style={COMMON_COLUMN_WIDTHS.requesterName.style}>\n        <span className=\"block truncate\" title={purchase.requester_name || ''}>\n          {purchase.requester_name || '-'}\n        </span>\n      </td>\n      <td className={`px-2 py-1.5 text-[11px] whitespace-nowrap ${COMMON_COLUMN_WIDTHS.requestDate.className}`} style={COMMON_COLUMN_WIDTHS.requestDate.style}>\n        {formatDate(purchase.request_date)}\n      </td>\n      <td className={`px-2 py-1.5 text-[11px] ${COMMON_COLUMN_WIDTHS.vendorName.className}`} style={COMMON_COLUMN_WIDTHS.vendorName.style}>\n        <span className=\"block truncate\" title={purchase.vendor_name || ''}>\n          {purchase.vendor_name || '-'}\n        </span>\n      </td>\n      <td className={`px-2 py-1.5 text-[11px] whitespace-nowrap ${COMMON_COLUMN_WIDTHS.contactName.className}`} style={COMMON_COLUMN_WIDTHS.contactName.style}>\n        <span className=\"block truncate\" title={purchase.contact_name || ''}>\n          {purchase.contact_name || '-'}\n        </span>\n      </td>\n      <td className={`px-2 py-1.5 text-[11px] whitespace-nowrap ${COMMON_COLUMN_WIDTHS.deliveryRequestDate.className}`} style={COMMON_COLUMN_WIDTHS.deliveryRequestDate.style}>\n        {formatDate(purchase.delivery_request_date)}\n      </td>\n      <td className={`px-2 py-1.5 text-[11px] ${COMMON_COLUMN_WIDTHS.itemName.className}`} style={COMMON_COLUMN_WIDTHS.itemName.style}>\n        <span className=\"block truncate\" title={purchase.item_name || ''}>\n          {purchase.item_name || '-'}\n        </span>\n      </td>\n      <td className={`px-2 py-1.5 text-[11px] ${COMMON_COLUMN_WIDTHS.specification.className}`} style={COMMON_COLUMN_WIDTHS.specification.style}>\n        <span className=\"block truncate\" title={purchase.specification || ''}>\n          {purchase.specification || '-'}\n        </span>\n      </td>\n      <td className={`px-2 py-1.5 text-[11px] whitespace-nowrap ${COMMON_COLUMN_WIDTHS.quantity.className}`} style={COMMON_COLUMN_WIDTHS.quantity.style}>\n        {purchase.quantity || 0}\n      </td>\n      <td className={`px-2 py-1.5 text-[11px] whitespace-nowrap ${COMMON_COLUMN_WIDTHS.unitPrice.className}`} style={COMMON_COLUMN_WIDTHS.unitPrice.style}>\n        {purchase.unit_price_value?.toLocaleString() || 0}\n      </td>\n      <td className={`px-2 py-1.5 text-[11px] font-medium whitespace-nowrap ${COMMON_COLUMN_WIDTHS.amount.className}`} style={COMMON_COLUMN_WIDTHS.amount.style}>\n        {purchase.amount_value?.toLocaleString() || purchase.total_amount?.toLocaleString() || 0}\n      </td>\n      \n      {/* 탭별 다른 칼럼 표시 */}\n      {activeTab === 'pending' && (\n        <>\n          <td className={`px-2 py-1.5 text-[11px] ${COMMON_COLUMN_WIDTHS.remark.className}`} style={COMMON_COLUMN_WIDTHS.remark.style}>\n            <span className=\"block truncate\" title={purchase.remark || ''}>\n              {purchase.remark || '-'}\n            </span>\n          </td>\n          <td className={`px-2 py-1.5 text-[11px] ${COMMON_COLUMN_WIDTHS.projectVendor.className}`} style={COMMON_COLUMN_WIDTHS.projectVendor.style}>\n            <span className=\"block truncate\" title={purchase.project_vendor || ''}>\n              {purchase.project_vendor || '-'}\n            </span>\n          </td>\n          <td className={`px-2 py-1.5 text-[11px] ${COMMON_COLUMN_WIDTHS.projectItem.className}`} style={COMMON_COLUMN_WIDTHS.projectItem.style}>\n            <span className=\"block truncate\" title={purchase.project_item || ''}>\n              {purchase.project_item || '-'}\n            </span>\n          </td>\n          <td className={`px-2 py-1.5 text-[11px] whitespace-nowrap ${COMMON_COLUMN_WIDTHS.salesOrderNumber.className}`} style={COMMON_COLUMN_WIDTHS.salesOrderNumber.style}>\n            <span className=\"block truncate\" title={purchase.sales_order_number || ''}>\n              {purchase.sales_order_number || '-'}\n            </span>\n          </td>\n        </>\n      )}\n      \n      {activeTab === 'purchase' && (\n        <>\n          <td className={`px-2 py-1.5 text-[11px] ${COMMON_COLUMN_WIDTHS.remark.className}`} style={COMMON_COLUMN_WIDTHS.remark.style}>\n            <span className=\"block truncate\" title={purchase.remark || ''}>\n              {purchase.remark || '-'}\n            </span>\n          </td>\n          <td className={`px-2 py-1.5 text-[11px] ${COMMON_COLUMN_WIDTHS.link.className}`} style={COMMON_COLUMN_WIDTHS.link.style}>\n            {purchase.link ? (\n              <a \n                href={purchase.link} \n                target=\"_blank\" \n                rel=\"noopener noreferrer\" \n                className=\"text-blue-600 hover:text-blue-800 underline truncate block\"\n                title={purchase.link}\n              >\n                링크 보기\n              </a>\n            ) : (\n              <span className=\"text-gray-400\">-</span>\n            )}\n          </td>\n          <td className={`px-2 py-1.5 text-[11px] whitespace-nowrap ${COMMON_COLUMN_WIDTHS.paymentSchedule.className}`} style={COMMON_COLUMN_WIDTHS.paymentSchedule.style}>\n            <span className=\"block truncate\" title={purchase.vendor_payment_schedule || ''}>\n              {purchase.vendor_payment_schedule || '-'}\n            </span>\n          </td>\n        </>\n      )}\n      \n      {activeTab === 'receipt' && (\n        <>\n          <td className={`px-2 py-1.5 text-[11px] ${COMMON_COLUMN_WIDTHS.remark.className}`} style={COMMON_COLUMN_WIDTHS.remark.style}>\n            <span className=\"block truncate\" title={purchase.remark || ''}>\n              {purchase.remark || '-'}\n            </span>\n          </td>\n          <td className={`px-2 py-1.5 text-[11px] ${COMMON_COLUMN_WIDTHS.projectVendor.className}`} style={COMMON_COLUMN_WIDTHS.projectVendor.style}>\n            <span className=\"block truncate\" title={purchase.project_vendor || ''}>\n              {purchase.project_vendor || '-'}\n            </span>\n          </td>\n          <td className={`px-2 py-1.5 text-[11px] ${COMMON_COLUMN_WIDTHS.projectItem.className}`} style={COMMON_COLUMN_WIDTHS.projectItem.style}>\n            <span className=\"block truncate\" title={purchase.project_item || ''}>\n              {purchase.project_item || '-'}\n            </span>\n          </td>\n          <td className={`px-2 py-1.5 text-[11px] whitespace-nowrap ${COMMON_COLUMN_WIDTHS.salesOrderNumber.className}`} style={COMMON_COLUMN_WIDTHS.salesOrderNumber.style}>\n            <span className=\"block truncate\" title={purchase.sales_order_number || ''}>\n              {purchase.sales_order_number || '-'}\n            </span>\n          </td>\n          <td className={`px-2 py-1.5 text-[11px] whitespace-nowrap ${COMMON_COLUMN_WIDTHS.paymentSchedule.className}`} style={COMMON_COLUMN_WIDTHS.paymentSchedule.style}>\n            <span className=\"block truncate\" title={purchase.vendor_payment_schedule || ''}>\n              {purchase.vendor_payment_schedule || '-'}\n            </span>\n          </td>\n        </>\n      )}\n      \n      {(activeTab === 'done' || !activeTab) && (\n        <>\n          <td className={`px-2 py-1.5 text-[11px] ${COMMON_COLUMN_WIDTHS.remark.className}`} style={COMMON_COLUMN_WIDTHS.remark.style}>\n            <span className=\"block truncate\" title={purchase.remark || ''}>\n              {purchase.remark || '-'}\n            </span>\n          </td>\n          <td className={`px-2 py-1.5 text-[11px] ${COMMON_COLUMN_WIDTHS.link.className}`} style={COMMON_COLUMN_WIDTHS.link.style}>\n            {purchase.link ? (\n              <a \n                href={purchase.link} \n                target=\"_blank\" \n                rel=\"noopener noreferrer\" \n                className=\"text-blue-600 hover:text-blue-800 underline truncate block\"\n                title={purchase.link}\n              >\n                링크 보기\n              </a>\n            ) : (\n              <span className=\"text-gray-400\">-</span>\n            )}\n          </td>\n          <td className={`px-2 py-1.5 text-[11px] ${COMMON_COLUMN_WIDTHS.projectVendor.className}`} style={COMMON_COLUMN_WIDTHS.projectVendor.style}>\n            <span className=\"block truncate\" title={purchase.project_vendor || ''}>\n              {purchase.project_vendor || '-'}\n            </span>\n          </td>\n          <td className={`px-2 py-1.5 text-[11px] ${COMMON_COLUMN_WIDTHS.projectItem.className}`} style={COMMON_COLUMN_WIDTHS.projectItem.style}>\n            <span className=\"block truncate\" title={purchase.project_item || ''}>\n              {purchase.project_item || '-'}\n            </span>\n          </td>\n          <td className={`px-2 py-1.5 text-[11px] whitespace-nowrap ${COMMON_COLUMN_WIDTHS.salesOrderNumber.className}`} style={COMMON_COLUMN_WIDTHS.salesOrderNumber.style}>\n            <span className=\"block truncate\" title={purchase.sales_order_number || ''}>\n              {purchase.sales_order_number || '-'}\n            </span>\n          </td>\n          <td className={`px-2 py-1.5 text-[11px] whitespace-nowrap ${COMMON_COLUMN_WIDTHS.paymentSchedule.className}`} style={COMMON_COLUMN_WIDTHS.paymentSchedule.style}>\n            <span className=\"block truncate\" title={purchase.vendor_payment_schedule || ''}>\n              {purchase.vendor_payment_schedule || '-'}\n            </span>\n          </td>\n          <td className={`px-2 py-1.5 ${COMMON_COLUMN_WIDTHS.status.className}`} style={COMMON_COLUMN_WIDTHS.status.style}>\n            <StatusBadge purchase={purchase} />\n          </td>\n          <td className={`px-2 py-1.5 ${COMMON_COLUMN_WIDTHS.receipt.className}`} style={COMMON_COLUMN_WIDTHS.receipt.style}>\n            <div className=\"flex items-center justify-center gap-1\">\n              <div className=\"bg-gray-200 rounded-full h-1.5 w-8\">\n                <div \n                  className={`h-1.5 rounded-full ${\n                    receiptProgress.percentage === 100 ? 'bg-green-500' : \n                    receiptProgress.percentage > 0 ? 'bg-hansl-500' : 'bg-gray-300'\n                  }`}\n                  style={{ width: `${receiptProgress.percentage}%` }}\n                />\n              </div>\n              <span className=\"text-[11px] text-gray-600\">\n                {receiptProgress.percentage}%\n              </span>\n            </div>\n          </td>\n          <td className={`px-2 py-1.5 ${COMMON_COLUMN_WIDTHS.paymentStatus.className}`} style={COMMON_COLUMN_WIDTHS.paymentStatus.style}>\n            {purchase.is_payment_completed ? (\n              <Badge className=\"bg-green-100 text-green-800 text-[11px]\">완료</Badge>\n            ) : (\n              <Badge className=\"bg-gray-100 text-gray-800 text-[11px]\">대기</Badge>\n            )}\n          </td>\n        </>\n      )}\n      \n    </tr>\n  );\n});\n\nTableRow.displayName = 'TableRow';\n\n// 메인 테이블 컴포넌트\nconst FastPurchaseTable = memo(({ purchases, activeTab = 'done', currentUserRoles = [], onRefresh }: FastPurchaseTableProps) => {\n  const [selectedPurchaseId, setSelectedPurchaseId] = useState<number | null>(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [deleteConfirmOpen, setDeleteConfirmOpen] = useState(false);\n  const [purchaseToDelete, setPurchaseToDelete] = useState<Purchase | null>(null);\n  const supabase = createClient();\n\n  // 권한 체크\n  const canEdit = currentUserRoles.includes('final_approver') || \n                  currentUserRoles.includes('app_admin') || \n                  currentUserRoles.includes('ceo');\n  \n  const canDelete = canEdit;\n\n  const handleRowClick = (purchase: Purchase) => {\n    setSelectedPurchaseId(purchase.id);\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setSelectedPurchaseId(null);\n  };\n\n\n\n  const handleConfirmDelete = async () => {\n    if (!purchaseToDelete) return;\n\n    try {\n      // 모든 아이템 삭제\n      const { error: itemsError } = await supabase\n        .from('purchase_request_items')\n        .delete()\n        .eq('purchase_request_id', purchaseToDelete.id);\n\n      if (itemsError) throw itemsError;\n\n      // 발주요청 삭제\n      const { error: requestError } = await supabase\n        .from('purchase_requests')\n        .delete()\n        .eq('id', purchaseToDelete.id);\n\n      if (requestError) throw requestError;\n\n      toast.success(\"발주요청 내역이 삭제되었습니다.\");\n      onRefresh?.();\n    } catch (error) {\n      toast.error(\"삭제 중 오류가 발생했습니다.\");\n    }\n    \n    setDeleteConfirmOpen(false);\n    setPurchaseToDelete(null);\n  };\n\n  // 탭별 테이블 헤더 메모화\n  const tableHeader = useMemo(() => {\n    if (activeTab === 'pending') {\n      return (\n        <thead className=\"bg-gray-50\">\n          <tr>\n            <th className={`px-2 py-1.5 font-medium text-gray-900 text-[11px] whitespace-nowrap ${COMMON_COLUMN_WIDTHS.approvalStatus.className}`} style={COMMON_COLUMN_WIDTHS.approvalStatus.style}>승인상태</th>\n            <th className={`px-2 py-1.5 font-medium text-gray-900 text-[11px] whitespace-nowrap text-left ${COMMON_COLUMN_WIDTHS.purchaseOrderNumber.className}`} style={COMMON_COLUMN_WIDTHS.purchaseOrderNumber.style}>발주요청번호</th>\n            <th className={`px-2 py-1.5 font-medium text-gray-900 text-[11px] whitespace-nowrap ${COMMON_COLUMN_WIDTHS.paymentCategory.className}`} style={COMMON_COLUMN_WIDTHS.paymentCategory.style}>결제종류</th>\n            <th className={`px-2 py-1.5 font-medium text-gray-900 text-[11px] whitespace-nowrap text-left ${COMMON_COLUMN_WIDTHS.requesterName.className}`} style={COMMON_COLUMN_WIDTHS.requesterName.style}>요청자</th>\n            <th className={`px-2 py-1.5 font-medium text-gray-900 text-[11px] whitespace-nowrap text-left ${COMMON_COLUMN_WIDTHS.requestDate.className}`} style={COMMON_COLUMN_WIDTHS.requestDate.style}>청구일</th>\n            <th className={`px-2 py-1.5 font-medium text-gray-900 text-[11px] text-left ${COMMON_COLUMN_WIDTHS.vendorName.className}`} style={COMMON_COLUMN_WIDTHS.vendorName.style}>업체</th>\n            <th className={`px-2 py-1.5 font-medium text-gray-900 text-[11px] whitespace-nowrap text-left ${COMMON_COLUMN_WIDTHS.contactName.className}`} style={COMMON_COLUMN_WIDTHS.contactName.style}>담당자</th>\n            <th className={`px-2 py-1.5 font-medium text-gray-900 text-[11px] whitespace-nowrap text-left ${COMMON_COLUMN_WIDTHS.deliveryRequestDate.className}`} style={COMMON_COLUMN_WIDTHS.deliveryRequestDate.style}>입고요청일</th>\n            <th className={`px-2 py-1.5 font-medium text-gray-900 text-[11px] text-left ${COMMON_COLUMN_WIDTHS.itemName.className}`} style={COMMON_COLUMN_WIDTHS.itemName.style}>품명</th>\n            <th className={`px-2 py-1.5 font-medium text-gray-900 text-[11px] text-left ${COMMON_COLUMN_WIDTHS.specification.className}`} style={COMMON_COLUMN_WIDTHS.specification.style}>규격</th>\n            <th className={`px-2 py-1.5 font-medium text-gray-900 text-[11px] whitespace-nowrap ${COMMON_COLUMN_WIDTHS.quantity.className}`} style={COMMON_COLUMN_WIDTHS.quantity.style}>수량</th>\n            <th className={`px-2 py-1.5 font-medium text-gray-900 text-[11px] whitespace-nowrap ${COMMON_COLUMN_WIDTHS.unitPrice.className}`} style={COMMON_COLUMN_WIDTHS.unitPrice.style}>단가</th>\n            <th className={`px-2 py-1.5 font-medium text-gray-900 text-[11px] whitespace-nowrap ${COMMON_COLUMN_WIDTHS.amount.className}`} style={COMMON_COLUMN_WIDTHS.amount.style}>금액</th>\n            <th className={`px-2 py-1.5 font-medium text-gray-900 text-[11px] whitespace-nowrap text-left ${COMMON_COLUMN_WIDTHS.remark.className}`} style={COMMON_COLUMN_WIDTHS.remark.style}>비고</th>\n            <th className={`px-2 py-1.5 font-medium text-gray-900 text-[11px] whitespace-nowrap text-left ${COMMON_COLUMN_WIDTHS.projectVendor.className}`} style={COMMON_COLUMN_WIDTHS.projectVendor.style}>PJ업체</th>\n            <th className={`px-2 py-1.5 font-medium text-gray-900 text-[11px] whitespace-nowrap text-left ${COMMON_COLUMN_WIDTHS.projectItem.className}`} style={COMMON_COLUMN_WIDTHS.projectItem.style}>PJ ITEM</th>\n            <th className={`px-2 py-1.5 font-medium text-gray-900 text-[11px] whitespace-nowrap text-left ${COMMON_COLUMN_WIDTHS.salesOrderNumber.className}`} style={COMMON_COLUMN_WIDTHS.salesOrderNumber.style}>수주번호</th>\n          </tr>\n        </thead>\n      );\n    }\n    \n    const baseHeaders = (\n      <>\n        <th className={`px-2 py-1.5 font-medium text-gray-900 text-[11px] whitespace-nowrap text-left ${COMMON_COLUMN_WIDTHS.purchaseOrderNumber.className}`} style={COMMON_COLUMN_WIDTHS.purchaseOrderNumber.style}>발주요청번호</th>\n        {(activeTab === 'receipt' || activeTab === 'done' || !activeTab) && (\n          <th className={`px-2 py-1.5 font-medium text-gray-900 text-[11px] whitespace-nowrap ${COMMON_COLUMN_WIDTHS.paymentCategory.className}`} style={COMMON_COLUMN_WIDTHS.paymentCategory.style}>결제종류</th>\n        )}\n        <th className={`px-2 py-1.5 font-medium text-gray-900 text-[11px] whitespace-nowrap text-left ${COMMON_COLUMN_WIDTHS.requesterName.className}`} style={COMMON_COLUMN_WIDTHS.requesterName.style}>요청자</th>\n        <th className={`px-2 py-1.5 font-medium text-gray-900 text-[11px] whitespace-nowrap text-left ${COMMON_COLUMN_WIDTHS.requestDate.className}`} style={COMMON_COLUMN_WIDTHS.requestDate.style}>청구일</th>\n        <th className={`px-2 py-1.5 font-medium text-gray-900 text-[11px] whitespace-nowrap text-left ${COMMON_COLUMN_WIDTHS.vendorName.className}`} style={COMMON_COLUMN_WIDTHS.vendorName.style}>업체</th>\n        <th className={`px-2 py-1.5 font-medium text-gray-900 text-[11px] whitespace-nowrap text-left ${COMMON_COLUMN_WIDTHS.contactName.className}`} style={COMMON_COLUMN_WIDTHS.contactName.style}>담당자</th>\n        <th className={`px-2 py-1.5 font-medium text-gray-900 text-[11px] whitespace-nowrap text-left ${COMMON_COLUMN_WIDTHS.deliveryRequestDate.className}`} style={COMMON_COLUMN_WIDTHS.deliveryRequestDate.style}>입고요청일</th>\n        <th className={`px-2 py-1.5 font-medium text-gray-900 text-[11px] text-left ${COMMON_COLUMN_WIDTHS.itemName.className}`} style={COMMON_COLUMN_WIDTHS.itemName.style}>품명</th>\n        <th className={`px-2 py-1.5 font-medium text-gray-900 text-[11px] text-left ${COMMON_COLUMN_WIDTHS.specification.className}`} style={COMMON_COLUMN_WIDTHS.specification.style}>규격</th>\n        <th className={`px-2 py-1.5 font-medium text-gray-900 text-[11px] whitespace-nowrap ${COMMON_COLUMN_WIDTHS.quantity.className}`} style={COMMON_COLUMN_WIDTHS.quantity.style}>수량</th>\n        <th className={`px-2 py-1.5 font-medium text-gray-900 text-[11px] whitespace-nowrap ${COMMON_COLUMN_WIDTHS.unitPrice.className}`} style={COMMON_COLUMN_WIDTHS.unitPrice.style}>단가</th>\n        <th className={`px-2 py-1.5 font-medium text-gray-900 text-[11px] whitespace-nowrap ${COMMON_COLUMN_WIDTHS.amount.className}`} style={COMMON_COLUMN_WIDTHS.amount.style}>금액</th>\n      </>\n    );\n\n    let additionalHeaders = null;\n    \n    if (activeTab === 'purchase') {\n      additionalHeaders = (\n        <>\n          <th className={`px-2 py-1.5 font-medium text-gray-900 text-[11px] whitespace-nowrap text-left ${COMMON_COLUMN_WIDTHS.remark.className}`} style={COMMON_COLUMN_WIDTHS.remark.style}>비고</th>\n          <th className={`px-2 py-1.5 font-medium text-gray-900 text-[11px] whitespace-nowrap text-left ${COMMON_COLUMN_WIDTHS.link.className}`} style={COMMON_COLUMN_WIDTHS.link.style}>링크</th>\n          <th className={`px-2 py-1.5 font-medium text-gray-900 text-[11px] whitespace-nowrap text-left ${COMMON_COLUMN_WIDTHS.paymentSchedule.className}`} style={COMMON_COLUMN_WIDTHS.paymentSchedule.style}>지출예정일</th>\n        </>\n      );\n    } else if (activeTab === 'receipt') {\n      additionalHeaders = (\n        <>\n          <th className={`px-2 py-1.5 font-medium text-gray-900 text-[11px] whitespace-nowrap text-left ${COMMON_COLUMN_WIDTHS.remark.className}`} style={COMMON_COLUMN_WIDTHS.remark.style}>비고</th>\n          <th className={`px-2 py-1.5 font-medium text-gray-900 text-[11px] whitespace-nowrap text-left ${COMMON_COLUMN_WIDTHS.projectVendor.className}`} style={COMMON_COLUMN_WIDTHS.projectVendor.style}>PJ업체</th>\n          <th className={`px-2 py-1.5 font-medium text-gray-900 text-[11px] whitespace-nowrap text-left ${COMMON_COLUMN_WIDTHS.projectItem.className}`} style={COMMON_COLUMN_WIDTHS.projectItem.style}>PJ ITEM</th>\n          <th className={`px-2 py-1.5 font-medium text-gray-900 text-[11px] whitespace-nowrap text-left ${COMMON_COLUMN_WIDTHS.salesOrderNumber.className}`} style={COMMON_COLUMN_WIDTHS.salesOrderNumber.style}>수주번호</th>\n          <th className={`px-2 py-1.5 font-medium text-gray-900 text-[11px] whitespace-nowrap text-left ${COMMON_COLUMN_WIDTHS.paymentSchedule.className}`} style={COMMON_COLUMN_WIDTHS.paymentSchedule.style}>지출예정일</th>\n        </>\n      );\n    } else {\n      // done 또는 기본\n      additionalHeaders = (\n        <>\n          <th className={`px-2 py-1.5 font-medium text-gray-900 text-[11px] whitespace-nowrap text-left ${COMMON_COLUMN_WIDTHS.remark.className}`} style={COMMON_COLUMN_WIDTHS.remark.style}>비고</th>\n          <th className={`px-2 py-1.5 font-medium text-gray-900 text-[11px] whitespace-nowrap text-left ${COMMON_COLUMN_WIDTHS.link.className}`} style={COMMON_COLUMN_WIDTHS.link.style}>링크</th>\n          <th className={`px-2 py-1.5 font-medium text-gray-900 text-[11px] whitespace-nowrap text-left ${COMMON_COLUMN_WIDTHS.projectVendor.className}`} style={COMMON_COLUMN_WIDTHS.projectVendor.style}>PJ업체</th>\n          <th className={`px-2 py-1.5 font-medium text-gray-900 text-[11px] whitespace-nowrap text-left ${COMMON_COLUMN_WIDTHS.projectItem.className}`} style={COMMON_COLUMN_WIDTHS.projectItem.style}>PJ ITEM</th>\n          <th className={`px-2 py-1.5 font-medium text-gray-900 text-[11px] whitespace-nowrap text-left ${COMMON_COLUMN_WIDTHS.salesOrderNumber.className}`} style={COMMON_COLUMN_WIDTHS.salesOrderNumber.style}>수주번호</th>\n          <th className={`px-2 py-1.5 font-medium text-gray-900 text-[11px] whitespace-nowrap text-left ${COMMON_COLUMN_WIDTHS.paymentSchedule.className}`} style={COMMON_COLUMN_WIDTHS.paymentSchedule.style}>지출예정일</th>\n          <th className={`px-2 py-1.5 font-medium text-gray-900 text-[11px] whitespace-nowrap ${COMMON_COLUMN_WIDTHS.status.className}`} style={COMMON_COLUMN_WIDTHS.status.style}>상태</th>\n          <th className={`px-2 py-1.5 font-medium text-gray-900 text-[11px] whitespace-nowrap ${COMMON_COLUMN_WIDTHS.receipt.className}`} style={COMMON_COLUMN_WIDTHS.receipt.style}>입고</th>\n          <th className={`px-2 py-1.5 font-medium text-gray-900 text-[11px] whitespace-nowrap ${COMMON_COLUMN_WIDTHS.paymentStatus.className}`} style={COMMON_COLUMN_WIDTHS.paymentStatus.style}>결제</th>\n        </>\n      );\n    }\n\n    return (\n      <thead className=\"bg-gray-50\">\n        <tr>\n          {/* 구매현황 탭에서는 구매상태를 맨 앞에 */}\n          {activeTab === 'purchase' && (\n            <th className={`px-2 py-1.5 font-medium text-gray-900 text-[11px] whitespace-nowrap ${COMMON_COLUMN_WIDTHS.purchaseStatus.className}`} style={COMMON_COLUMN_WIDTHS.purchaseStatus.style}>구매상태</th>\n          )}\n          {/* 입고현황 탭에서는 입고진행을 맨 앞에 */}\n          {activeTab === 'receipt' && (\n            <th className={`px-2 py-1.5 font-medium text-gray-900 text-[11px] whitespace-nowrap ${COMMON_COLUMN_WIDTHS.receiptProgress.className}`} style={COMMON_COLUMN_WIDTHS.receiptProgress.style}>입고진행</th>\n          )}\n          {baseHeaders}\n          {additionalHeaders}\n        </tr>\n      </thead>\n    );\n  }, [activeTab]);\n\n  return (\n    <>\n      {/* 데스크톱 테이블 뷰 - 강화된 반응형 처리 */}\n      <div className=\"hidden md:block w-full\">\n        <div className=\"overflow-x-auto border rounded-lg\" style={{ maxWidth: 'calc(100vw - 4rem)' }}>\n          <table className=\"w-full min-w-fit\">\n            {tableHeader}\n            <tbody>\n              {purchases.map((purchase) => (\n                <TableRow \n                  key={purchase.id} \n                  purchase={purchase} \n                  onClick={handleRowClick}\n                  activeTab={activeTab}\n                />\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n      \n      {/* 태블릿 컴팩트 뷰 */}\n      <div className=\"hidden sm:block md:hidden w-full\">\n        <div className=\"overflow-x-auto border rounded-lg\">\n          <table className=\"w-full min-w-[800px] text-[11px]\">\n            <thead className=\"bg-gray-50\">\n              <tr>\n                <th className=\"text-left p-2 font-medium text-gray-900 w-[100px]\">발주요청번호</th>\n                <th className=\"text-left p-2 font-medium text-gray-900 w-[80px]\">요청자</th>\n                <th className=\"text-left p-2 font-medium text-gray-900 w-[120px]\">업체</th>\n                <th className=\"text-left p-2 font-medium text-gray-900\">품명</th>\n                <th className=\"text-right p-2 font-medium text-gray-900 w-[90px]\">금액</th>\n                <th className=\"text-center p-2 font-medium text-gray-900 w-[80px]\">상태</th>\n              </tr>\n            </thead>\n            <tbody>\n              {purchases.map((purchase) => (\n                <tr \n                  key={purchase.id}\n                  className=\"border-b hover:bg-gray-50 cursor-pointer\"\n                  onClick={() => handleRowClick(purchase)}\n                >\n                  <td className=\"p-2 font-medium\">{purchase.purchase_order_number || '-'}</td>\n                  <td className=\"p-2\">{purchase.requester_name}</td>\n                  <td className=\"p-2 truncate\" title={purchase.vendor_name}>{purchase.vendor_name}</td>\n                  <td className=\"p-2 truncate\" title={purchase.item_name}>{purchase.item_name || '-'}</td>\n                  <td className=\"p-2 text-right font-medium\">\n                    {purchase.amount_value?.toLocaleString() || purchase.total_amount?.toLocaleString() || 0}\n                  </td>\n                  <td className=\"p-2 text-center\">\n                    <StatusBadge purchase={purchase} />\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n      \n      {/* 모바일 카드 뷰 */}\n      <div className=\"sm:hidden space-y-3\">\n        {purchases.map((purchase) => (\n          <MobilePurchaseCard\n            key={purchase.id}\n            purchase={purchase}\n            onClick={() => handleRowClick(purchase)}\n          />\n        ))}\n      </div>\n      \n      {/* 통합 상세/편집 모달 */}\n      <PurchaseDetailModal\n        purchaseId={selectedPurchaseId}\n        isOpen={isModalOpen}\n        onClose={handleCloseModal}\n        currentUserRoles={currentUserRoles}\n        activeTab={activeTab}\n        onRefresh={onRefresh}\n        onDelete={(purchase) => {\n          setPurchaseToDelete(purchase as Purchase);\n          setDeleteConfirmOpen(true);\n        }}\n      />\n\n      {/* 삭제 확인 다이얼로그 */}\n      <AlertDialog open={deleteConfirmOpen} onOpenChange={setDeleteConfirmOpen}>\n        <AlertDialogContent>\n          <AlertDialogHeader>\n            <AlertDialogTitle>발주요청 내역 삭제</AlertDialogTitle>\n            <AlertDialogDescription>\n              발주요청번호 {purchaseToDelete?.purchase_order_number}를 삭제하시겠습니까?\n              이 작업은 되돌릴 수 없습니다.\n            </AlertDialogDescription>\n          </AlertDialogHeader>\n          <AlertDialogFooter>\n            <AlertDialogCancel>취소</AlertDialogCancel>\n            <AlertDialogAction\n              onClick={handleConfirmDelete}\n              className=\"bg-red-600 hover:bg-red-700\"\n            >\n              삭제\n            </AlertDialogAction>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n    </>\n  );\n});\n\nFastPurchaseTable.displayName = 'FastPurchaseTable';\n\nexport default FastPurchaseTable;","\nimport { useState } from \"react\";\nimport { X, Edit2, Save, Plus, Trash2 } from \"lucide-react\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from \"@/components/ui/dialog\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { format } from \"date-fns\";\nimport { createClient } from \"@/lib/supabase/client\";\nimport { toast } from \"sonner\";\n\ninterface PurchaseItem {\n  id?: number;\n  line_number: number;\n  item_name: string;\n  specification: string;\n  quantity: number;\n  unit_price_value: number;\n  amount_value: number;\n  remark?: string;\n  link?: string;\n  is_received?: boolean;\n  delivery_status?: string;\n}\n\ninterface PurchaseItemsModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  purchase: {\n    id: number;\n    purchase_order_number?: string;\n    vendor_name: string;\n    requester_name: string;\n    project_vendor: string;\n    sales_order_number: string;\n    project_item: string;\n    request_date: string;\n    delivery_request_date?: string;\n    currency: string;\n    items?: PurchaseItem[];\n    total_amount: number;\n  };\n  isAdmin: boolean;\n  onUpdate: () => void;\n}\n\nexport default function PurchaseItemsModal({ isOpen, onClose, purchase, isAdmin, onUpdate }: PurchaseItemsModalProps) {\n  const [editingItems, setEditingItems] = useState<PurchaseItem[]>(purchase.items || []);\n  const [isEditing, setIsEditing] = useState(false);\n  const supabase = createClient();\n  \n  // 품목 수정 시작\n  const handleEditStart = () => {\n    setIsEditing(true);\n    setEditingItems([...purchase.items || []]);\n  };\n\n  // 품목 수정 취소\n  const handleEditCancel = () => {\n    setIsEditing(false);\n    setEditingItems(purchase.items || []);\n  };\n\n  // 품목 값 변경\n  const handleItemChange = (index: number, field: keyof PurchaseItem, value: any) => {\n    const newItems = [...editingItems];\n    newItems[index] = {\n      ...newItems[index],\n      [field]: field === 'quantity' || field === 'unit_price_value' || field === 'amount_value' ? Number(value) : value\n    };\n    \n    // 금액 자동 계산 (amount_value를 직접 수정하는 경우가 아닐 때만)\n    if (field === 'quantity' || field === 'unit_price_value') {\n      newItems[index].amount_value = newItems[index].quantity * newItems[index].unit_price_value;\n    }\n    \n    setEditingItems(newItems);\n  };\n\n  // 새 품목 추가\n  const handleAddItem = () => {\n    const newItem: PurchaseItem = {\n      line_number: editingItems.length + 1,\n      item_name: '',\n      specification: '',\n      quantity: 0,\n      unit_price_value: 0,\n      amount_value: 0,\n      remark: '',\n      is_received: false\n    };\n    setEditingItems([...editingItems, newItem]);\n  };\n\n  // 품목 삭제\n  const handleDeleteItem = (index: number) => {\n    const newItems = editingItems.filter((_, i) => i !== index);\n    // line_number 재정렬\n    newItems.forEach((item, i) => {\n      item.line_number = i + 1;\n    });\n    setEditingItems(newItems);\n  };\n\n  // 품목 저장\n  const handleSave = async () => {\n    try {\n      // 기존 품목 삭제\n      await supabase\n        .from('purchase_request_items')\n        .delete()\n        .eq('purchase_request_id', purchase.id);\n\n      // 새 품목 추가\n      const itemsToInsert = editingItems.map(item => ({\n        purchase_request_id: purchase.id,\n        purchase_order_number: purchase.purchase_order_number,\n        line_number: item.line_number,\n        item_name: item.item_name,\n        specification: item.specification,\n        quantity: item.quantity,\n        unit_price_value: item.unit_price_value,\n        amount_value: item.amount_value,\n        remark: item.remark,\n        link: item.link,\n        is_received: item.is_received || false,\n        delivery_status: item.delivery_status || 'pending'\n      }));\n\n      const { error } = await supabase\n        .from('purchase_request_items')\n        .insert(itemsToInsert);\n\n      if (error) throw error;\n\n      // 총금액 업데이트\n      const totalAmount = editingItems.reduce((sum, item) => sum + item.amount_value, 0);\n      await supabase\n        .from('purchase_requests')\n        .update({ total_amount: totalAmount })\n        .eq('id', purchase.id);\n\n      toast.success('품목이 수정되었습니다.');\n      setIsEditing(false);\n      onUpdate();\n      onClose();\n    } catch (error) {\n      toast.error('저장 중 오류가 발생했습니다.');\n    }\n  };\n  \n  const items = isEditing ? editingItems : (purchase.items || []);\n  const totalAmount = items.reduce((sum, item) => sum + (item.amount_value || 0), 0);\n  \n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent className=\"w-full max-w-[95vw] sm:max-w-6xl max-h-[80vh] overflow-hidden flex flex-col bg-white\">\n        <DialogHeader className=\"flex-shrink-0\">\n          <div className=\"flex items-center justify-between\">\n            <DialogTitle className=\"text-xl font-bold\">\n              발주 상세 항목 - {purchase.purchase_order_number}\n            </DialogTitle>\n            <div className=\"flex items-center gap-2\">\n              {isAdmin && !isEditing && (\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={handleEditStart}\n                >\n                  <Edit2 className=\"h-4 w-4 mr-1\" />\n                  편집\n                </Button>\n              )}\n              {isEditing && (\n                <>\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={handleAddItem}\n                  >\n                    <Plus className=\"h-4 w-4 mr-1\" />\n                    품목 추가\n                  </Button>\n                  <Button\n                    variant=\"default\"\n                    size=\"sm\"\n                    onClick={handleSave}\n                  >\n                    <Save className=\"h-4 w-4 mr-1\" />\n                    저장\n                  </Button>\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    onClick={handleEditCancel}\n                  >\n                    취소\n                  </Button>\n                </>\n              )}\n              <Button\n                variant=\"ghost\"\n                size=\"icon\"\n                onClick={onClose}\n                className=\"h-6 w-6\"\n              >\n                <X className=\"h-4 w-4\" />\n              </Button>\n            </div>\n          </div>\n        </DialogHeader>\n        \n        <div className=\"flex-shrink-0 grid grid-cols-2 md:grid-cols-4 gap-4 py-4 border-b\">\n          <div>\n            <p className=\"text-sm text-gray-500\">업체명</p>\n            <p className=\"font-medium\">{purchase.vendor_name}</p>\n          </div>\n          <div>\n            <p className=\"text-sm text-gray-500\">요청자</p>\n            <p className=\"font-medium\">{purchase.requester_name}</p>\n          </div>\n          <div>\n            <p className=\"text-sm text-gray-500\">프로젝트</p>\n            <p className=\"font-medium truncate\" title={purchase.project_vendor}>\n              {purchase.project_vendor}\n            </p>\n          </div>\n          <div>\n            <p className=\"text-sm text-gray-500\">납기일</p>\n            <p className=\"font-medium\">\n              {purchase.delivery_request_date && \n                format(new Date(purchase.delivery_request_date), 'yyyy-MM-dd')}\n            </p>\n          </div>\n        </div>\n        \n        <div className=\"flex-1 overflow-auto\">\n          <Table>\n            <TableHeader className=\"sticky top-0 bg-white z-10\">\n              <TableRow>\n                <TableHead className=\"w-12\">No.</TableHead>\n                <TableHead>품목</TableHead>\n                <TableHead>규격</TableHead>\n                <TableHead className=\"text-right\">수량</TableHead>\n                <TableHead className=\"text-right\">단가</TableHead>\n                <TableHead className=\"text-right\">금액</TableHead>\n                <TableHead>입고상태</TableHead>\n                <TableHead>비고</TableHead>\n                {isEditing && <TableHead className=\"w-20\">삭제</TableHead>}\n              </TableRow>\n            </TableHeader>\n            <TableBody>\n              {items.map((item, index) => (\n                <TableRow key={item.id || index}>\n                  <TableCell className=\"font-medium\">{item.line_number || index + 1}</TableCell>\n                  <TableCell>\n                    {isEditing ? (\n                      <Input\n                        value={item.item_name}\n                        onChange={(e) => handleItemChange(index, 'item_name', e.target.value)}\n                        className=\"h-8 text-sm\"\n                      />\n                    ) : (\n                      <div className=\"sm:max-w-[200px]\">\n                        <p className=\"font-medium truncate\" title={item.item_name}>\n                          {item.item_name}\n                        </p>\n                      </div>\n                    )}\n                  </TableCell>\n                  <TableCell>\n                    {isEditing ? (\n                      <Input\n                        value={item.specification}\n                        onChange={(e) => handleItemChange(index, 'specification', e.target.value)}\n                        className=\"h-8 text-sm\"\n                      />\n                    ) : (\n                      <div className=\"sm:max-w-[150px] truncate\" title={item.specification}>\n                        {item.specification}\n                      </div>\n                    )}\n                  </TableCell>\n                  <TableCell className=\"text-right\">\n                    {isEditing ? (\n                      <Input\n                        type=\"number\"\n                        value={item.quantity}\n                        onChange={(e) => handleItemChange(index, 'quantity', e.target.value)}\n                        className=\"h-8 text-sm text-right\"\n                      />\n                    ) : (\n                      <span className=\"font-medium\">{item.quantity.toLocaleString()}</span>\n                    )}\n                  </TableCell>\n                  <TableCell className=\"text-right\">\n                    {isEditing ? (\n                      <Input\n                        type=\"number\"\n                        value={item.unit_price_value}\n                        onChange={(e) => handleItemChange(index, 'unit_price_value', e.target.value)}\n                        className=\"h-8 text-sm text-right\"\n                      />\n                    ) : (\n                      <span>{item.unit_price_value.toLocaleString()} {purchase.currency}</span>\n                    )}\n                  </TableCell>\n                  <TableCell className=\"text-right\">\n                    {isEditing ? (\n                      <Input\n                        type=\"number\"\n                        value={item.amount_value}\n                        onChange={(e) => handleItemChange(index, 'amount_value', e.target.value)}\n                        className=\"h-8 text-sm text-right font-medium\"\n                      />\n                    ) : (\n                      <span className=\"font-medium\">{item.amount_value.toLocaleString()} {purchase.currency}</span>\n                    )}\n                  </TableCell>\n                  <TableCell>\n                    {item.is_received ? (\n                      <Badge className=\"bg-green-100 text-green-800\">입고완료</Badge>\n                    ) : (\n                      <Badge variant=\"outline\">대기</Badge>\n                    )}\n                  </TableCell>\n                  <TableCell>\n                    {isEditing ? (\n                      <Input\n                        value={item.remark || ''}\n                        onChange={(e) => handleItemChange(index, 'remark', e.target.value)}\n                        className=\"h-8 text-sm\"\n                        placeholder=\"비고\"\n                      />\n                    ) : (\n                      <div className=\"sm:max-w-[150px]\">\n                        <span className=\"text-sm text-gray-500 truncate block\" title={item.remark}>\n                          {item.remark || '-'}\n                        </span>\n                      </div>\n                    )}\n                  </TableCell>\n                  {isEditing && (\n                    <TableCell>\n                      <Button\n                        variant=\"ghost\"\n                        size=\"icon\"\n                        onClick={() => handleDeleteItem(index)}\n                        className=\"h-8 w-8 text-red-500 hover:text-red-700\"\n                      >\n                        <Trash2 className=\"h-4 w-4\" />\n                      </Button>\n                    </TableCell>\n                  )}\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </div>\n        \n        <div className=\"flex-shrink-0 border-t pt-4 flex justify-between items-center\">\n          <div className=\"text-sm text-gray-500\">\n            총 {items.length}개 품목\n          </div>\n          <div className=\"text-lg font-bold\">\n            총 금액: {totalAmount.toLocaleString()} {purchase.currency}\n          </div>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n}","\nimport { useState, useCallback } from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { usePurchaseData } from \"@/hooks/usePurchaseData\";\nimport { useFastPurchaseFilters } from \"@/hooks/useFastPurchaseFilters\";\nimport FastPurchaseTable from \"@/components/purchase/FastPurchaseTable\";\n\nimport { Search, Filter, Plus, Package } from \"lucide-react\";\nimport { generatePurchaseOrderExcelJS, PurchaseOrderData } from \"@/utils/exceljs/generatePurchaseOrderExcel\";\nimport { Input } from \"@/components/ui/input\";\nimport PurchaseItemsModal from \"@/components/purchase/PurchaseItemsModal\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\n// Tabs 컴포넌트를 제거하고 직접 구현 (hanslwebapp 방식)\nimport { Button } from \"@/components/ui/button\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { createClient } from \"@/lib/supabase/client\";\nimport { format } from \"date-fns\";\nimport { toast } from \"sonner\";\n\n// 발주(구매) 데이터의 타입 정의\ninterface Purchase {\n  id: number;\n  purchase_order_number?: string;\n  request_date: string;\n  delivery_request_date?: string;\n  progress_type: string;\n  is_payment_completed: boolean;\n  payment_category: string;\n  currency: string;\n  request_type: string;\n  vendor_name: string;\n  vendor_id?: number;\n  contact_id?: number;\n  requester_name: string;\n  project_vendor: string;\n  sales_order_number: string;\n  project_item: string;\n  middle_manager_status?: string;\n  final_manager_status?: string;\n  total_amount: number;\n  is_received: boolean;\n\n  is_po_download?: boolean;\n  items?: any[];\n}\n\ninterface PurchaseListMainProps {\n  onEmailToggle?: () => void;\n  showEmailButton?: boolean;\n}\n\n// 화면 상단의 탭(진행상태별) 목록\nconst NAV_TABS: { key: string; label: string }[] = [\n  { key: 'pending', label: '승인대기' },\n  { key: 'purchase', label: '구매 현황' },\n  { key: 'receipt', label: '입고 현황' },\n  { key: 'done', label: '전체 항목' },\n];\n\n// 발주 목록 메인 컴포넌트\nexport default function PurchaseListMain({ onEmailToggle, showEmailButton = true }: PurchaseListMainProps) {\n  const navigate = useNavigate();\n  const supabase = createClient();\n  const [editingId, setEditingId] = useState<number | null>(null);\n  const [editingData, setEditingData] = useState<any>({});\n  const [selectedPurchase, setSelectedPurchase] = useState<Purchase | null>(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  \n  // 발주 데이터 및 사용자 정보\n  const {\n    purchases,\n    vendors,\n    employees,\n    loading,\n    currentUserRoles,\n    currentUserName,\n    refreshPurchases: loadPurchases\n  } = usePurchaseData();\n  \n  const isAdmin = currentUserRoles?.includes('app_admin');\n\n  // 필터링 및 탭 관리\n  const {\n    activeTab,\n    searchTerm,\n    vendorFilter,\n    dateFromFilter,\n    dateToFilter,\n    selectedEmployee,\n    purchaseNumberFilter,\n    itemNameFilter,\n    specificationFilter,\n    approvalStatusFilter,\n    remarkFilter,\n    setActiveTab,\n    setSearchTerm,\n    setVendorFilter,\n    setDateFromFilter,\n    setDateToFilter,\n    setSelectedEmployee,\n    setPurchaseNumberFilter,\n    setItemNameFilter,\n    setSpecificationFilter,\n    setApprovalStatusFilter,\n    setRemarkFilter,\n    filteredPurchases,\n    tabCounts\n  } = useFastPurchaseFilters(purchases, currentUserRoles, currentUserName);\n  \n\n  // 상태에 따른 배지 생성\n  const getStatusBadge = (purchase: Purchase) => {\n    if (purchase.is_received) {\n      return <Badge className=\"bg-green-50 text-green-700\">입고완료</Badge>;\n    } else if (purchase.middle_manager_status === 'approved' && purchase.final_manager_status === 'approved') {\n      return <Badge className=\"bg-hansl-50 text-hansl-700\">구매진행</Badge>;\n    } else if (purchase.middle_manager_status === 'rejected' || purchase.final_manager_status === 'rejected') {\n      return <Badge className=\"bg-red-50 text-red-700\">반려</Badge>;\n    } else {\n      return <Badge className=\"bg-yellow-50 text-yellow-700\">승인대기</Badge>;\n    }\n  };\n\n  // 입고 현황 계산\n  const getReceiptProgress = (purchase: Purchase) => {\n    if (!purchase.items || purchase.items.length === 0) return { received: 0, total: 0, percentage: 0 };\n    \n    const total = purchase.items.length;\n    const received = purchase.items.filter(item => item.is_received || item.delivery_status === 'received').length;\n    const percentage = total > 0 ? Math.round((received / total) * 100) : 0;\n    \n    return { received, total, percentage };\n  };\n\n  // 선진행 체크 함수\n  const isAdvancePayment = (progress_type?: string) => {\n    return progress_type === '선진행' || progress_type?.trim() === '선진행' || progress_type?.includes('선진행');\n  };\n\n  // 편집 시작\n  const handleEditStart = (purchase: Purchase) => {\n    if (!currentUserRoles || !currentUserRoles.includes('app_admin')) return;\n    setEditingId(purchase.id);\n    setEditingData({\n      vendor_name: purchase.vendor_name,\n      project_vendor: purchase.project_vendor,\n      sales_order_number: purchase.sales_order_number,\n      project_item: purchase.project_item,\n      delivery_request_date: purchase.delivery_request_date ? \n        purchase.delivery_request_date.split('T')[0] : '',\n      total_amount: purchase.total_amount,\n    });\n  };\n\n  // 편집 저장\n  const handleEditSave = async () => {\n    if (!currentUserRoles || !currentUserRoles.includes('app_admin') || !editingId) return;\n    \n    try {\n      const { error } = await supabase\n        .from('purchase_requests')\n        .update(editingData)\n        .eq('id', editingId);\n\n      if (error) throw error;\n\n      toast.success('수정이 완료되었습니다.');\n      setEditingId(null);\n      setEditingData({});\n      await loadPurchases();\n    } catch (error) {\n      toast.error('수정 중 오류가 발생했습니다.');\n    }\n  };\n\n  // 편집 취소\n  const handleEditCancel = () => {\n    setEditingId(null);\n    setEditingData({});\n  };\n\n  // 엑셀 다운로드\n  const handleExcelDownload = async (purchase: Purchase) => {\n    try {\n      // DB에서 직접 모든 품목 조회\n      const { data: purchaseRequest, error: requestError } = await supabase\n        .from('purchase_requests')\n        .select('*')\n        .eq('purchase_order_number', purchase.purchase_order_number)\n        .single();\n\n      if (requestError || !purchaseRequest) {\n        toast.error('해당 발주요청번호의 데이터를 찾을 수 없습니다.');\n        return;\n      }\n\n      // 품목 데이터 조회\n      const { data: orderItems, error: itemsError } = await supabase\n        .from('purchase_request_items')\n        .select('*')\n        .eq('purchase_order_number', purchase.purchase_order_number)\n        .order('line_number');\n\n      if (itemsError || !orderItems || orderItems.length === 0) {\n        toast.error('해당 발주요청번호의 품목 데이터를 찾을 수 없습니다.');\n        return;\n      }\n\n      // 업체 상세 정보 및 담당자 정보 조회\n      let vendorInfo = {\n        vendor_name: purchase.vendor_name,\n        vendor_phone: '',\n        vendor_fax: '',\n        vendor_contact_name: '',\n        vendor_payment_schedule: ''\n      };\n\n      try {\n        const vendorId = purchaseRequest.vendor_id || purchase.vendor_id;\n        const contactId = purchaseRequest.contact_id || purchase.contact_id;\n        \n        // vendor 정보 조회\n        if (vendorId) {\n          const { data: vendorData, error: vendorError } = await supabase\n            .from('vendors')\n            .select('vendor_phone, vendor_fax, vendor_payment_schedule')\n            .eq('id', vendorId)\n            .single();\n\n          if (vendorData && !vendorError) {\n            vendorInfo.vendor_phone = vendorData.vendor_phone || '';\n            vendorInfo.vendor_fax = vendorData.vendor_fax || '';\n            vendorInfo.vendor_payment_schedule = vendorData.vendor_payment_schedule || '';\n          }\n        }\n\n        // vendor_contacts에서 contact_id로 담당자 정보 조회\n        if (contactId) {\n          const { data: contactData, error: contactError } = await supabase\n            .from('vendor_contacts')\n            .select('contact_name, contact_phone, contact_email')\n            .eq('id', contactId)\n            .single();\n          if (contactData && !contactError) {\n            vendorInfo.vendor_contact_name = contactData.contact_name || '';\n          }\n        }\n      } catch (error) {\n      }\n\n      const excelData: PurchaseOrderData = {\n        purchase_order_number: purchaseRequest.purchase_order_number || '',\n        request_date: purchaseRequest.request_date,\n        delivery_request_date: purchaseRequest.delivery_request_date,\n        requester_name: purchaseRequest.requester_name,\n        vendor_name: vendorInfo.vendor_name,\n        vendor_contact_name: vendorInfo.vendor_contact_name,\n        vendor_phone: vendorInfo.vendor_phone,\n        vendor_fax: vendorInfo.vendor_fax,\n        project_vendor: purchaseRequest.project_vendor,\n        sales_order_number: purchaseRequest.sales_order_number,\n        project_item: purchaseRequest.project_item,\n        vendor_payment_schedule: vendorInfo.vendor_payment_schedule,\n        items: orderItems.map((item: any) => ({\n          line_number: item.line_number,\n          item_name: item.item_name,\n          specification: item.specification,\n          quantity: item.quantity,\n          unit_price_value: item.unit_price_value,\n          amount_value: item.amount_value,\n          remark: item.remark,\n          currency: purchaseRequest.currency || 'KRW'\n        }))\n      };\n\n      // 코드 기반 ExcelJS 생성 (템플릿 없이 서식 직접 정의)\n      const blob = await generatePurchaseOrderExcelJS(excelData);\n      \n      // 다운로드용 파일명: 발주서_{업체명}_발주요청번호\n      const downloadFilename = `발주서_${excelData.vendor_name}_${excelData.purchase_order_number}.xlsx`;\n\n      // 사용자에게 즉시 다운로드 제공\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = downloadFilename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      window.URL.revokeObjectURL(url);\n      \n      toast.success('엑셀 파일이 다운로드되었습니다.');\n      \n      // DB에 다운로드 완료 플래그(is_po_download) 업데이트 - raw_material_manager/consumable_manager만 해당\n      try {\n        const isLeadBuyer = currentUserRoles && (\n          currentUserRoles.includes('raw_material_manager') || \n          currentUserRoles.includes('consumable_manager') ||\n          currentUserRoles.includes('purchase_manager')\n        );\n\n        if (isLeadBuyer) {\n          const { error: downloadFlagErr } = await supabase\n            .from('purchase_requests')\n            .update({ is_po_download: true })\n            .eq('purchase_order_number', purchase.purchase_order_number);\n          if (downloadFlagErr) {\n          } else {\n            // 화면 업데이트\n            await loadPurchases();\n          }\n        }\n      } catch (flagErr) {\n      }\n    } catch (error) {\n      toast.error('엑셀 다운로드에 실패했습니다.');\n    }\n  };\n\n  // 최적화된 핸들러들\n  const handleReceiptComplete = async (purchaseId: number) => {\n    try {\n      const { error } = await supabase\n        .from('purchase_requests')\n        .update({ \n          is_received: true,\n          received_at: new Date().toISOString()\n        })\n        .eq('id', purchaseId);\n\n      if (error) throw error;\n      \n      // 개별 품목도 모두 입고완료 처리\n      await supabase\n        .from('purchase_request_items')\n        .update({ \n          is_received: true,\n          delivery_status: 'received'\n        })\n        .eq('purchase_request_id', purchaseId);\n      \n      toast.success('입고완료 처리되었습니다.');\n      await loadPurchases();\n    } catch (error) {\n      toast.error('처리 중 오류가 발생했습니다.');\n    }\n  };\n\n  const handlePaymentComplete = async (purchaseId: number) => {\n    try {\n      const { error } = await supabase\n        .from('purchase_requests')\n        .update({ \n          is_payment_completed: true,\n          payment_completed_at: new Date().toISOString()\n        })\n        .eq('id', purchaseId);\n\n      if (error) throw error;\n      \n      toast.success('구매완료 처리되었습니다.');\n      await loadPurchases();\n    } catch (error) {\n      toast.error('처리 중 오류가 발생했습니다.');\n    }\n  };\n\n  const handleItemsClick = (purchase: Purchase) => {\n    setSelectedPurchase(purchase);\n    setIsModalOpen(true);\n  };\n\n  return (\n    <div className=\"w-full\">\n      {/* Header */}\n      <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between mb-4\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900\">발주요청 관리</h1>\n          <p className=\"text-sm text-gray-600 mt-1\">발주요청서를 관리하고 승인 처리를 할 수 있습니다</p>\n        </div>\n        <Button \n          onClick={() => navigate('/purchase/new')}\n          className=\"mt-4 sm:mt-0 bg-hansl-500 hover:bg-hansl-600\"\n        >\n          <Plus className=\"w-4 h-4 mr-2\" />\n          새 발주요청 작성\n        </Button>\n      </div>\n\n      {/* 필터 섹션 */}\n      <Card className=\"mb-4 border border-gray-200\">\n        <CardHeader className=\"bg-white border-b border-gray-200 py-3\">\n          <CardTitle className=\"flex items-center text-gray-900 text-sm font-medium\">\n            <Filter className=\"w-4 h-4 mr-2\" />\n            검색 필터\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"py-3\">\n          <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 xl:grid-cols-6 2xl:grid-cols-8 gap-2\">\n            <div>\n              <label className=\"block text-xs font-medium text-gray-600 mb-1\">시작일</label>\n              <Input\n                type=\"date\"\n                value={dateFromFilter}\n                onChange={(e) => setDateFromFilter(e.target.value)}\n                className=\"text-sm h-9\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-xs font-medium text-gray-600 mb-1\">종료일</label>\n              <Input\n                type=\"date\"\n                value={dateToFilter}\n                onChange={(e) => setDateToFilter(e.target.value)}\n                className=\"text-sm h-9\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-xs font-medium text-gray-600 mb-1\">요청자</label>\n              <Select \n                value={selectedEmployee || currentUserName || \"all\"} \n                onValueChange={(value) => setSelectedEmployee(value === \"all\" ? \"\" : value)}\n              >\n                <SelectTrigger className=\"h-9 text-sm\">\n                  <SelectValue placeholder={currentUserName || \"선택\"} />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\">전체</SelectItem>\n                  {employees\n                    .filter(emp => emp.full_name && emp.full_name.trim() !== '')\n                    .sort((a, b) => (a.full_name || '').localeCompare(b.full_name || ''))\n                    .map((employee) => (\n                      <SelectItem key={employee.id} value={employee.full_name || ''}>\n                        {employee.full_name}\n                        {employee.full_name === currentUserName && \" (나)\"}\n                      </SelectItem>\n                    ))}\n                </SelectContent>\n              </Select>\n            </div>\n\n            <div>\n              <label className=\"block text-xs font-medium text-gray-600 mb-1\">업체</label>\n              <Select value={vendorFilter || \"all\"} onValueChange={(value) => setVendorFilter(value === \"all\" ? \"\" : value)}>\n                <SelectTrigger className=\"h-9 text-sm\">\n                  <SelectValue placeholder=\"전체\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\">전체</SelectItem>\n                  {vendors.map((vendor) => (\n                    <SelectItem key={vendor.id} value={vendor.vendor_name}>\n                      {vendor.vendor_name}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n\n            <div>\n              <label className=\"block text-xs font-medium text-gray-600 mb-1\">발주번호</label>\n              <Input\n                placeholder=\"번호\"\n                value={purchaseNumberFilter}\n                onChange={(e) => setPurchaseNumberFilter(e.target.value)}\n                className=\"text-sm h-9\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-xs font-medium text-gray-600 mb-1\">품명</label>\n              <Input\n                placeholder=\"품명\"\n                value={itemNameFilter}\n                onChange={(e) => setItemNameFilter(e.target.value)}\n                className=\"text-sm h-9\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-xs font-medium text-gray-600 mb-1\">승인상태</label>\n              <Select \n                value={approvalStatusFilter || \"all\"} \n                onValueChange={(value) => setApprovalStatusFilter(value === \"all\" ? \"\" : value)}\n              >\n                <SelectTrigger className=\"h-9 text-sm\">\n                  <SelectValue placeholder=\"전체\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\">전체</SelectItem>\n                  <SelectItem value=\"pending\">대기</SelectItem>\n                  <SelectItem value=\"approved\">승인</SelectItem>\n                  <SelectItem value=\"rejected\">반려</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n\n            <div className=\"col-span-2 sm:col-span-1\">\n              <label className=\"block text-xs font-medium text-gray-600 mb-1\">통합검색</label>\n              <div className=\"relative\">\n                <Search className=\"absolute left-2 top-1/2 transform -translate-y-1/2 w-3 h-3 text-gray-400\" />\n                <Input\n                  placeholder=\"검색...\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  className=\"pl-7 text-sm h-9\"\n                />\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* 직접 구현한 탭 (hanslwebapp 방식) - 빠른 성능 */}\n      <div className=\"space-y-3\">\n        {/* 탭 버튼들 */}\n        <div className=\"flex space-x-1 bg-gray-50 p-1 rounded-lg border border-gray-200\">\n          {NAV_TABS.map((tab) => (\n            <button\n              key={tab.key}\n              onClick={() => setActiveTab(tab.key)}\n              className={`flex-1 flex items-center justify-center space-x-2 py-2.5 px-4 rounded-md text-sm font-medium transition-colors ${\n                activeTab === tab.key\n                  ? 'text-hansl-600 bg-white shadow-sm border border-gray-200'\n                  : 'text-gray-600 bg-transparent hover:text-gray-900 hover:bg-white/50'\n              }`}\n            >\n              <span>{tab.label}</span>\n              <Badge \n                variant=\"secondary\" \n                className={`text-xs ${\n                  activeTab === tab.key \n                    ? 'bg-hansl-50 text-hansl-700' \n                    : 'bg-gray-100 text-gray-600'\n                }`}\n              >\n                {tabCounts[tab.key as keyof typeof tabCounts]}\n              </Badge>\n            </button>\n          ))}\n        </div>\n\n        {/* 탭 콘텐츠 */}\n        <Card className=\"overflow-hidden border border-gray-200\">\n          <CardContent className=\"p-0\">\n            {loading ? (\n              <div className=\"flex items-center justify-center py-12\">\n                <div className=\"w-8 h-8 border-2 border-hansl-500 border-t-transparent rounded-full animate-spin\" />\n                <span className=\"ml-3 text-gray-600\">로딩 중...</span>\n              </div>\n            ) : filteredPurchases.length === 0 ? (\n              <div className=\"text-center py-12\">\n                <Package className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">발주요청서가 없습니다</h3>\n                <p className=\"text-gray-600\">새로운 발주요청서를 작성해보세요.</p>\n              </div>\n            ) : (\n              <FastPurchaseTable \n                purchases={filteredPurchases} \n                activeTab={activeTab}\n                currentUserRoles={currentUserRoles}\n                onRefresh={loadPurchases}\n              />\n            )}\n          </CardContent>\n        </Card>\n      </div>\n      \n      {/* 세부항목 모달 */}\n      {selectedPurchase && (\n        <PurchaseItemsModal\n          isOpen={isModalOpen}\n          onClose={() => {\n            setIsModalOpen(false);\n            setSelectedPurchase(null);\n          }}\n          purchase={selectedPurchase}\n          isAdmin={isAdmin || false}\n          onUpdate={loadPurchases}\n        />\n      )}\n    </div>\n  );\n}"],"names":["__iconNode","CircleX","createLucideIcon","Funnel","usePurchaseData","purchases","setPurchases","useState","vendors","setVendors","employees","setEmployees","loading","setLoading","currentUserRoles","setCurrentUserRoles","currentUserName","setCurrentUserName","supabase","createClient","useEffect","vendorResult","employeeResult","userResult","employeeData","roles","r","error","logger","loadPurchases","useCallback","user","authError","toast","data","processedData","request","firstItem","sum","item","useDebounce","value","delay","debouncedValue","setDebouncedValue","handler","HIDDEN_EMPLOYEES","useFastPurchaseFilters","activeTab","setActiveTab","searchTerm","setSearchTerm","vendorFilter","setVendorFilter","selectedEmployee","setSelectedEmployee","purchaseNumberFilter","setPurchaseNumberFilter","itemNameFilter","setItemNameFilter","specificationFilter","setSpecificationFilter","approvalStatusFilter","setApprovalStatusFilter","remarkFilter","setRemarkFilter","thisYear","defaultStart","defaultEnd","dateFromFilter","setDateFromFilter","dateToFilter","setDateToFilter","debouncedSearchTerm","isAdmin","computeDefaultEmployee","tabKey","defaultEmployee","visiblePurchases","useMemo","p","dateFilteredPurchases","purchase","requestDate","matchesDateFrom","matchesDateTo","tabFilteredPurchases","isRequest","notPaid","isSeonJin","finalApproved","notReceived","cond","employeeFilteredPurchases","vendorFilteredPurchases","additionalFilteredPurchases","filtered","term","searchFilteredPurchases","filteredPurchases","a","b","dateA","tabCounts","getUniqueOrderCount","ps","pe","PurchaseDetailModal","purchaseId","isOpen","onClose","embedded","onRefresh","onDelete","setPurchase","isEditing","setIsEditing","editedPurchase","setEditedPurchase","editedItems","setEditedItems","deletedItemIds","setDeletedItemIds","canEdit","canDelete","canReceiptCheck","canApproveMiddle","canApproveFinal","loadPurchaseDetail","id","purchaseData","getStatusBadge","jsx","Badge","formatDate","date","formatCurrency","amount","handleSave","totalAmount","updateError","deleteError","handleItemChange","index","field","newItems","quantity","unitPrice","handleAddItem","newItem","handleRemoveItem","_","i","handleReceiptToggle","itemId","isReceived","handleApprove","type","updateData","handleReject","content","Fragment","jsxs","FileText","Building2","Package","CheckCircle","Input","e","Button","Trash2","Plus","User","XCircle","Dialog","DialogContent","DialogHeader","DialogTitle","Edit2","X","Save","dateStr","getReceiptProgress","total","received","percentage","StatusBadge","memo","status","config","text","className","MobilePurchaseCard","onClick","receiptProgress","isAdvance","Eye","ROOT_NAME","createAlertDialogContext","createAlertDialogScope","createContextScope","createDialogScope","useDialogScope","AlertDialog","props","__scopeAlertDialog","alertDialogProps","dialogScope","DialogPrimitive.Root","TRIGGER_NAME","AlertDialogTrigger","React.forwardRef","forwardedRef","triggerProps","DialogPrimitive.Trigger","PORTAL_NAME","AlertDialogPortal","portalProps","DialogPrimitive.Portal","OVERLAY_NAME","AlertDialogOverlay","overlayProps","DialogPrimitive.Overlay","CONTENT_NAME","AlertDialogContentProvider","useAlertDialogContentContext","Slottable","createSlottable","AlertDialogContent","children","contentProps","contentRef","React.useRef","composedRefs","useComposedRefs","cancelRef","DialogPrimitive.WarningProvider","TITLE_NAME","DialogPrimitive.Content","composeEventHandlers","event","DescriptionWarning","AlertDialogTitle","titleProps","DialogPrimitive.Title","DESCRIPTION_NAME","AlertDialogDescription","descriptionProps","DialogPrimitive.Description","ACTION_NAME","AlertDialogAction","actionProps","DialogPrimitive.Close","CANCEL_NAME","AlertDialogCancel","cancelProps","ref","MESSAGE","React.useEffect","Root2","Portal2","Overlay2","Content2","Action","Cancel","Title2","Description2","AlertDialogPrimitive.Root","AlertDialogPrimitive.Portal","AlertDialogPrimitive.Overlay","cn","AlertDialogPrimitive.Content","AlertDialogHeader","AlertDialogFooter","AlertDialogPrimitive.Title","AlertDialogPrimitive.Description","AlertDialogPrimitive.Action","buttonVariants","AlertDialogPrimitive.Cancel","PurchaseStatusBadge","COMMON_COLUMN_WIDTHS","ApprovalStatusBadge","middleApproved","middleRejected","finalRejected","ProgressTypeBadge","TableRow","FastPurchaseTable","selectedPurchaseId","setSelectedPurchaseId","isModalOpen","setIsModalOpen","deleteConfirmOpen","setDeleteConfirmOpen","purchaseToDelete","setPurchaseToDelete","handleRowClick","handleCloseModal","handleConfirmDelete","itemsError","requestError","tableHeader","baseHeaders","additionalHeaders","PurchaseItemsModal","onUpdate","editingItems","setEditingItems","handleEditStart","handleEditCancel","handleDeleteItem","itemsToInsert","items","format","Table","TableHeader","TableHead","TableBody","TableCell","NAV_TABS","PurchaseListMain","onEmailToggle","showEmailButton","navigate","useNavigate","editingId","setEditingId","editingData","setEditingData","selectedPurchase","setSelectedPurchase","Card","CardHeader","CardTitle","Filter","CardContent","Select","SelectTrigger","SelectValue","SelectContent","SelectItem","emp","employee","vendor","Search","tab"],"mappings":"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","x_google_ignoreList":[0,1,7]}