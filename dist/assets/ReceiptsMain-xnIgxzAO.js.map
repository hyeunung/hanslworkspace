{"version":3,"file":"ReceiptsMain-xnIgxzAO.js","sources":["../../node_modules/lucide-react/dist/esm/icons/file-image.js","../../node_modules/lucide-react/dist/esm/icons/printer.js","../../node_modules/lucide-react/dist/esm/icons/rotate-ccw.js","../../node_modules/lucide-react/dist/esm/icons/upload.js","../../node_modules/lucide-react/dist/esm/icons/zoom-in.js","../../node_modules/lucide-react/dist/esm/icons/zoom-out.js","../../src/hooks/useReceiptPermissions.ts","../../src/utils/receiptDebugMonitor.ts","../../src/components/receipts/ReceiptDetailModal.tsx","../../src/utils/receipt.ts","../../src/components/receipts/MobileReceiptCard.tsx","../../src/components/receipts/ReceiptUploadModal.tsx","../../src/components/receipts/ReceiptsMain.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z\", key: \"1rqfz7\" }],\n  [\"path\", { d: \"M14 2v4a2 2 0 0 0 2 2h4\", key: \"tnqrlb\" }],\n  [\"circle\", { cx: \"10\", cy: \"12\", r: \"2\", key: \"737tya\" }],\n  [\"path\", { d: \"m20 17-1.296-1.296a2.41 2.41 0 0 0-3.408 0L9 22\", key: \"wt3hpn\" }]\n];\nconst FileImage = createLucideIcon(\"file-image\", __iconNode);\n\nexport { __iconNode, FileImage as default };\n//# sourceMappingURL=file-image.js.map\n","/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2\",\n      key: \"143wyd\"\n    }\n  ],\n  [\"path\", { d: \"M6 9V3a1 1 0 0 1 1-1h10a1 1 0 0 1 1 1v6\", key: \"1itne7\" }],\n  [\"rect\", { x: \"6\", y: \"14\", width: \"12\", height: \"8\", rx: \"1\", key: \"1ue0tg\" }]\n];\nconst Printer = createLucideIcon(\"printer\", __iconNode);\n\nexport { __iconNode, Printer as default };\n//# sourceMappingURL=printer.js.map\n","/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M3 12a9 9 0 1 0 9-9 9.75 9.75 0 0 0-6.74 2.74L3 8\", key: \"1357e3\" }],\n  [\"path\", { d: \"M3 3v5h5\", key: \"1xhq8a\" }]\n];\nconst RotateCcw = createLucideIcon(\"rotate-ccw\", __iconNode);\n\nexport { __iconNode, RotateCcw as default };\n//# sourceMappingURL=rotate-ccw.js.map\n","/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M12 3v12\", key: \"1x0j5s\" }],\n  [\"path\", { d: \"m17 8-5-5-5 5\", key: \"7q97r8\" }],\n  [\"path\", { d: \"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\", key: \"ih7n3h\" }]\n];\nconst Upload = createLucideIcon(\"upload\", __iconNode);\n\nexport { __iconNode, Upload as default };\n//# sourceMappingURL=upload.js.map\n","/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"circle\", { cx: \"11\", cy: \"11\", r: \"8\", key: \"4ej97u\" }],\n  [\"line\", { x1: \"21\", x2: \"16.65\", y1: \"21\", y2: \"16.65\", key: \"13gj7c\" }],\n  [\"line\", { x1: \"11\", x2: \"11\", y1: \"8\", y2: \"14\", key: \"1vmskp\" }],\n  [\"line\", { x1: \"8\", x2: \"14\", y1: \"11\", y2: \"11\", key: \"durymu\" }]\n];\nconst ZoomIn = createLucideIcon(\"zoom-in\", __iconNode);\n\nexport { __iconNode, ZoomIn as default };\n//# sourceMappingURL=zoom-in.js.map\n","/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"circle\", { cx: \"11\", cy: \"11\", r: \"8\", key: \"4ej97u\" }],\n  [\"line\", { x1: \"21\", x2: \"16.65\", y1: \"21\", y2: \"16.65\", key: \"13gj7c\" }],\n  [\"line\", { x1: \"8\", x2: \"14\", y1: \"11\", y2: \"11\", key: \"durymu\" }]\n];\nconst ZoomOut = createLucideIcon(\"zoom-out\", __iconNode);\n\nexport { __iconNode, ZoomOut as default };\n//# sourceMappingURL=zoom-out.js.map\n","import { useState, useEffect } from 'react';\nimport { createClient } from '@/lib/supabase/client';\nimport type { ReceiptPermissions, UserRole } from '@/types/receipt';\n\n/**\n * 영수증 관리 권한을 관리하는 React Hook\n * \n * 사용자의 역할(role)에 따라 영수증 관련 권한을 계산하고 제공합니다.\n * \n * @returns {Object} 권한 정보와 관련 상태\n * @returns {ReceiptPermissions} permissions - 권한 객체\n * @returns {UserRole | null} userRole - 사용자 역할\n * @returns {boolean} loading - 권한 로딩 상태\n * @returns {Function} refreshPermissions - 권한 새로고침 함수\n * \n * @example\n * ```tsx\n * const { permissions, userRole, loading } = useReceiptPermissions();\n * \n * if (loading) return <div>로딩 중...</div>;\n * \n * return (\n *   <div>\n *     {permissions.canUpload && <UploadButton />}\n *     {permissions.canDelete && <DeleteButton />}\n *   </div>\n * );\n * ```\n */\nexport function useReceiptPermissions() {\n  const [permissions, setPermissions] = useState<ReceiptPermissions>({\n    canView: false,\n    canUpload: false,\n    canDownload: false,\n    canPrint: false,\n    canDelete: false,\n    canViewUploaderInfo: false,\n  });\n  const [userRole, setUserRole] = useState<UserRole | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  const supabase = createClient();\n\n  const checkPermissions = async () => {\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) {\n        setLoading(false);\n        return;\n      }\n\n      const { data: employee } = await supabase\n        .from('employees')\n        .select('purchase_role')\n        .eq('email', user.email)\n        .single();\n\n      const role = employee?.purchase_role || '';\n      setUserRole(role);\n\n      // 권한 계산\n      const isAppAdmin = role.includes('app_admin');\n      const isHr = role.includes('hr');\n      const isLeadBuyer = role.includes('lead buyer');\n      \n      // 영수증 관리 접근 가능 권한\n      const hasReceiptAccess = isAppAdmin || isHr || isLeadBuyer;\n\n      setPermissions({\n        canView: hasReceiptAccess,\n        canUpload: hasReceiptAccess,\n        canDownload: hasReceiptAccess,\n        canPrint: hasReceiptAccess,\n        canDelete: isAppAdmin, // 오직 app_admin만\n        canViewUploaderInfo: isAppAdmin, // 오직 app_admin만\n      });\n    } catch (error) {\n      console.error('권한 확인 오류:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    checkPermissions();\n  }, []);\n\n  return {\n    permissions,\n    userRole,\n    loading,\n    refreshPermissions: checkPermissions,\n  };\n}","/**\n * 영수증 인쇄완료 기능 실시간 모니터링 유틸리티\n * \n * 개발 환경에서 사용자별 차이점을 실시간으로 추적하고 분석합니다.\n */\n\nimport { createClient } from '@/lib/supabase/client';\n\ninterface DebugSession {\n  sessionId: string;\n  userEmail: string;\n  userName: string;\n  userRole: string;\n  browserInfo: {\n    userAgent: string;\n    platform: string;\n    language: string;\n    cookieEnabled: boolean;\n  };\n  startTime: string;\n  events: DebugEvent[];\n}\n\ninterface DebugEvent {\n  timestamp: string;\n  type: 'auth' | 'permission' | 'update' | 'error' | 'network' | 'ui';\n  level: 'info' | 'warn' | 'error' | 'success';\n  message: string;\n  data: any;\n}\n\nclass ReceiptDebugMonitor {\n  private session: DebugSession | null = null;\n  private isMonitoring = false;\n  private supabase = createClient();\n\n  /**\n   * 디버깅 세션 시작\n   */\n  async startSession(): Promise<DebugSession | null> {\n    try {\n      console.log('🔍 [DebugMonitor] 디버깅 세션 시작...');\n\n      // 사용자 인증 정보 확인\n      const { data: { user }, error: authError } = await this.supabase.auth.getUser();\n      if (authError || !user) {\n        console.error('❌ [DebugMonitor] 사용자 인증 실패:', authError);\n        return null;\n      }\n\n      // 직원 정보 조회\n      const { data: employee, error: empError } = await this.supabase\n        .from('employees')\n        .select('name, purchase_role')\n        .eq('email', user.email)\n        .single();\n\n      if (empError) {\n        console.error('❌ [DebugMonitor] 직원 정보 조회 실패:', empError);\n        return null;\n      }\n\n      // 세션 생성\n      this.session = {\n        sessionId: `debug_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n        userEmail: user.email || '',\n        userName: employee?.name || user.email || '',\n        userRole: employee?.purchase_role || '',\n        browserInfo: {\n          userAgent: navigator.userAgent,\n          platform: navigator.platform,\n          language: navigator.language,\n          cookieEnabled: navigator.cookieEnabled\n        },\n        startTime: new Date().toISOString(),\n        events: []\n      };\n\n      this.isMonitoring = true;\n\n      // 초기 이벤트 기록\n      this.logEvent('auth', 'success', '디버깅 세션 시작', {\n        userId: user.id,\n        userEmail: user.email,\n        userName: employee?.name,\n        userRole: employee?.purchase_role\n      });\n\n      // 네트워크 모니터링 시작\n      this.startNetworkMonitoring();\n\n      // 권한 상태 모니터링 시작\n      this.startPermissionMonitoring();\n\n      console.log('✅ [DebugMonitor] 디버깅 세션 활성화:', this.session);\n      return this.session;\n\n    } catch (error) {\n      console.error('💥 [DebugMonitor] 세션 시작 실패:', error);\n      return null;\n    }\n  }\n\n  /**\n   * 이벤트 로깅\n   */\n  logEvent(type: DebugEvent['type'], level: DebugEvent['level'], message: string, data?: any): void {\n    if (!this.isMonitoring || !this.session) return;\n\n    const event: DebugEvent = {\n      timestamp: new Date().toISOString(),\n      type,\n      level,\n      message,\n      data: data || {}\n    };\n\n    this.session.events.push(event);\n\n    // 콘솔 출력\n    const emoji = level === 'error' ? '❌' : level === 'warn' ? '⚠️' : level === 'success' ? '✅' : 'ℹ️';\n    console.log(`${emoji} [DebugMonitor:${type}] ${message}`, data);\n\n    // 이벤트 제한 (메모리 절약)\n    if (this.session.events.length > 100) {\n      this.session.events = this.session.events.slice(-50);\n    }\n  }\n\n  /**\n   * 네트워크 요청 모니터링\n   */\n  private startNetworkMonitoring(): void {\n    const originalFetch = window.fetch;\n    \n    window.fetch = async (...args) => {\n      const [url, options] = args;\n      const isSupabaseRequest = url.toString().includes('supabase') || url.toString().includes('purchase_receipts');\n\n      if (isSupabaseRequest) {\n        const requestInfo = {\n          url: url.toString(),\n          method: options?.method || 'GET',\n          headers: options?.headers,\n          timestamp: new Date().toISOString()\n        };\n\n        this.logEvent('network', 'info', `네트워크 요청: ${requestInfo.method} ${requestInfo.url}`, requestInfo);\n      }\n\n      try {\n        const response = await originalFetch.apply(window, args);\n\n        if (isSupabaseRequest) {\n          const responseInfo = {\n            url: url.toString(),\n            status: response.status,\n            statusText: response.statusText,\n            ok: response.ok,\n            timestamp: new Date().toISOString()\n          };\n\n          this.logEvent('network', response.ok ? 'success' : 'error', \n            `네트워크 응답: ${responseInfo.status} ${responseInfo.statusText}`, responseInfo);\n        }\n\n        return response;\n      } catch (error) {\n        if (isSupabaseRequest) {\n          this.logEvent('network', 'error', '네트워크 요청 실패', { url: url.toString(), error });\n        }\n        throw error;\n      }\n    };\n  }\n\n  /**\n   * 권한 상태 모니터링\n   */\n  private startPermissionMonitoring(): void {\n    // 페이지 포커스 이벤트 모니터링\n    document.addEventListener('visibilitychange', () => {\n      if (!document.hidden) {\n        this.checkPermissionStatus();\n      }\n    });\n\n    // 주기적 권한 체크 (5분마다)\n    setInterval(() => {\n      this.checkPermissionStatus();\n    }, 5 * 60 * 1000);\n  }\n\n  /**\n   * 현재 권한 상태 확인\n   */\n  private async checkPermissionStatus(): Promise<void> {\n    try {\n      const { data: { user }, error: authError } = await this.supabase.auth.getUser();\n      \n      if (authError || !user) {\n        this.logEvent('permission', 'error', '사용자 인증 상태 확인 실패', { authError });\n        return;\n      }\n\n      const { data: employee, error: empError } = await this.supabase\n        .from('employees')\n        .select('name, purchase_role')\n        .eq('email', user.email)\n        .single();\n\n      if (empError) {\n        this.logEvent('permission', 'error', '직원 정보 조회 실패', { empError });\n        return;\n      }\n\n      const role = employee?.purchase_role || '';\n      const hasPermission = role.includes('app_admin') || role.includes('hr') || role.includes('lead buyer');\n\n      this.logEvent('permission', 'info', '권한 상태 확인', {\n        userId: user.id,\n        userEmail: user.email,\n        userName: employee?.name,\n        role,\n        hasPermission\n      });\n\n      // 세션 정보 업데이트\n      if (this.session) {\n        this.session.userRole = role;\n      }\n\n    } catch (error) {\n      this.logEvent('permission', 'error', '권한 상태 확인 중 오류 발생', { error });\n    }\n  }\n\n  /**\n   * 인쇄완료 시도 추적\n   */\n  trackPrintCompletion(receiptId: string, receiptName: string): void {\n    this.logEvent('ui', 'info', '인쇄완료 시도 시작', { receiptId, receiptName });\n  }\n\n  /**\n   * 업데이트 결과 추적\n   */\n  trackUpdateResult(receiptId: string, success: boolean, error?: any, executionTime?: number): void {\n    this.logEvent('update', success ? 'success' : 'error', \n      success ? '인쇄완료 업데이트 성공' : '인쇄완료 업데이트 실패', {\n        receiptId,\n        success,\n        error,\n        executionTime\n      });\n  }\n\n  /**\n   * 현재 세션 정보 가져오기\n   */\n  getSession(): DebugSession | null {\n    return this.session;\n  }\n\n  /**\n   * 세션 이벤트 내보내기\n   */\n  exportSessionData(): string {\n    if (!this.session) return '';\n\n    return JSON.stringify({\n      ...this.session,\n      exportedAt: new Date().toISOString()\n    }, null, 2);\n  }\n\n  /**\n   * 디버깅 세션 종료\n   */\n  stopSession(): void {\n    if (this.session) {\n      this.logEvent('auth', 'info', '디버깅 세션 종료', {\n        sessionDuration: Date.now() - new Date(this.session.startTime).getTime(),\n        totalEvents: this.session.events.length\n      });\n\n      console.log('📊 [DebugMonitor] 세션 요약:', {\n        sessionId: this.session.sessionId,\n        duration: Date.now() - new Date(this.session.startTime).getTime(),\n        totalEvents: this.session.events.length,\n        userInfo: {\n          email: this.session.userEmail,\n          name: this.session.userName,\n          role: this.session.userRole\n        }\n      });\n    }\n\n    this.isMonitoring = false;\n    this.session = null;\n  }\n\n  /**\n   * 사용자별 비교 리포트 생성\n   */\n  generateComparisonReport(): string {\n    if (!this.session) return '세션이 활성화되지 않았습니다.';\n\n    const authEvents = this.session.events.filter(e => e.type === 'auth');\n    const permissionEvents = this.session.events.filter(e => e.type === 'permission');\n    const updateEvents = this.session.events.filter(e => e.type === 'update');\n    const errorEvents = this.session.events.filter(e => e.level === 'error');\n\n    return `\n# 영수증 인쇄완료 디버깅 리포트\n\n## 세션 정보\n- 세션 ID: ${this.session.sessionId}\n- 사용자: ${this.session.userName} (${this.session.userEmail})\n- 권한: ${this.session.userRole}\n- 시작 시간: ${this.session.startTime}\n- 브라우저: ${this.session.browserInfo.userAgent}\n\n## 이벤트 통계\n- 총 이벤트: ${this.session.events.length}\n- 인증 이벤트: ${authEvents.length}\n- 권한 이벤트: ${permissionEvents.length}\n- 업데이트 이벤트: ${updateEvents.length}\n- 오류 이벤트: ${errorEvents.length}\n\n## 최근 오류\n${errorEvents.slice(-5).map(e => `- ${e.timestamp}: ${e.message}`).join('\\n')}\n\n## 권한 체크 결과\n${permissionEvents.slice(-3).map(e => `- ${e.timestamp}: ${JSON.stringify(e.data, null, 2)}`).join('\\n')}\n\n---\n리포트 생성 시간: ${new Date().toISOString()}\n    `.trim();\n  }\n}\n\n// 싱글톤 인스턴스\nconst debugMonitor = new ReceiptDebugMonitor();\n\n// 개발 환경에서만 글로벌 접근 허용\nif (process.env.NODE_ENV === 'development') {\n  (window as any).ReceiptDebugMonitor = debugMonitor;\n}\n\nexport default debugMonitor;","import { useState, useEffect, useCallback } from \"react\";\nimport {\n  Dialog,\n  DialogContent,\n} from \"@/components/ui/dialog\";\nimport { Button } from \"@/components/ui/button\";\nimport { Download, X, ZoomIn, ZoomOut, RotateCcw, Printer, Trash2 } from \"lucide-react\";\nimport { toast } from \"sonner\";\nimport { createClient } from \"@/lib/supabase/client\";\nimport { useReceiptPermissions } from \"@/hooks/useReceiptPermissions\";\nimport type { ReceiptItem } from \"@/types/receipt\";\nimport debugMonitor from \"@/utils/receiptDebugMonitor\";\n\ninterface ReceiptDetailModalProps {\n  receipt: ReceiptItem;\n  isOpen: boolean;\n  onClose: () => void;\n  onDelete?: () => void;\n}\n\nexport default function ReceiptDetailModal({ receipt, isOpen, onClose, onDelete }: ReceiptDetailModalProps) {\n  const [imageScale, setImageScale] = useState(1);\n  const [imageRotation, setImageRotation] = useState(0);\n  const [imageError, setImageError] = useState(false);\n  const [deleting, setDeleting] = useState(false);\n  const [imageDimensions, setImageDimensions] = useState({ width: 0, height: 0 });\n  const [imageLoaded, setImageLoaded] = useState(false);\n  \n  const supabase = createClient();\n  const { permissions } = useReceiptPermissions();\n\n  // 모달이 열릴 때 초기화\n  useEffect(() => {\n    if (isOpen) {\n      setImageScale(1);\n      setImageRotation(0);\n      setImageError(false);\n      setImageLoaded(false);\n    }\n  }, [isOpen]);\n\n  // formatDateTime은 utils/helpers.ts에서 import하여 사용 가능\n\n  // 영수증 이미지 다운로드\n  const handleDownload = async () => {\n    try {\n      // URL에서 파일 경로 추출 (Supabase Storage 경로)\n      const url = new URL(receipt.receipt_image_url);\n      const pathSegments = url.pathname.split('/');\n      const bucketIndex = pathSegments.indexOf('receipt-images');\n      \n      if (bucketIndex === -1) {\n        throw new Error('잘못된 영수증 URL입니다');\n      }\n      \n      const filePath = pathSegments.slice(bucketIndex + 1).join('/');\n\n      // Supabase Storage에서 다운로드\n      const { data, error } = await supabase.storage\n        .from('receipt-images')\n        .download(filePath);\n\n      if (error) throw error;\n\n      // Blob을 다운로드 가능한 URL로 변환\n      const blob = new Blob([data], { type: 'image/jpeg' });\n      const downloadUrl = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = downloadUrl;\n      a.download = receipt.file_name || `영수증_${receipt.id}.jpg`;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      window.URL.revokeObjectURL(downloadUrl);\n      \n      toast.success('영수증 이미지가 다운로드되었습니다.');\n    } catch (error) {\n      console.error('다운로드 오류:', error);\n      toast.error('다운로드에 실패했습니다.');\n    }\n  };\n\n  // 확대/축소\n  const handleZoomIn = () => {\n    setImageScale(prev => Math.min(prev + 0.25, 3));\n  };\n\n  const handleZoomOut = () => {\n    setImageScale(prev => Math.max(prev - 0.25, 0.5));\n  };\n\n  // 회전\n  const handleRotate = () => {\n    setImageRotation(prev => (prev + 90) % 360);\n  };\n\n  // 초기화\n  const handleReset = () => {\n    setImageScale(1);\n    setImageRotation(0);\n  };\n\n  // 이미지 로드 완료 핸들러\n  const handleImageLoad = (e: React.SyntheticEvent<HTMLImageElement>) => {\n    const img = e.currentTarget;\n    setImageDimensions({ width: img.naturalWidth, height: img.naturalHeight });\n    setImageLoaded(true);\n  };\n\n  // 이미지 최적 크기 계산\n  const getOptimalImageStyle = () => {\n    if (!imageLoaded) return { width: '100%', height: '100vh' };\n    \n    const containerWidth = window.innerWidth - 64; // 우측 탭바 제외\n    const containerHeight = window.innerHeight;\n    \n    const widthRatio = containerWidth / imageDimensions.width;\n    const heightRatio = containerHeight / imageDimensions.height;\n    const optimalRatio = Math.min(widthRatio, heightRatio);\n    \n    return {\n      width: `${imageDimensions.width * optimalRatio}px`,\n      height: `${imageDimensions.height * optimalRatio}px`,\n    };\n  };\n\n  // 영수증 인쇄 완료 처리\n  const markAsPrinted = useCallback(async () => {\n    console.log('🖨️ [ReceiptDebug] 인쇄완료 처리 시작:', {\n      receiptId: receipt.id,\n      receiptName: receipt.file_name,\n      timestamp: new Date().toISOString(),\n      userAgent: navigator.userAgent\n    });\n\n    // 디버그 모니터에 추적 시작\n    debugMonitor.trackPrintCompletion(receipt.id, receipt.file_name);\n\n    try {\n      // 1. 사용자 인증 정보 확인\n      console.log('🔐 [ReceiptDebug] 사용자 인증 정보 확인 중...');\n      const { data: { user }, error: authError } = await supabase.auth.getUser();\n      \n      if (authError) {\n        console.error('❌ [ReceiptDebug] 인증 오류:', authError);\n        toast.error('사용자 인증에 실패했습니다.');\n        return;\n      }\n      \n      if (!user) {\n        console.error('❌ [ReceiptDebug] 사용자 정보 없음');\n        toast.error('사용자 정보를 불러올 수 없습니다.');\n        return;\n      }\n\n      console.log('✅ [ReceiptDebug] 사용자 인증 성공:', {\n        userId: user.id,\n        email: user.email,\n        lastSignIn: user.last_sign_in_at\n      });\n\n      // 2. 사용자 권한 및 정보 확인\n      console.log('👤 [ReceiptDebug] 직원 정보 조회 중...');\n      const { data: employee, error: empError } = await supabase\n        .from('employees')\n        .select('name, purchase_role')\n        .eq('email', user.email)\n        .single();\n\n      if (empError) {\n        console.error('❌ [ReceiptDebug] 직원 정보 조회 실패:', empError);\n        toast.error('직원 정보를 불러올 수 없습니다.');\n        return;\n      }\n\n      console.log('✅ [ReceiptDebug] 직원 정보 조회 성공:', {\n        name: employee?.name,\n        email: user.email,\n        role: employee?.purchase_role\n      });\n\n      // 3. 권한 검증\n      const role = employee?.purchase_role || '';\n      const hasPermission = role.includes('app_admin') || role.includes('hr') || role.includes('lead buyer');\n      \n      console.log('🛡️ [ReceiptDebug] 권한 검증:', {\n        role,\n        hasPermission,\n        isAppAdmin: role.includes('app_admin'),\n        isHr: role.includes('hr'),\n        isLeadBuyer: role.includes('lead buyer')\n      });\n\n      if (!hasPermission) {\n        console.error('❌ [ReceiptDebug] 권한 부족:', { role });\n        toast.error('인쇄완료 처리 권한이 없습니다.');\n        return;\n      }\n\n      // 4. 업데이트 데이터 준비\n      const updateData = {\n        is_printed: true,\n        printed_at: new Date().toISOString(),\n        printed_by: user.id,\n        printed_by_name: employee?.name || user.email\n      };\n\n      console.log('📝 [ReceiptDebug] 업데이트 데이터 준비:', updateData);\n\n      // 5. 데이터베이스 업데이트 실행\n      console.log('🔄 [ReceiptDebug] 데이터베이스 업데이트 실행 중...');\n      const startTime = performance.now();\n      \n      const { data: updateResult, error: updateError } = await supabase\n        .from('purchase_receipts')\n        .update(updateData)\n        .eq('id', receipt.id)\n        .select('*');\n\n      const endTime = performance.now();\n      const executionTime = endTime - startTime;\n\n      if (updateError) {\n        console.error('❌ [ReceiptDebug] 업데이트 실패:', {\n          error: updateError,\n          code: updateError.code,\n          message: updateError.message,\n          details: updateError.details,\n          hint: updateError.hint,\n          executionTime: `${executionTime.toFixed(2)}ms`\n        });\n        \n        // 디버그 모니터에 실패 결과 추적\n        debugMonitor.trackUpdateResult(receipt.id, false, updateError, executionTime);\n        \n        // RLS 관련 오류 특별 처리\n        if (updateError.code === '42501' || updateError.message?.includes('policy')) {\n          toast.error('데이터베이스 권한 오류가 발생했습니다. 관리자에게 문의하세요.');\n        } else {\n          toast.error(`업데이트 실패: ${updateError.message}`);\n        }\n        return;\n      }\n\n      const affectedRows = updateResult?.length || 0;\n      \n      console.log('✅ [ReceiptDebug] 업데이트 성공:', {\n        updateResult,\n        executionTime: `${executionTime.toFixed(2)}ms`,\n        affectedRows\n      });\n\n      // affectedRows가 0이어도 성공으로 처리 (이미 인쇄완료 상태인 경우)\n      if (affectedRows === 0) {\n        console.log('ℹ️ [ReceiptDebug] 이미 인쇄완료 상태였습니다.');\n      }\n\n      // 디버그 모니터에 성공 결과 추적\n      debugMonitor.trackUpdateResult(receipt.id, true, null, executionTime);\n\n      // 6. 성공 처리\n      toast.success('인쇄 완료로 표시되었습니다.');\n      \n      // 7. 목록 새로고침\n      console.log('🔄 [ReceiptDebug] 목록 새로고침 처리...');\n      if (onDelete) {\n        onDelete(); // 목록 새로고침을 위해 호출\n      }\n\n      console.log('🎉 [ReceiptDebug] 인쇄완료 처리 완료:', {\n        receiptId: receipt.id,\n        success: true,\n        timestamp: new Date().toISOString()\n      });\n\n    } catch (error) {\n      const errorObj = error as any;\n      console.error('💥 [ReceiptDebug] 예외 발생:', {\n        error,\n        message: errorObj?.message,\n        stack: errorObj?.stack,\n        receiptId: receipt.id,\n        timestamp: new Date().toISOString()\n      });\n\n      // 디버그 모니터에 실패 결과 추적\n      debugMonitor.trackUpdateResult(receipt.id, false, error);\n      \n      toast.error(`인쇄 완료 처리에 실패했습니다: ${errorObj?.message || '알 수 없는 오류'}`);\n    }\n  }, [supabase, receipt.id, receipt.file_name, onClose, onDelete]);\n\n  // 영수증 인쇄 핸들러\n  const handlePrint = useCallback(() => {\n    const printWindow = window.open('', '_blank');\n    if (printWindow) {\n      printWindow.document.write(`\n        <!DOCTYPE html>\n        <html><head><title></title>\n        <style>@page{margin:0;size:auto;}*{margin:0;padding:0;box-sizing:border-box;}body{display:flex;justify-content:center;align-items:center;min-height:100vh;background:white;margin:0;padding:0;}.receipt-image{max-width:100%;max-height:100vh;object-fit:contain;display:block;}@media print{@page{margin:0;}body{margin:0;padding:0;background:white;}.receipt-image{max-width:100%;max-height:100%;width:auto;height:auto;page-break-inside:avoid;}}</style>\n        </head><body>\n        <img src=\"${receipt.receipt_image_url}\" alt=\"\" class=\"receipt-image\" onload=\"setTimeout(function(){window.print();window.close();},100);\" onerror=\"window.close();\" />\n        </body></html>\n      `);\n      printWindow.document.close();\n\n      // 인쇄 완료 확인 다이얼로그\n      setTimeout(() => {\n        console.log('🔔 [ReceiptDebug] 인쇄완료 확인 다이얼로그 표시 중...');\n        const userConfirmed = confirm('인쇄를 완료하셨습니까?');\n        console.log('👤 [ReceiptDebug] 사용자 응답:', userConfirmed ? '확인 클릭' : '취소 클릭');\n        \n        if (userConfirmed) {\n          console.log('🚪 [ReceiptDebug] 모달 닫기 실행 중...');\n          // 먼저 모달 닫기\n          onClose();\n          \n          console.log('🎯 [ReceiptDebug] markAsPrinted 함수 호출 시작!');\n          // 그 다음 인쇄완료 처리\n          markAsPrinted();\n        } else {\n          console.log('❌ [ReceiptDebug] 사용자가 취소함 - 인쇄완료 처리 안함');\n        }\n      }, 1000);\n    }\n  }, [receipt.receipt_image_url, markAsPrinted, onClose]);\n\n  // 영수증 삭제 - useCallback으로 최적화\n  const handleDelete = useCallback(async () => {\n    if (!permissions.canDelete) {\n      toast.error('삭제 권한이 없습니다.');\n      return;\n    }\n\n    if (!confirm('정말로 이 영수증을 삭제하시겠습니까?')) {\n      return;\n    }\n\n    try {\n      setDeleting(true);\n\n      // URL에서 파일 경로 추출 (Supabase Storage 경로)\n      const url = new URL(receipt.receipt_image_url);\n      const pathSegments = url.pathname.split('/');\n      const bucketIndex = pathSegments.indexOf('receipt-images');\n      \n      if (bucketIndex !== -1) {\n        const filePath = pathSegments.slice(bucketIndex + 1).join('/');\n        \n        // Supabase Storage에서 파일 삭제\n        const { error: storageError } = await supabase.storage\n          .from('receipt-images')\n          .remove([filePath]);\n\n        if (storageError) {\n          console.warn('스토리지 파일 삭제 실패:', storageError);\n        }\n      }\n\n      // DB에서 레코드 삭제\n      const { error: dbError } = await supabase\n        .from('purchase_receipts')\n        .delete()\n        .eq('id', receipt.id);\n\n      if (dbError) throw dbError;\n\n      toast.success('영수증이 삭제되었습니다.');\n      onClose();\n      if (onDelete) {\n        onDelete();\n      }\n    } catch (error) {\n      console.error('삭제 오류:', error);\n      toast.error('삭제에 실패했습니다.');\n    } finally {\n      setDeleting(false);\n    }\n  }, [permissions.canDelete, receipt.id, receipt.receipt_image_url, onClose, onDelete, supabase]);\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent className=\"w-[100vw] max-w-none h-[100vh] p-0 overflow-hidden m-0 border-0 rounded-none\">\n        <div className=\"flex h-full\">\n          {/* 이미지 영역 */}\n          <div className=\"flex-1 bg-white relative overflow-hidden\">\n            <div className=\"absolute inset-0 flex items-center justify-center\">\n              <img\n                src={receipt.receipt_image_url}\n                alt=\"영수증\"\n                className=\"object-contain\"\n                style={{\n                  ...getOptimalImageStyle(),\n                  transform: `scale(${imageScale}) rotate(${imageRotation}deg)`,\n                  transformOrigin: 'center'\n                }}\n                onLoad={handleImageLoad}\n                onError={() => setImageError(true)}\n              />\n            </div>\n            \n            {/* 닫기 버튼 */}\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={onClose}\n              className=\"absolute top-4 left-4 h-10 w-10 p-0 bg-gray-900/80 hover:bg-gray-900 text-white rounded-full\"\n            >\n              <X className=\"h-5 w-5\" />\n            </Button>\n\n            {/* 이미지 컨트롤 */}\n            <div className=\"absolute bottom-4 left-1/2 transform -translate-x-1/2 bg-gray-900/80 rounded-full px-4 py-2\">\n              <div className=\"flex items-center gap-2 text-white\">\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={handleZoomOut}\n                  disabled={imageScale <= 0.5}\n                  className=\"h-8 w-8 p-0 text-white hover:bg-white/20\"\n                >\n                  <ZoomOut className=\"w-4 h-4\" />\n                </Button>\n                <span className=\"text-sm min-w-[40px] text-center\">\n                  {Math.round(imageScale * 100)}%\n                </span>\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={handleZoomIn}\n                  disabled={imageScale >= 3}\n                  className=\"h-8 w-8 p-0 text-white hover:bg-white/20\"\n                >\n                  <ZoomIn className=\"w-4 h-4\" />\n                </Button>\n                <div className=\"w-px h-4 bg-white/30 mx-1\" />\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={handleRotate}\n                  className=\"h-8 w-8 p-0 text-white hover:bg-white/20\"\n                >\n                  <RotateCcw className=\"w-4 h-4\" />\n                </Button>\n              </div>\n            </div>\n          </div>\n\n          {/* 우측 세로 탭바 */}\n          <div className=\"w-16 bg-gray-900 flex flex-col items-center justify-center space-y-4\">\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={handlePrint}\n              className=\"w-12 h-12 p-0 text-white hover:bg-gray-700 rounded-lg\"\n              title=\"인쇄\"\n            >\n              <Printer className=\"w-6 h-6\" />\n            </Button>\n            \n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={handleDownload}\n              className=\"w-12 h-12 p-0 text-white hover:bg-gray-700 rounded-lg\"\n              title=\"다운로드\"\n            >\n              <Download className=\"w-6 h-6\" />\n            </Button>\n\n            {permissions.canDelete && (\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={handleDelete}\n                disabled={deleting}\n                className=\"w-12 h-12 p-0 text-white hover:bg-red-600 rounded-lg\"\n                title=\"삭제\"\n              >\n                {deleting ? (\n                  <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\" />\n                ) : (\n                  <Trash2 className=\"w-6 h-6\" />\n                )}\n              </Button>\n            )}\n          </div>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n}\n","/**\n * 영수증 관리 관련 유틸리티 함수들\n */\n\n// 파일 크기를 읽기 쉬운 형태로 변환\nexport function formatFileSize(bytes: number): string {\n  if (bytes === 0) return '0 B';\n  \n  const k = 1024;\n  const sizes = ['B', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  \n  return `${parseFloat((bytes / Math.pow(k, i)).toFixed(1))} ${sizes[i]}`;\n}\n\n// 날짜를 한국어 형식으로 포맷\nexport function formatDate(dateStr?: string): string {\n  if (!dateStr) return '-';\n  \n  try {\n    const date = new Date(dateStr);\n    if (isNaN(date.getTime())) return '-';\n    \n    return date.toLocaleDateString('ko-KR', {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit',\n    });\n  } catch {\n    return '-';\n  }\n}\n\n// 상대적 시간 표시 (예: \"2시간 전\", \"3일 전\")\nexport function formatRelativeTime(dateStr?: string): string {\n  if (!dateStr) return '-';\n  \n  try {\n    const date = new Date(dateStr);\n    const now = new Date();\n    const diffMs = now.getTime() - date.getTime();\n    \n    const diffMinutes = Math.floor(diffMs / (1000 * 60));\n    const diffHours = Math.floor(diffMs / (1000 * 60 * 60));\n    const diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));\n    \n    if (diffMinutes < 60) {\n      return diffMinutes < 1 ? '방금 전' : `${diffMinutes}분 전`;\n    } else if (diffHours < 24) {\n      return `${diffHours}시간 전`;\n    } else if (diffDays < 7) {\n      return `${diffDays}일 전`;\n    } else {\n      return formatDate(dateStr);\n    }\n  } catch {\n    return '-';\n  }\n}\n\n// 파일 타입 검증\nexport function isValidImageFile(file: File): boolean {\n  const validTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/webp', 'image/heic'];\n  return validTypes.includes(file.type.toLowerCase());\n}\n\n// 파일 크기 검증 (기본 10MB)\nexport function isValidFileSize(file: File, maxSizeMB: number = 10): boolean {\n  const maxSizeBytes = maxSizeMB * 1024 * 1024;\n  return file.size <= maxSizeBytes;\n}\n\n// 영수증 파일명 생성\nexport function generateReceiptFileName(extension: string = 'jpg'): string {\n  const now = new Date();\n  const year = now.getFullYear().toString().substring(2);\n  const month = (now.getMonth() + 1).toString().padStart(2, '0');\n  const day = now.getDate().toString().padStart(2, '0');\n  const hour = now.getHours().toString().padStart(2, '0');\n  const minute = now.getMinutes().toString().padStart(2, '0');\n  \n  return `rec${year}${month}${day}${hour}${minute}.${extension}`;\n}\n\n// Supabase Storage URL에서 파일 경로 추출\nexport function extractStoragePathFromUrl(url: string, bucketName: string = 'receipt-images'): string | null {\n  try {\n    const urlObj = new URL(url);\n    const pathSegments = urlObj.pathname.split('/');\n    const bucketIndex = pathSegments.indexOf(bucketName);\n    \n    if (bucketIndex === -1) return null;\n    \n    return pathSegments.slice(bucketIndex + 1).join('/');\n  } catch {\n    return null;\n  }\n}\n\n// 검색어 하이라이트용 함수\nexport function highlightSearchTerm(text: string, searchTerm: string): string {\n  if (!searchTerm) return text;\n  \n  const regex = new RegExp(`(${searchTerm.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')})`, 'gi');\n  return text.replace(regex, '<mark>$1</mark>');\n}\n\n// 키보드 접근성을 위한 이벤트 핸들러\nexport function handleKeyboardActivation(\n  event: React.KeyboardEvent,\n  callback: () => void\n): void {\n  if (event.key === 'Enter' || event.key === ' ') {\n    event.preventDefault();\n    callback();\n  }\n}","import { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Printer, Download, Calendar, User, FileText, Trash2 } from \"lucide-react\";\nimport type { ReceiptItem } from \"@/types/receipt\";\nimport { formatDate, formatFileSize } from \"@/utils/receipt\";\n\ninterface MobileReceiptCardProps {\n  receipt: ReceiptItem;\n  onView: (receipt: ReceiptItem) => void;\n  onPrint: (receipt: ReceiptItem) => void;\n  onDownload: (receipt: ReceiptItem) => void;\n  onDelete?: (receipt: ReceiptItem) => void;\n}\n\nexport default function MobileReceiptCard({ receipt, onView, onPrint, onDownload, onDelete }: MobileReceiptCardProps) {\n  // formatDate와 formatFileSize는 utils에서 import\n\n  return (\n    <Card className=\"w-full border border-gray-200 hover:shadow-md transition-shadow cursor-pointer\" onClick={() => onView(receipt)}>\n      <CardContent className=\"p-4\">\n        <div className=\"space-y-3\">\n          {/* 상단: 인쇄 상태 + 업로드일 */}\n          <div className=\"flex items-center justify-between\">\n            {receipt.is_printed ? (\n              <Badge className=\"bg-green-100 text-green-700 hover:bg-green-100 text-xs\">\n                ✓ 인쇄완료\n              </Badge>\n            ) : (\n              <Badge variant=\"secondary\" className=\"bg-gray-100 text-gray-600 text-xs\">\n                미완료\n              </Badge>\n            )}\n            <div className=\"flex items-center gap-1 text-xs text-gray-500\">\n              <Calendar className=\"w-3 h-3\" />\n              <span>{formatDate(receipt.uploaded_at)}</span>\n            </div>\n          </div>\n\n          {/* 파일명 */}\n          <div className=\"flex items-center gap-2\">\n            <FileText className=\"w-4 h-4 text-hansl-600\" />\n            <span className=\"font-semibold text-gray-900\">\n              {receipt.file_name}\n            </span>\n          </div>\n\n          {/* 메모 */}\n          {receipt.memo && (\n            <div className=\"text-sm text-gray-900 bg-gray-50 rounded p-2\">\n              {receipt.memo}\n            </div>\n          )}\n\n          {/* 업로드 정보 */}\n          <div className=\"flex items-center justify-between text-sm\">\n            <div className=\"flex items-center gap-1 text-gray-600\">\n              <User className=\"w-3 h-3\" />\n              <span>{receipt.uploaded_by_name || receipt.uploaded_by}</span>\n            </div>\n            <span className=\"text-gray-500\">{formatFileSize(receipt.file_size)}</span>\n          </div>\n\n          {/* 액션 버튼 */}\n          <div className={`flex gap-2 pt-2 border-t border-gray-100 ${onDelete ? 'grid grid-cols-3' : 'grid grid-cols-2'}`}>\n            <Button\n              size=\"sm\"\n              variant=\"outline\"\n              onClick={(e) => {\n                e.stopPropagation();\n                onPrint(receipt);\n              }}\n              className=\"flex-1\"\n            >\n              <Printer className=\"w-4 h-4 mr-1\" />\n              인쇄\n            </Button>\n            <Button\n              size=\"sm\"\n              variant=\"outline\"\n              onClick={(e) => {\n                e.stopPropagation();\n                onDownload(receipt);\n              }}\n              className=\"flex-1\"\n            >\n              <Download className=\"w-4 h-4 mr-1\" />\n              다운로드\n            </Button>\n            {onDelete && (\n              <Button\n                size=\"sm\"\n                variant=\"outline\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  onDelete(receipt);\n                }}\n                className=\"flex-1 border-red-200 text-red-600 hover:bg-red-50\"\n              >\n                <Trash2 className=\"w-4 h-4 mr-1\" />\n                삭제\n              </Button>\n            )}\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}","import { useState, useCallback } from \"react\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogDescription,\n} from \"@/components/ui/dialog\";\nimport { Button } from \"@/components/ui/button\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Label } from \"@/components/ui/label\";\nimport { Upload, X, FileImage } from \"lucide-react\";\nimport { toast } from \"sonner\";\nimport { createClient } from \"@/lib/supabase/client\";\nimport { useReceiptPermissions } from \"@/hooks/useReceiptPermissions\";\n\ninterface ReceiptUploadModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onSuccess: () => void;\n}\n\nexport default function ReceiptUploadModal({ isOpen, onClose, onSuccess }: ReceiptUploadModalProps) {\n  const [file, setFile] = useState<File | null>(null);\n  const [memo, setMemo] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n  const [dragOver, setDragOver] = useState(false);\n  \n  const supabase = createClient();\n  const { permissions } = useReceiptPermissions();\n\n  // 파일 선택 핸들러 - useCallback으로 최적화\n  const handleFileSelect = useCallback((selectedFile: File) => {\n    // 이미지 파일만 허용\n    if (!selectedFile.type.startsWith('image/')) {\n      toast.error('이미지 파일만 업로드할 수 있습니다.');\n      return;\n    }\n\n    // 파일 크기 제한 (10MB)\n    if (selectedFile.size > 10 * 1024 * 1024) {\n      toast.error('파일 크기는 10MB 이하여야 합니다.');\n      return;\n    }\n\n    setFile(selectedFile);\n  }, []);\n\n  // 드래그 앤 드롭 핸들러\n  const handleDragOver = (e: React.DragEvent) => {\n    e.preventDefault();\n    setDragOver(true);\n  };\n\n  const handleDragLeave = (e: React.DragEvent) => {\n    e.preventDefault();\n    setDragOver(false);\n  };\n\n  const handleDrop = (e: React.DragEvent) => {\n    e.preventDefault();\n    setDragOver(false);\n    \n    const files = Array.from(e.dataTransfer.files);\n    if (files.length > 0) {\n      handleFileSelect(files[0]);\n    }\n  };\n\n  // 업로드 핸들러 - useCallback으로 최적화\n  const handleUpload = useCallback(async () => {\n    if (!permissions.canUpload) {\n      toast.error('업로드 권한이 없습니다.');\n      return;\n    }\n\n    if (!file) {\n      toast.error('파일을 선택해주세요.');\n      return;\n    }\n\n    try {\n      setUploading(true);\n\n      // 현재 사용자 정보 가져오기\n      const { data: { user }, error: userError } = await supabase.auth.getUser();\n      if (userError || !user) {\n        throw new Error('로그인이 필요합니다.');\n      }\n\n      // 사용자 이름 가져오기\n      const { data: employee, error: employeeError } = await supabase\n        .from('employees')\n        .select('name')\n        .eq('email', user.email)\n        .single();\n\n      const userName = employee?.name || '';\n\n      // 파일명 생성\n      const now = new Date();\n      const fileExtension = file.name.split('.').pop() || 'jpg';\n      const fileName = `rec${now.getFullYear().toString().substring(2)}${(now.getMonth() + 1).toString().padStart(2, '0')}${now.getDate().toString().padStart(2, '0')}${now.getHours().toString().padStart(2, '0')}${now.getMinutes().toString().padStart(2, '0')}.${fileExtension}`;\n      \n      // 파일 경로\n      const filePath = `receipts/web/${now.getTime()}/${fileName}`;\n\n      // Supabase Storage에 업로드\n      const { error: uploadError } = await supabase.storage\n        .from('receipt-images')\n        .upload(filePath, file, {\n          contentType: file.type,\n          upsert: false,\n        });\n\n      if (uploadError) throw uploadError;\n\n      // Public URL 생성\n      const { data: { publicUrl } } = supabase.storage\n        .from('receipt-images')\n        .getPublicUrl(filePath);\n\n      // DB에 저장 - memo 칼럼 포함\n      const { error: dbError } = await supabase\n        .from('purchase_receipts')\n        .insert({\n          receipt_image_url: publicUrl,\n          file_name: fileName,\n          file_size: file.size,\n          uploaded_by: user.email!,\n          uploaded_by_name: userName,\n          memo: memo || null,\n          uploaded_at: new Date().toISOString(),\n        });\n\n      if (dbError) throw dbError;\n\n      toast.success('영수증이 성공적으로 업로드되었습니다.');\n      handleClose();\n      onSuccess();\n    } catch (error) {\n      console.error('업로드 오류:', error);\n      toast.error(`업로드 실패: ${error instanceof Error ? error.message : error}`);\n    } finally {\n      setUploading(false);\n    }\n  }, [file, memo, permissions.canUpload, onSuccess]);\n\n  // 모달 닫기 - useCallback으로 최적화\n  const handleClose = useCallback(() => {\n    setFile(null);\n    setMemo(\"\");\n    setUploading(false);\n    setDragOver(false);\n    onClose();\n  }, [onClose]);\n\n  return (\n    <Dialog open={isOpen} onOpenChange={handleClose}>\n      <DialogContent className=\"max-w-lg\">\n        <DialogHeader className=\"space-y-3\">\n          <div className=\"flex items-center justify-between\">\n            <DialogTitle className=\"text-xl font-bold text-gray-900\">📎 영수증 업로드</DialogTitle>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={handleClose}\n              className=\"h-8 w-8 p-0 hover:bg-gray-100\"\n            >\n              <X className=\"h-4 w-4\" />\n            </Button>\n          </div>\n          <DialogDescription className=\"text-sm text-gray-600\">\n            영수증 이미지를 업로드하고 메모를 추가할 수 있습니다.\n          </DialogDescription>\n        </DialogHeader>\n\n        <div className=\"space-y-6 pt-2\">\n          {/* 파일 업로드 영역 */}\n          <div className=\"space-y-2\">\n            <Label className=\"text-sm font-medium text-gray-700\">파일 선택</Label>\n            <div\n              className={`relative border-2 border-dashed rounded-xl p-8 text-center transition-all duration-200 cursor-pointer ${\n                dragOver\n                  ? 'border-hansl-400 bg-hansl-50 scale-[1.02]'\n                  : file\n                  ? 'border-green-400 bg-green-50'\n                  : 'border-gray-300 hover:border-hansl-300 hover:bg-gray-50'\n              }`}\n              onDragOver={handleDragOver}\n              onDragLeave={handleDragLeave}\n              onDrop={handleDrop}\n            >\n              {file ? (\n                <div className=\"space-y-3\">\n                  <div className=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto\">\n                    <FileImage className=\"w-8 h-8 text-green-600\" />\n                  </div>\n                  <div className=\"space-y-1\">\n                    <p className=\"text-sm font-medium text-green-800 truncate max-w-[200px] mx-auto\">{file.name}</p>\n                    <p className=\"text-xs text-green-600\">\n                      {(file.size / 1024 / 1024).toFixed(2)}MB\n                    </p>\n                  </div>\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => setFile(null)}\n                    className=\"mt-3 text-red-600 border-red-200 hover:bg-red-50\"\n                  >\n                    <X className=\"w-3 h-3 mr-1\" />\n                    제거\n                  </Button>\n                </div>\n              ) : (\n                <div className=\"space-y-4\">\n                  <div className=\"w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto\">\n                    <Upload className=\"w-8 h-8 text-gray-400\" />\n                  </div>\n                  <div className=\"space-y-2\">\n                    <p className=\"text-sm font-medium text-gray-700\">\n                      이미지를 드래그하여 놓거나 클릭하여 선택하세요\n                    </p>\n                    <p className=\"text-xs text-gray-500\">\n                      JPG, PNG, HEIC, WebP • 최대 10MB\n                    </p>\n                  </div>\n                </div>\n              )}\n              \n              {!file && (\n                <input\n                  type=\"file\"\n                  accept=\"image/*\"\n                  onChange={(e) => {\n                    const selectedFile = e.target.files?.[0];\n                    if (selectedFile) {\n                      handleFileSelect(selectedFile);\n                    }\n                  }}\n                  className=\"absolute inset-0 w-full h-full opacity-0 cursor-pointer\"\n                />\n              )}\n            </div>\n          </div>\n\n          {/* 메모 */}\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"memo\" className=\"text-sm font-medium text-gray-700\">\n              메모 <span className=\"text-gray-400 text-xs\">(선택사항)</span>\n            </Label>\n            <Textarea\n              id=\"memo\"\n              placeholder=\"영수증에 대한 간단한 메모를 입력하세요\"\n              value={memo}\n              onChange={(e) => setMemo(e.target.value)}\n              className=\"resize-none border-gray-200 focus:border-hansl-400 focus:ring-hansl-400\"\n              rows={3}\n            />\n          </div>\n\n\n          {/* 업로드 버튼 */}\n          <div className=\"flex gap-3 pt-6 border-t border-gray-100\">\n            <Button\n              variant=\"outline\"\n              onClick={handleClose}\n              className=\"flex-1 h-11 border-gray-200 hover:bg-gray-50\"\n              disabled={uploading}\n            >\n              취소\n            </Button>\n            <Button\n              onClick={handleUpload}\n              disabled={!file || uploading}\n              className=\"flex-1 h-11 bg-hansl-600 hover:bg-hansl-700 text-white font-medium shadow-sm\"\n            >\n              {uploading ? (\n                <div className=\"flex items-center gap-2\">\n                  <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\" />\n                  업로드 중...\n                </div>\n              ) : (\n                <>\n                  <Upload className=\"w-4 h-4 mr-2\" />\n                  업로드\n                </>\n              )}\n            </Button>\n          </div>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n}","import { useState, useEffect, useCallback, useMemo } from \"react\";\nimport { createClient } from \"@/lib/supabase/client\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Search, Filter, Receipt, Printer, Download, Calendar, Plus, Trash2 } from \"lucide-react\";\nimport { toast } from \"sonner\";\nimport ReceiptDetailModal from \"./ReceiptDetailModal\";\nimport MobileReceiptCard from \"./MobileReceiptCard\";\nimport ReceiptUploadModal from \"./ReceiptUploadModal\";\nimport { useReceiptPermissions } from \"@/hooks/useReceiptPermissions\";\nimport type { ReceiptItem } from \"@/types/receipt\";\nimport { formatDate, formatFileSize, extractStoragePathFromUrl } from \"@/utils/receipt\";\n\n/**\n * 영수증 관리 메인 페이지 컴포넌트\n * \n * 영수증 목록 조회, 검색, 필터링, 업로드, 다운로드, 인쇄, 삭제 기능을 제공합니다.\n * 사용자 권한에 따라 기능이 제한됩니다.\n * \n * @component\n * \n * ### 주요 기능\n * - 영수증 목록 조회 (데스크톱: 테이블, 모바일: 카드)\n * - 파일명, 메모, 날짜 기반 검색\n * - 날짜 필터링\n * - 권한 기반 UI 제어\n * - 영수증 상세보기 모달\n * - 업로드 모달\n * \n * ### 권한 체계\n * - `app_admin`: 모든 기능 + 삭제 + 등록인 정보 조회\n * - `hr`, `lead buyer`: 조회, 업로드, 다운로드, 인쇄\n * - 기타: 접근 불가\n * \n * @example\n * ```tsx\n * // App.tsx에서 라우팅\n * <Route path=\"/receipts\" element={<ReceiptsMain />} />\n * ```\n */\nexport default function ReceiptsMain() {\n  const [receipts, setReceipts] = useState<ReceiptItem[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [dateFilter, setDateFilter] = useState(\"\");\n  const [selectedReceipt, setSelectedReceipt] = useState<ReceiptItem | null>(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isUploadModalOpen, setIsUploadModalOpen] = useState(false);\n\n  const supabase = createClient();\n  const { permissions, loading: permissionsLoading } = useReceiptPermissions();\n\n  // 권한 없는 사용자 접근 차단\n  useEffect(() => {\n    if (!permissionsLoading && !permissions.canView) {\n      toast.error('영수증 관리에 접근할 권한이 없습니다.');\n      // 적절한 페이지로 리다이렉트 가능\n    }\n  }, [permissions.canView, permissionsLoading]);\n\n  // 영수증 데이터 로드 - useCallback으로 최적화\n  const loadReceipts = useCallback(async () => {\n    if (!permissions.canView) return;\n    \n    try {\n      setLoading(true);\n      \n      const { data, error } = await supabase\n        .from('purchase_receipts')\n        .select(`\n          id,\n          receipt_image_url,\n          file_name,\n          file_size,\n          uploaded_by,\n          uploaded_by_name,\n          uploaded_at,\n          memo,\n          is_printed,\n          printed_at,\n          printed_by,\n          printed_by_name\n        `)\n        .order('uploaded_at', { ascending: false });\n\n      if (error) throw error;\n\n      setReceipts(data || []);\n    } catch (error) {\n      console.error('영수증 조회 오류:', error);\n      toast.error('영수증 데이터를 불러오는데 실패했습니다.');\n    } finally {\n      setLoading(false);\n    }\n  }, [permissions.canView, supabase]);\n\n  // 필터링 로직 - useMemo로 최적화\n  const filteredReceipts = useMemo(() => {\n    let filtered = [...receipts];\n\n    // 검색어 필터\n    if (searchTerm) {\n      const searchLower = searchTerm.toLowerCase();\n      filtered = filtered.filter(receipt => \n        receipt.file_name.toLowerCase().includes(searchLower) ||\n        receipt.memo?.toLowerCase().includes(searchLower) ||\n        formatDate(receipt.uploaded_at).includes(searchTerm) ||\n        receipt.uploaded_at.includes(searchTerm)\n      );\n    }\n\n    // 날짜 필터\n    if (dateFilter) {\n      filtered = filtered.filter(receipt => {\n        if (!receipt.uploaded_at) return false;\n        const uploadDate = new Date(receipt.uploaded_at).toISOString().split('T')[0];\n        return uploadDate === dateFilter;\n      });\n    }\n\n    return filtered;\n  }, [receipts, searchTerm, dateFilter]);\n\n  // 컴포넌트 마운트 시 데이터 로드\n  useEffect(() => {\n    if (!permissionsLoading) {\n      loadReceipts();\n    }\n  }, [loadReceipts, permissionsLoading]);\n\n  // formatDate는 utils에서 import하므로 제거\n\n  // 영수증 상세보기\n  const handleViewReceipt = (receipt: ReceiptItem) => {\n    setSelectedReceipt(receipt);\n    setIsModalOpen(true);\n  };\n\n  // 영수증 인쇄 완료 처리\n  const markAsPrinted = useCallback(async (receiptId: string) => {\n    console.log('🖨️ [ReceiptsMain] 인쇄완료 처리 시작:', {\n      receiptId,\n      timestamp: new Date().toISOString(),\n      location: 'ReceiptsMain.tsx'\n    });\n\n    try {\n      // 1. 사용자 인증 정보 확인\n      console.log('🔐 [ReceiptsMain] 사용자 인증 정보 확인 중...');\n      const { data: { user }, error: authError } = await supabase.auth.getUser();\n      \n      if (authError) {\n        console.error('❌ [ReceiptsMain] 인증 오류:', authError);\n        toast.error('사용자 인증에 실패했습니다.');\n        return;\n      }\n      \n      if (!user) {\n        console.error('❌ [ReceiptsMain] 사용자 정보 없음');\n        toast.error('사용자 정보를 불러올 수 없습니다.');\n        return;\n      }\n\n      console.log('✅ [ReceiptsMain] 사용자 인증 성공:', {\n        userId: user.id,\n        email: user.email,\n        lastSignIn: user.last_sign_in_at\n      });\n\n      // 2. 사용자 권한 및 정보 확인\n      console.log('👤 [ReceiptsMain] 직원 정보 조회 중...');\n      const { data: employee, error: empError } = await supabase\n        .from('employees')\n        .select('name, purchase_role')\n        .eq('email', user.email)\n        .single();\n\n      if (empError) {\n        console.error('❌ [ReceiptsMain] 직원 정보 조회 실패:', empError);\n        toast.error('직원 정보를 불러올 수 없습니다.');\n        return;\n      }\n\n      console.log('✅ [ReceiptsMain] 직원 정보 조회 성공:', {\n        name: employee?.name,\n        email: user.email,\n        role: employee?.purchase_role\n      });\n\n      // 3. 권한 검증\n      const role = employee?.purchase_role || '';\n      const hasPermission = role.includes('app_admin') || role.includes('hr') || role.includes('lead buyer');\n      \n      console.log('🛡️ [ReceiptsMain] 권한 검증:', {\n        role,\n        hasPermission,\n        isAppAdmin: role.includes('app_admin'),\n        isHr: role.includes('hr'),\n        isLeadBuyer: role.includes('lead buyer')\n      });\n\n      if (!hasPermission) {\n        console.error('❌ [ReceiptsMain] 권한 부족:', { role });\n        toast.error('인쇄완료 처리 권한이 없습니다.');\n        return;\n      }\n\n      // 4. 업데이트 데이터 준비\n      const updateData = {\n        is_printed: true,\n        printed_at: new Date().toISOString(),\n        printed_by: user.id,\n        printed_by_name: employee?.name || user.email\n      };\n\n      console.log('📝 [ReceiptsMain] 업데이트 데이터 준비:', updateData);\n\n      // 5. 데이터베이스 업데이트 실행\n      console.log('🔄 [ReceiptsMain] 데이터베이스 업데이트 실행 중...');\n      const startTime = performance.now();\n      \n      const { data: updateResult, error: updateError } = await supabase\n        .from('purchase_receipts')\n        .update(updateData)\n        .eq('id', receiptId)\n        .select('*');\n\n      const endTime = performance.now();\n      const executionTime = endTime - startTime;\n\n      if (updateError) {\n        console.error('❌ [ReceiptsMain] 업데이트 실패:', {\n          error: updateError,\n          code: updateError.code,\n          message: updateError.message,\n          details: updateError.details,\n          hint: updateError.hint,\n          executionTime: `${executionTime.toFixed(2)}ms`\n        });\n        \n        // RLS 관련 오류 특별 처리\n        if (updateError.code === '42501' || updateError.message?.includes('policy')) {\n          toast.error('데이터베이스 권한 오류가 발생했습니다. 관리자에게 문의하세요.');\n        } else {\n          toast.error(`업데이트 실패: ${updateError.message}`);\n        }\n        return;\n      }\n\n      console.log('✅ [ReceiptsMain] 업데이트 성공:', {\n        updateResult,\n        executionTime: `${executionTime.toFixed(2)}ms`,\n        affectedRows: updateResult?.length || 0\n      });\n\n      // 6. 성공 처리\n      toast.success('인쇄 완료로 표시되었습니다.');\n      \n      // 7. 목록 새로고침\n      console.log('🔄 [ReceiptsMain] 목록 새로고침 처리...');\n      loadReceipts();\n\n      console.log('🎉 [ReceiptsMain] 인쇄완료 처리 완료:', {\n        receiptId,\n        success: true,\n        timestamp: new Date().toISOString()\n      });\n\n    } catch (error) {\n      const errorObj = error as any;\n      console.error('💥 [ReceiptsMain] 예외 발생:', {\n        error,\n        message: errorObj?.message,\n        stack: errorObj?.stack,\n        receiptId,\n        timestamp: new Date().toISOString()\n      });\n      \n      toast.error(`인쇄 완료 처리에 실패했습니다: ${errorObj?.message || '알 수 없는 오류'}`);\n    }\n  }, [supabase, loadReceipts]);\n\n  // 영수증 인쇄\n  const handlePrintReceipt = async (receipt: ReceiptItem) => {\n    if (!receipt.receipt_image_url) {\n      toast.error('영수증 이미지가 없습니다.');\n      return;\n    }\n\n    try {\n      // 새 창에서 인쇄용 페이지 열기\n      const printWindow = window.open('', '_blank');\n      if (!printWindow) {\n        toast.error('팝업이 차단되었습니다. 팝업을 허용해주세요.');\n        return;\n      }\n\n      printWindow.document.write(`\n        <!DOCTYPE html>\n        <html>\n        <head>\n          <title>영수증 인쇄</title>\n          <style>\n            * {\n              margin: 0;\n              padding: 0;\n              box-sizing: border-box;\n            }\n            body {\n              display: flex;\n              justify-content: center;\n              align-items: center;\n              min-height: 100vh;\n              background: white;\n            }\n            .receipt-image {\n              max-width: 100%;\n              max-height: 100vh;\n              object-fit: contain;\n            }\n            @media print {\n              body {\n                margin: 0;\n                padding: 0;\n              }\n              .receipt-image {\n                max-width: 100%;\n                max-height: 100%;\n                width: auto;\n                height: auto;\n              }\n            }\n          </style>\n        </head>\n        <body>\n          <img \n            src=\"${receipt.receipt_image_url}\" \n            alt=\"영수증\" \n            class=\"receipt-image\"\n            onload=\"window.print(); window.close();\"\n            onerror=\"alert('이미지를 불러올 수 없습니다.'); window.close();\"\n          />\n        </body>\n        </html>\n      `);\n      \n      printWindow.document.close();\n\n      // 인쇄 완료 확인 다이얼로그\n      setTimeout(() => {\n        if (confirm('인쇄를 완료하셨습니까?')) {\n          markAsPrinted(receipt.id);\n        }\n      }, 1000);\n    } catch (error) {\n      console.error('인쇄 오류:', error);\n      toast.error('인쇄에 실패했습니다.');\n    }\n  };\n\n  // 영수증 이미지 다운로드\n  const handleDownloadReceipt = async (receipt: ReceiptItem) => {\n    if (!receipt.receipt_image_url) {\n      toast.error('영수증 이미지가 없습니다.');\n      return;\n    }\n\n    try {\n      // URL에서 파일 경로 추출 (Supabase Storage 경로)\n      const url = new URL(receipt.receipt_image_url);\n      const pathSegments = url.pathname.split('/');\n      const bucketIndex = pathSegments.indexOf('receipt-images');\n      \n      if (bucketIndex === -1) {\n        throw new Error('잘못된 영수증 URL입니다');\n      }\n      \n      const filePath = pathSegments.slice(bucketIndex + 1).join('/');\n\n      // Supabase Storage에서 다운로드\n      const { data, error } = await supabase.storage\n        .from('receipt-images')\n        .download(filePath);\n\n      if (error) throw error;\n\n      // Blob을 다운로드 가능한 URL로 변환\n      const blob = new Blob([data], { type: 'image/jpeg' });\n      const downloadUrl = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = downloadUrl;\n      a.download = receipt.file_name || `영수증_${receipt.id}.jpg`;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      window.URL.revokeObjectURL(downloadUrl);\n      \n      toast.success('영수증 이미지가 다운로드되었습니다.');\n    } catch (error) {\n      console.error('다운로드 오류:', error);\n      toast.error('다운로드에 실패했습니다.');\n    }\n  };\n\n  // 영수증 삭제 - useCallback으로 최적화\n  const handleDeleteReceipt = useCallback(async (receipt: ReceiptItem) => {\n    if (!permissions.canDelete) {\n      toast.error('삭제 권한이 없습니다.');\n      return;\n    }\n\n    if (!confirm(`정말로 \"${receipt.file_name}\" 영수증을 삭제하시겠습니까?`)) {\n      return;\n    }\n\n    try {\n      // URL에서 파일 경로 추출 (유틸리티 함수 사용)\n      const filePath = extractStoragePathFromUrl(receipt.receipt_image_url);\n      \n      if (filePath) {\n        \n        // Supabase Storage에서 파일 삭제\n        const { error: storageError } = await supabase.storage\n          .from('receipt-images')\n          .remove([filePath]);\n\n        if (storageError) {\n          console.warn('스토리지 파일 삭제 실패:', storageError);\n        }\n      }\n\n      // DB에서 레코드 삭제\n      const { error: dbError } = await supabase\n        .from('purchase_receipts')\n        .delete()\n        .eq('id', receipt.id);\n\n      if (dbError) throw dbError;\n\n      toast.success('영수증이 삭제되었습니다.');\n      loadReceipts(); // 목록 새로고침\n    } catch (error) {\n      console.error('삭제 오류:', error);\n      toast.error('삭제에 실패했습니다.');\n    }\n  }, [permissions.canDelete, loadReceipts]);\n\n  return (\n    <div className=\"w-full\">\n      {/* Header */}\n      <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between mb-4\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900\">영수증 관리</h1>\n          <p className=\"text-sm text-gray-600 mt-1\">업로드된 영수증을 확인하고 관리할 수 있습니다</p>\n        </div>\n        <div className=\"flex items-center gap-2 mt-4 sm:mt-0\">\n          <Button\n            onClick={() => {\n              console.log('업로드 버튼 클릭됨');\n              setIsUploadModalOpen(true);\n              console.log('모달 상태 변경됨:', true);\n            }}\n            className=\"bg-hansl-600 hover:bg-hansl-700 text-white\"\n          >\n            <Plus className=\"w-4 h-4 mr-2\" />\n            영수증 업로드\n          </Button>\n          <Badge variant=\"secondary\" className=\"text-sm\">\n            총 {filteredReceipts.length}건\n          </Badge>\n        </div>\n      </div>\n\n      {/* 필터 섹션 */}\n      <Card className=\"mb-4 border border-gray-200\">\n        <CardHeader className=\"bg-white border-b border-gray-200 py-3\">\n          <CardTitle className=\"flex items-center text-gray-900 text-sm font-medium\">\n            <Filter className=\"w-4 h-4 mr-2\" />\n            검색 필터\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"py-3\">\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-2\">\n            <div>\n              <label className=\"block text-xs font-medium text-gray-600 mb-1\">검색</label>\n              <div className=\"relative\">\n                <Search className=\"absolute left-2 top-1/2 transform -translate-y-1/2 w-3 h-3 text-gray-400\" />\n                <Input\n                  placeholder=\"파일명, 메모, 업로드일...\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  className=\"pl-7 text-sm h-9\"\n                />\n              </div>\n            </div>\n\n            <div>\n              <label className=\"block text-xs font-medium text-gray-600 mb-1\">업로드 날짜</label>\n              <Input\n                type=\"date\"\n                value={dateFilter}\n                onChange={(e) => setDateFilter(e.target.value)}\n                className=\"text-sm h-9\"\n              />\n            </div>\n\n            <div className=\"flex items-end\">\n              <Button\n                variant=\"outline\"\n                onClick={() => {\n                  setSearchTerm(\"\");\n                  setDateFilter(\"\");\n                }}\n                className=\"h-9 text-sm\"\n              >\n                초기화\n              </Button>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* 영수증 목록 */}\n      <Card className=\"overflow-hidden border border-gray-200\">\n        <CardContent className=\"p-0\">\n          {(loading || permissionsLoading) ? (\n            <div className=\"flex items-center justify-center py-12\">\n              <div className=\"w-8 h-8 border-2 border-hansl-500 border-t-transparent rounded-full animate-spin\" />\n              <span className=\"ml-3 text-gray-600\">로딩 중...</span>\n            </div>\n          ) : !permissions.canView ? (\n            <div className=\"text-center py-12\">\n              <div className=\"w-12 h-12 text-red-400 mx-auto mb-4\">🔒</div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">접근 권한 없음</h3>\n              <p className=\"text-gray-600\">영수증 관리에 접근할 권한이 없습니다.</p>\n            </div>\n          ) : filteredReceipts.length === 0 ? (\n            <div className=\"text-center py-12\">\n              <Receipt className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">영수증이 없습니다</h3>\n              <p className=\"text-gray-600\">업로드된 영수증이 없거나 검색 조건에 맞는 결과가 없습니다.</p>\n            </div>\n          ) : (\n            <>\n              {/* 데스크톱 테이블 뷰 */}\n              <div className=\"hidden md:block overflow-x-auto\">\n                <table className=\"w-full min-w-fit\">\n                <thead className=\"bg-gray-50\">\n                  <tr>\n                    <th className=\"px-4 py-3 text-center text-xs font-semibold text-gray-600 uppercase tracking-wider\">인쇄완료</th>\n                    <th className=\"px-4 py-3 text-center text-xs font-semibold text-gray-600 uppercase tracking-wider\">업로드일</th>\n                    <th className=\"px-4 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">파일명</th>\n                    <th className=\"px-4 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">메모</th>\n                    {permissions.canViewUploaderInfo && (\n                      <th className=\"px-4 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">등록인</th>\n                    )}\n                    <th className=\"px-4 py-3 text-center text-xs font-semibold text-gray-600 uppercase tracking-wider\">크기</th>\n                    <th className=\"px-4 py-3 text-center text-xs font-semibold text-gray-600 uppercase tracking-wider\">액션</th>\n                    {permissions.canDelete && (\n                      <th className=\"px-4 py-3 text-center text-xs font-semibold text-gray-600 uppercase tracking-wider\">삭제</th>\n                    )}\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-200\">\n                  {filteredReceipts.map((receipt) => (\n                    <tr \n                      key={receipt.id} \n                      className=\"hover:bg-gray-50 transition-colors cursor-pointer\"\n                      onClick={() => handleViewReceipt(receipt)}\n                    >\n                      <td className=\"px-4 py-3 text-sm text-center\">\n                        {receipt.is_printed ? (\n                          <Badge className=\"bg-green-100 text-green-700 hover:bg-green-100\">\n                            ✓ 완료\n                          </Badge>\n                        ) : (\n                          <Badge variant=\"secondary\" className=\"bg-gray-100 text-gray-600\">\n                            미완료\n                          </Badge>\n                        )}\n                      </td>\n                      <td className=\"px-4 py-3 text-sm text-center text-gray-600\">\n                        {formatDate(receipt.uploaded_at)}\n                      </td>\n                      <td className=\"px-4 py-3 text-sm font-medium text-gray-900\">\n                        {receipt.file_name}\n                      </td>\n                      <td className=\"px-4 py-3 text-sm text-gray-900\">\n                        {receipt.memo || '-'}\n                      </td>\n                      {permissions.canViewUploaderInfo && (\n                        <td className=\"px-4 py-3 text-sm text-gray-600\">\n                          {receipt.uploaded_by_name || receipt.uploaded_by}\n                        </td>\n                      )}\n                      <td className=\"px-4 py-3 text-sm text-center text-gray-600\">\n                        {formatFileSize(receipt.file_size)}\n                      </td>\n                      <td className=\"px-4 py-3 text-sm text-center\">\n                        <div className=\"flex items-center justify-center gap-1\">\n                          <Button\n                            size=\"sm\"\n                            variant=\"ghost\"\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              handlePrintReceipt(receipt);\n                            }}\n                            className=\"h-8 w-8 p-0\"\n                            title=\"인쇄\"\n                          >\n                            <Printer className=\"w-4 h-4\" />\n                          </Button>\n                          <Button\n                            size=\"sm\"\n                            variant=\"ghost\"\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              handleDownloadReceipt(receipt);\n                            }}\n                            className=\"h-8 w-8 p-0\"\n                            title=\"다운로드\"\n                          >\n                            <Download className=\"w-4 h-4\" />\n                          </Button>\n                        </div>\n                      </td>\n                      {permissions.canDelete && (\n                        <td className=\"px-4 py-3 text-sm text-center\">\n                          <Button\n                            size=\"sm\"\n                            variant=\"ghost\"\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              handleDeleteReceipt(receipt);\n                            }}\n                            className=\"h-8 w-8 p-0 text-red-600 hover:bg-red-50\"\n                            title=\"삭제\"\n                          >\n                            <Trash2 className=\"w-4 h-4\" />\n                          </Button>\n                        </td>\n                      )}\n                    </tr>\n                  ))}\n                </tbody>\n                </table>\n              </div>\n\n              {/* 모바일 카드 뷰 */}\n              <div className=\"md:hidden space-y-3 p-4\">\n                {filteredReceipts.map((receipt) => (\n                  <MobileReceiptCard\n                    key={receipt.id}\n                    receipt={receipt}\n                    onView={handleViewReceipt}\n                    onPrint={handlePrintReceipt}\n                    onDownload={handleDownloadReceipt}\n                    onDelete={permissions.canDelete ? handleDeleteReceipt : undefined}\n                  />\n                ))}\n              </div>\n            </>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* 영수증 상세보기 모달 */}\n      {selectedReceipt && (\n        <ReceiptDetailModal\n          receipt={selectedReceipt}\n          isOpen={isModalOpen}\n          onClose={() => {\n            setIsModalOpen(false);\n            setSelectedReceipt(null);\n          }}\n          onDelete={() => {\n            loadReceipts(); // 삭제 후 목록 새로고침\n          }}\n        />\n      )}\n\n      {/* 영수증 업로드 모달 */}\n      <ReceiptUploadModal\n        isOpen={isUploadModalOpen}\n        onClose={() => setIsUploadModalOpen(false)}\n        onSuccess={() => {\n          loadReceipts(); // 업로드 후 목록 새로고침\n        }}\n      />\n    </div>\n  );\n}"],"names":["__iconNode","FileImage","createLucideIcon","Printer","RotateCcw","Upload","ZoomIn","ZoomOut","useReceiptPermissions","permissions","setPermissions","useState","userRole","setUserRole","loading","setLoading","supabase","createClient","checkPermissions","user","employee","role","isAppAdmin","isHr","isLeadBuyer","hasReceiptAccess","error","useEffect","ReceiptDebugMonitor","authError","empError","type","level","message","data","event","originalFetch","args","url","options","isSupabaseRequest","requestInfo","response","responseInfo","hasPermission","receiptId","receiptName","success","executionTime","authEvents","e","permissionEvents","updateEvents","errorEvents","debugMonitor","ReceiptDetailModal","receipt","isOpen","onClose","onDelete","imageScale","setImageScale","imageRotation","setImageRotation","imageError","setImageError","deleting","setDeleting","imageDimensions","setImageDimensions","imageLoaded","setImageLoaded","handleDownload","pathSegments","bucketIndex","filePath","blob","downloadUrl","a","toast","handleZoomIn","prev","handleZoomOut","handleRotate","handleImageLoad","img","getOptimalImageStyle","containerWidth","containerHeight","widthRatio","heightRatio","optimalRatio","markAsPrinted","useCallback","updateData","startTime","updateResult","updateError","affectedRows","errorObj","handlePrint","printWindow","userConfirmed","handleDelete","storageError","dbError","jsx","Dialog","DialogContent","jsxs","Button","X","Download","Trash2","formatFileSize","bytes","k","sizes","i","formatDate","dateStr","date","extractStoragePathFromUrl","bucketName","MobileReceiptCard","onView","onPrint","onDownload","Card","CardContent","Badge","Calendar","FileText","User","ReceiptUploadModal","onSuccess","file","setFile","memo","setMemo","uploading","setUploading","dragOver","setDragOver","handleFileSelect","selectedFile","handleDragOver","handleDragLeave","handleDrop","files","handleUpload","userError","employeeError","userName","now","fileExtension","fileName","uploadError","publicUrl","handleClose","DialogHeader","DialogTitle","DialogDescription","Label","Textarea","Fragment","ReceiptsMain","receipts","setReceipts","searchTerm","setSearchTerm","dateFilter","setDateFilter","selectedReceipt","setSelectedReceipt","isModalOpen","setIsModalOpen","isUploadModalOpen","setIsUploadModalOpen","permissionsLoading","loadReceipts","filteredReceipts","useMemo","filtered","searchLower","handleViewReceipt","handlePrintReceipt","handleDownloadReceipt","handleDeleteReceipt","Plus","CardHeader","CardTitle","Filter","Search","Input","Receipt"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5]}