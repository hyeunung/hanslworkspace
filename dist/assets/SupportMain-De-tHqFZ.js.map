{"version":3,"file":"SupportMain-De-tHqFZ.js","sources":["../../node_modules/lucide-react/dist/esm/icons/send.js","../../src/services/supportService.ts","../../src/components/support/SupportMain.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M14.536 21.686a.5.5 0 0 0 .937-.024l6.5-19a.496.496 0 0 0-.635-.635l-19 6.5a.5.5 0 0 0-.024.937l7.93 3.18a2 2 0 0 1 1.112 1.11z\",\n      key: \"1ffxy3\"\n    }\n  ],\n  [\"path\", { d: \"m21.854 2.147-10.94 10.939\", key: \"12cjpa\" }]\n];\nconst Send = createLucideIcon(\"send\", __iconNode);\n\nexport { __iconNode, Send as default };\n//# sourceMappingURL=send.js.map\n","import { createClient } from '@/lib/supabase/client'\n\nexport interface SupportInquiry {\n  id?: number\n  created_at?: string\n  updated_at?: string\n  user_id?: string\n  user_email?: string\n  user_name?: string\n  inquiry_type: 'bug' | 'modify' | 'delete' | 'other' | 'annual_leave' | 'attendance'\n  subject: string\n  message: string\n  status?: 'open' | 'in_progress' | 'resolved' | 'closed'\n  handled_by?: string\n  resolution_note?: string\n  purchase_request_id?: number | null\n  purchase_info?: string\n  purchase_order_number?: string\n  processed_at?: string\n  requester_id?: string\n  purchase_requests?: any\n}\n\nexport interface CreateSupportInquiryPayload {\n  inquiry_type: 'bug' | 'modify' | 'delete' | 'other' | 'annual_leave' | 'attendance'\n  subject: string\n  message: string\n  purchase_request_id?: number\n  purchase_info?: string\n  purchase_order_number?: string\n}\n\nclass SupportService {\n  private supabase = createClient()\n\n  // 문의 생성\n  async createInquiry(payload: CreateSupportInquiryPayload): Promise<{ success: boolean; error?: string }> {\n    try {\n      const { data: { user }, error: authError } = await this.supabase.auth.getUser()\n      if (authError || !user) return { success: false, error: '로그인이 필요합니다.' }\n\n      const { data: employee } = await this.supabase\n        .from('employees')\n        .select('id, name, email')\n        .eq('email', user.email)\n        .maybeSingle()\n\n      const { error } = await this.supabase\n        .from('support_inquires')\n        .insert({\n          user_id: user.id,\n          user_email: employee?.email || user.email,\n          user_name: employee?.name || '',\n          requester_id: employee?.id,\n          inquiry_type: payload.inquiry_type,\n          subject: payload.subject,\n          message: payload.message,\n          purchase_info: payload.purchase_info,\n          purchase_order_number: payload.purchase_order_number,\n          status: 'open'\n        })\n\n      if (error) {\n        console.error('문의 등록 에러:', error)\n        console.error('에러 상세:', {\n          code: error.code,\n          message: error.message,\n          details: error.details,\n          hint: error.hint\n        })\n        return { success: false, error: error.message }\n      }\n      return { success: true }\n    } catch (e) {\n      return { success: false, error: e instanceof Error ? e.message : '문의 접수 실패' }\n    }\n  }\n\n  // 내 문의 목록 조회\n  async getMyInquiries(): Promise<{ success: boolean; data: SupportInquiry[]; error?: string }> {\n    try {\n      console.log('🔍 getMyInquiries 시작')\n      const { data: { user }, error: authError } = await this.supabase.auth.getUser()\n      if (authError || !user) {\n        console.log('❌ 인증 에러:', authError)\n        return { success: false, data: [], error: '로그인이 필요합니다.' }\n      }\n\n      console.log('👤 현재 사용자:', user.id, user.email)\n\n      const { data, error } = await this.supabase\n        .from('support_inquires')\n        .select('*')\n        .eq('user_id', user.id)\n        .order('created_at', { ascending: false })\n\n      console.log('📊 문의 쿼리 결과:', { data, error })\n\n      if (error) {\n        console.error('❌ 문의 조회 에러:', error)\n        throw error\n      }\n\n      console.log('✅ 내 문의 목록 조회 성공:', data?.length || 0, '건')\n      return { success: true, data: data || [] }\n    } catch (e) {\n      console.error('❌ getMyInquiries 예외:', e)\n      return { success: false, data: [], error: e instanceof Error ? e.message : '문의 조회 실패' }\n    }\n  }\n\n  // 모든 문의 목록 조회 (관리자용)\n  async getAllInquiries(): Promise<{ success: boolean; data: SupportInquiry[]; error?: string }> {\n    try {\n      console.log('🔍 getAllInquiries 시작 (관리자용)')\n      const { data, error } = await this.supabase\n        .from('support_inquires')\n        .select('*')\n        .order('created_at', { ascending: false })\n\n      console.log('📊 전체 문의 쿼리 결과:', { data, error })\n\n      if (error) {\n        console.error('❌ 전체 문의 조회 에러:', error)\n        throw error\n      }\n\n      console.log('✅ 전체 문의 목록 조회 성공:', data?.length || 0, '건')\n      return { success: true, data: data || [] }\n    } catch (e) {\n      console.error('❌ getAllInquiries 예외:', e)\n      return { success: false, data: [], error: e instanceof Error ? e.message : '문의 조회 실패' }\n    }\n  }\n\n  // 문의 상태 업데이트 (관리자용)\n  async updateInquiryStatus(\n    inquiryId: number, \n    status: 'open' | 'in_progress' | 'resolved' | 'closed',\n    resolution_note?: string\n  ): Promise<{ success: boolean; error?: string }> {\n    try {\n      const { data: { user }, error: authError } = await this.supabase.auth.getUser()\n      if (authError || !user) return { success: false, error: '로그인이 필요합니다.' }\n\n      const { data: employee } = await this.supabase\n        .from('employees')\n        .select('name')\n        .eq('email', user.email)\n        .single()\n\n      const updateData: any = {\n        status,\n        handled_by: employee?.name || user.email,\n        updated_at: new Date().toISOString()\n      }\n\n      // resolved나 closed 상태로 변경 시 처리 시간 기록\n      if (status === 'resolved' || status === 'closed') {\n        updateData.processed_at = new Date().toISOString()\n      }\n\n      // resolution_note가 있으면 추가\n      if (resolution_note) {\n        updateData.resolution_note = resolution_note\n      }\n\n      const { error } = await this.supabase\n        .from('support_inquires')\n        .update(updateData)\n        .eq('id', inquiryId)\n\n      if (error) throw error\n\n      return { success: true }\n    } catch (e) {\n      return { success: false, error: e instanceof Error ? e.message : '상태 업데이트 실패' }\n    }\n  }\n\n  // 내가 요청한 발주 목록 조회 (수정/삭제 요청용)\n  async getMyPurchaseRequests(startDate?: string, endDate?: string) {\n    try {\n      const { data: { user }, error: authError } = await this.supabase.auth.getUser()\n      if (authError || !user) return { success: false, data: [], error: '로그인이 필요합니다.' }\n\n      const { data: employee } = await this.supabase\n        .from('employees')\n        .select('name')\n        .eq('email', user.email)\n        .single()\n\n      if (!employee) {\n        return { success: false, data: [], error: '사용자 정보를 찾을 수 없습니다.' }\n      }\n\n      let query = this.supabase\n        .from('purchase_requests')\n        .select('id,purchase_order_number,vendor_name,request_date,requester_name,purchase_request_items(item_name,specification,quantity)')\n        .eq('requester_name', employee.name)\n        .order('request_date', { ascending: false })\n\n      // 날짜 필터 적용\n      if (startDate) {\n        query = query.gte('request_date', startDate)\n      }\n      if (endDate) {\n        query = query.lte('request_date', endDate)\n      }\n\n      const { data, error } = await query.limit(100)\n\n      if (error) throw error\n\n      return { success: true, data: data || [] }\n    } catch (e) {\n      return { success: false, data: [], error: e instanceof Error ? e.message : '발주요청 조회 실패' }\n    }\n  }\n\n  // 실시간 구독 설정\n  subscribeToInquiries(callback: (payload: any) => void) {\n    return this.supabase\n      .channel('support_inquires_changes')\n      .on(\n        'postgres_changes',\n        {\n          event: '*',\n          schema: 'public',\n          table: 'support_inquires'\n        },\n        callback\n      )\n      .subscribe()\n  }\n\n  // 발주요청 품목 수정\n  async updatePurchaseRequestItem(\n    itemId: string,\n    updates: {\n      item_name?: string\n      specification?: string\n      quantity?: number\n      unit_price_value?: number\n      amount_value?: number\n      remark?: string\n    }\n  ): Promise<{ success: boolean; error?: string }> {\n    try {\n      const updateData: any = {}\n      \n      if (updates.item_name !== undefined) updateData.item_name = updates.item_name\n      if (updates.specification !== undefined) updateData.specification = updates.specification\n      if (updates.quantity !== undefined) updateData.quantity = updates.quantity\n      if (updates.remark !== undefined) updateData.remark = updates.remark\n      if (updates.unit_price_value !== undefined) {\n        updateData.unit_price_value = updates.unit_price_value\n        updateData.unit_price_currency = 'KRW'\n      }\n      if (updates.amount_value !== undefined) {\n        updateData.amount_value = updates.amount_value\n        updateData.amount_currency = 'KRW'\n      }\n      \n      const { error } = await this.supabase\n        .from('purchase_request_items')\n        .update(updateData)\n        .eq('id', itemId)\n\n      if (error) throw error\n      return { success: true }\n    } catch (e) {\n      return { success: false, error: e instanceof Error ? e.message : '품목 수정 실패' }\n    }\n  }\n\n  // 발주요청 품목 삭제\n  async deletePurchaseRequestItem(itemId: string): Promise<{ success: boolean; error?: string }> {\n    try {\n      const { error } = await this.supabase\n        .from('purchase_request_items')\n        .delete()\n        .eq('id', itemId)\n\n      if (error) throw error\n      return { success: true }\n    } catch (e) {\n      return { success: false, error: e instanceof Error ? e.message : '품목 삭제 실패' }\n    }\n  }\n\n  // 발주요청 전체 삭제\n  async deletePurchaseRequest(requestId: string): Promise<{ success: boolean; error?: string }> {\n    try {\n      // 먼저 관련 품목들 삭제\n      const { error: itemsError } = await this.supabase\n        .from('purchase_request_items')\n        .delete()\n        .eq('purchase_request_id', requestId)\n\n      if (itemsError) throw itemsError\n\n      // 발주요청 삭제\n      const { error } = await this.supabase\n        .from('purchase_requests')\n        .delete()\n        .eq('id', requestId)\n\n      if (error) throw error\n      return { success: true }\n    } catch (e) {\n      return { success: false, error: e instanceof Error ? e.message : '발주요청 삭제 실패' }\n    }\n  }\n\n  // 발주요청 상세 조회\n  async getPurchaseRequestDetail(requestId: string): Promise<{ success: boolean; data?: any; error?: string }> {\n    try {\n      const { data, error } = await this.supabase\n        .from('purchase_requests')\n        .select('*,purchase_request_items(id,line_number,item_name,specification,quantity,unit_price_value,amount_value,remark,link)')\n        .eq('id', requestId)\n        .single()\n\n      if (error) throw error\n\n      return { success: true, data }\n    } catch (e) {\n      return { success: false, error: e instanceof Error ? e.message : '발주요청 조회 실패' }\n    }\n  }\n\n  // 문의 삭제\n  async deleteInquiry(inquiryId: number): Promise<{ success: boolean; error?: string }> {\n    try {\n      const { data: { user }, error: authError } = await this.supabase.auth.getUser()\n      if (authError || !user) return { success: false, error: '로그인이 필요합니다.' }\n\n      // 관리자 권한 확인\n      const { data: employee } = await this.supabase\n        .from('employees')\n        .select('purchase_role')\n        .eq('email', user.email)\n        .single()\n\n      const isAdmin = employee?.purchase_role?.includes('app_admin')\n\n      // 관리자가 아닌 경우에만 본인 문의 확인\n      if (!isAdmin) {\n        // 문의 정보 확인 (본인 것인지)\n        const { data: inquiry, error: fetchError } = await this.supabase\n          .from('support_inquires')\n          .select('user_id, status, resolution_note')\n          .eq('id', inquiryId)\n          .single()\n\n        if (fetchError || !inquiry) {\n          return { success: false, error: '문의를 찾을 수 없습니다.' }\n        }\n\n        // 본인 문의가 아니면 삭제 불가\n        if (inquiry.user_id !== user.id) {\n          return { success: false, error: '본인의 문의만 삭제할 수 있습니다.' }\n        }\n\n        // 일반 사용자는 답변이 있거나 처리중인 문의는 삭제 불가\n        if (inquiry.resolution_note) {\n          return { success: false, error: '답변이 완료된 문의는 삭제할 수 없습니다.' }\n        }\n\n        if (inquiry.status !== 'open') {\n          return { success: false, error: '처리가 진행된 문의는 삭제할 수 없습니다.' }\n        }\n      }\n      // 관리자는 모든 문의 삭제 가능 (제한 없음)\n\n      // 삭제 실행\n      const { error } = await this.supabase\n        .from('support_inquires')\n        .delete()\n        .eq('id', inquiryId)\n\n      if (error) throw error\n      return { success: true }\n    } catch (e) {\n      return { success: false, error: e instanceof Error ? e.message : '문의 삭제 실패' }\n    }\n  }\n}\n\nexport const supportService = new SupportService()","import { useState, useEffect } from 'react'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { Textarea } from '@/components/ui/textarea'\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select'\nimport { Badge } from '@/components/ui/badge'\nimport { MessageCircle, Send, Calendar, Search, CheckCircle, Clock, AlertCircle, ChevronRight, ChevronLeft, ChevronDown, ChevronUp, Eye, X, Edit2, Trash2, Save } from 'lucide-react'\nimport { supportService, type SupportInquiry } from '@/services/supportService'\nimport { createClient } from '@/lib/supabase/client'\nimport { toast } from 'sonner'\nimport { format } from 'date-fns'\nimport { ko } from 'date-fns/locale'\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog'\n\nexport default function SupportMain() {\n  const [inquiryType, setInquiryType] = useState('')\n  const [subject, setSubject] = useState('')\n  const [message, setMessage] = useState('')\n  const [loading, setLoading] = useState(false)\n  \n  // 발주요청 선택 관련\n  const [showPurchaseSelect, setShowPurchaseSelect] = useState(false)\n  const [startDate, setStartDate] = useState('')\n  const [endDate, setEndDate] = useState('')\n  const [purchaseRequests, setPurchaseRequests] = useState<any[]>([])\n  const [selectedPurchase, setSelectedPurchase] = useState<any>(null)\n  const [searchingPurchase, setSearchingPurchase] = useState(false)\n  const [currentPage, setCurrentPage] = useState(1)\n  const [expandedPurchase, setExpandedPurchase] = useState<string | null>(null)\n  const itemsPerPage = 5\n  \n  // 문의 목록 관련\n  const [inquiries, setInquiries] = useState<SupportInquiry[]>([])\n  const [isAdmin, setIsAdmin] = useState<boolean | null>(null)\n  const [currentUserEmail, setCurrentUserEmail] = useState('')\n  const [loadingInquiries, setLoadingInquiries] = useState(true)\n  const [expandedInquiry, setExpandedInquiry] = useState<number | null>(null)\n  \n  // 모달 관련\n  const [showDetailModal, setShowDetailModal] = useState(false)\n  const [selectedInquiryDetail, setSelectedInquiryDetail] = useState<any>(null)\n  const [loadingDetail, setLoadingDetail] = useState(false)\n  const [editingItemId, setEditingItemId] = useState<string | null>(null)\n  const [editingItem, setEditingItem] = useState<any>(null)\n\n  // 초기 데이터 로드\n  useEffect(() => {\n    const init = async () => {\n      await checkUserRole()\n    }\n    init()\n    \n    // 실시간 구독 설정\n    const subscription = supportService.subscribeToInquiries((payload) => {\n      // 권한 상태 확인 후 적절한 목록 로드\n      checkUserRole()\n    })\n    \n    return () => {\n      subscription.unsubscribe()\n    }\n  }, [])\n\n  // 사용자 권한 확인\n  const checkUserRole = async () => {\n    const supabase = createClient()\n    const { data: { user } } = await supabase.auth.getUser()\n    if (!user) return\n\n    setCurrentUserEmail(user.email || '')\n\n    const { data: employee } = await supabase\n      .from('employees')\n      .select('purchase_role')\n      .eq('email', user.email)\n      .single()\n\n    if (employee) {\n      const roles = Array.isArray(employee.purchase_role)\n        ? employee.purchase_role\n        : employee.purchase_role?.split(',').map((r: string) => r.trim()) || []\n      \n      const adminStatus = roles.includes('app_admin')\n      setIsAdmin(adminStatus)\n      console.log('👤 사용자 권한 확인:', { email: user.email, roles, isAdmin: adminStatus })\n      \n      // 권한 확인 후 바로 목록 로드\n      loadInquiriesWithRole(adminStatus)\n    }\n  }\n  \n  // 역할에 따라 문의 목록 로드 (내부 함수)\n  const loadInquiriesWithRole = async (adminStatus: boolean) => {\n    console.log('🔄 loadInquiriesWithRole - isAdmin:', adminStatus)\n    setLoadingInquiries(true)\n    \n    const result = adminStatus \n      ? await supportService.getAllInquiries()\n      : await supportService.getMyInquiries()\n    \n    console.log('📋 문의 목록 로드 결과:', result)\n    \n    if (result.success) {\n      console.log('✅ 문의 목록 설정:', result.data.length, '건')\n      setInquiries(result.data)\n    } else {\n      console.error('❌ 문의 목록 로드 실패:', result.error)\n    }\n    \n    setLoadingInquiries(false)\n  }\n\n  // 문의 목록 로드\n  const loadInquiries = async () => {\n    // 권한 확인이 완료되지 않았으면 대기\n    if (isAdmin === null) {\n      console.log('⏳ 권한 확인 대기 중...');\n      return;\n    }\n    \n    console.log('🔄 loadInquiries 시작 - isAdmin:', isAdmin)\n    setLoadingInquiries(true)\n    \n    // 관리자면 모든 문의, 아니면 내 문의만\n    const result = isAdmin \n      ? await supportService.getAllInquiries()\n      : await supportService.getMyInquiries()\n    \n    console.log('📋 문의 목록 로드 결과:', result)\n    \n    if (result.success) {\n      console.log('✅ 문의 목록 설정:', result.data.length, '건')\n      setInquiries(result.data)\n    } else {\n      console.error('❌ 문의 목록 로드 실패:', result.error)\n    }\n    \n    setLoadingInquiries(false)\n  }\n\n  // 문의 유형 변경 시\n  useEffect(() => {\n    if (inquiryType === 'modify' || inquiryType === 'delete') {\n      setShowPurchaseSelect(true)\n    } else {\n      setShowPurchaseSelect(false)\n      setSelectedPurchase(null)\n    }\n  }, [inquiryType])\n\n  // 발주요청 검색\n  const searchPurchaseRequests = async () => {\n    setSearchingPurchase(true)\n    setCurrentPage(1) // 검색 시 첫 페이지로 리셋\n    \n    const result = await supportService.getMyPurchaseRequests(startDate, endDate)\n    \n    if (result.success) {\n      setPurchaseRequests(result.data)\n    } else {\n      toast.error(result.error || '발주요청 조회 실패')\n    }\n    \n    setSearchingPurchase(false)\n  }\n\n  // 페이지네이션 계산\n  const totalPages = Math.ceil(purchaseRequests.length / itemsPerPage)\n  const startIndex = (currentPage - 1) * itemsPerPage\n  const endIndex = startIndex + itemsPerPage\n  const currentPurchaseRequests = purchaseRequests.slice(startIndex, endIndex)\n\n  // 문의 제출\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    \n    if (!inquiryType || !subject || !message) {\n      toast.error('모든 필드를 입력해주세요.')\n      return\n    }\n    \n    // 수정/삭제 요청인데 발주를 선택하지 않은 경우\n    if ((inquiryType === 'modify' || inquiryType === 'delete') && !selectedPurchase) {\n      toast.error('수정/삭제할 발주요청을 선택해주세요.')\n      return\n    }\n\n    setLoading(true)\n    \n    // 발주 정보를 텍스트로 구성\n    let finalMessage = message;\n    let purchaseInfo = '';\n    \n    if (selectedPurchase) {\n      const items = selectedPurchase.purchase_request_items || [];\n      const itemsText = items.map((item: any) => \n        `- ${item.item_name} (${item.specification}) ${item.quantity}개`\n      ).join('\\n');\n      \n      purchaseInfo = `발주번호: ${selectedPurchase.purchase_order_number}\n업체: ${selectedPurchase.vendor_name}\n요청자: ${selectedPurchase.requester_name}\n요청일: ${selectedPurchase.request_date}\n품목:\n${itemsText}`;\n\n      finalMessage = `${message}\n\n[관련 발주 정보]\n${purchaseInfo}`;\n    }\n\n    const result = await supportService.createInquiry({\n      inquiry_type: inquiryType as any,\n      subject,\n      message: finalMessage,\n      purchase_info: purchaseInfo,\n      purchase_order_number: selectedPurchase?.purchase_order_number\n    })\n\n    if (result.success) {\n      toast.success('문의가 접수되었습니다.')\n      // 폼 초기화\n      setInquiryType('')\n      setSubject('')\n      setMessage('')\n      setSelectedPurchase(null)\n      setPurchaseRequests([])\n      setStartDate('')\n      setEndDate('')\n      // 목록 새로고침\n      loadInquiries()\n    } else {\n      toast.error(result.error || '문의 접수에 실패했습니다.')\n    }\n    \n    setLoading(false)\n  }\n\n  // 문의 상태 업데이트 (관리자용)\n  const handleStatusUpdate = async (inquiryId: number, newStatus: 'in_progress' | 'resolved' | 'closed') => {\n    const result = await supportService.updateInquiryStatus(inquiryId, newStatus)\n    \n    if (result.success) {\n      toast.success('상태가 업데이트되었습니다.')\n      loadInquiries()\n    } else {\n      toast.error(result.error || '상태 업데이트 실패')\n    }\n  }\n\n  // 문의 삭제\n  const handleDeleteInquiry = async (inquiryId: number) => {\n    if (!confirm('정말로 이 문의를 삭제하시겠습니까?\\n삭제된 문의는 복구할 수 없습니다.')) return\n\n    const result = await supportService.deleteInquiry(inquiryId)\n    \n    if (result.success) {\n      toast.success('문의가 삭제되었습니다.')\n      loadInquiries()\n    } else {\n      toast.error(result.error || '문의 삭제 실패')\n    }\n  }\n\n  // 문의 상세 보기\n  const viewInquiryDetail = (inquiry: SupportInquiry) => {\n    setSelectedInquiryDetail(inquiry)\n    setShowDetailModal(true)\n  }\n\n  // 품목 수정 시작\n  const startEditItem = (item: any) => {\n    setEditingItemId(item.id)\n    setEditingItem({\n      item_name: item.item_name,\n      specification: item.specification,\n      quantity: item.quantity,\n      unit_price_value: item.unit_price_value,\n      remark: item.remark\n    })\n  }\n\n  // 품목 수정 취소\n  const cancelEditItem = () => {\n    setEditingItemId(null)\n    setEditingItem(null)\n  }\n\n  // 품목 수정 저장\n  const saveEditItem = async (itemId: string) => {\n    if (!editingItem) return\n\n    const totalPrice = (editingItem.quantity || 0) * (editingItem.unit_price_value || 0)\n    const result = await supportService.updatePurchaseRequestItem(itemId, {\n      item_name: editingItem.item_name,\n      specification: editingItem.specification,\n      quantity: editingItem.quantity,\n      unit_price_value: editingItem.unit_price_value,\n      amount_value: totalPrice,\n      remark: editingItem.remark\n    })\n\n    if (result.success) {\n      toast.success('품목이 수정되었습니다.')\n      // 목록 새로고침 - 상세 정보가 있다면 다시 로드\n      if (selectedInquiryDetail?.id) {\n        // fetchPurchaseDetail 함수가 정의되어 있지 않으므로 주석 처리\n        // TODO: 필요시 상세 정보 새로고침 로직 구현\n        console.log('품목 수정 완료, 상세 정보 새로고침 필요')\n      }\n      cancelEditItem()\n    } else {\n      toast.error(result.error || '품목 수정 실패')\n    }\n  }\n\n  // 품목 삭제\n  const deleteItem = async (itemId: string) => {\n    if (!confirm('이 품목을 삭제하시겠습니까?')) return\n\n    const result = await supportService.deletePurchaseRequestItem(itemId)\n\n    if (result.success) {\n      toast.success('품목이 삭제되었습니다.')\n      // 목록 새로고침 - 상세 정보가 있다면 다시 로드\n      if (selectedInquiryDetail?.id) {\n        // fetchPurchaseDetail 함수가 정의되어 있지 않으므로 주석 처리\n        // TODO: 필요시 상세 정보 새로고침 로직 구현\n        console.log('품목 수정 완료, 상세 정보 새로고침 필요')\n      }\n    } else {\n      toast.error(result.error || '품목 삭제 실패')\n    }\n  }\n\n  // 발주요청 전체 삭제\n  const deletePurchaseRequest = async () => {\n    if (!selectedInquiryDetail?.id) return\n    if (!confirm('이 발주요청 전체를 삭제하시겠습니까?\\n모든 품목이 함께 삭제됩니다.')) return\n\n    const result = await supportService.deletePurchaseRequest(selectedInquiryDetail.id)\n\n    if (result.success) {\n      toast.success('발주요청이 삭제되었습니다.')\n      setShowDetailModal(false)\n      setSelectedInquiryDetail(null)\n      // 문의 목록 새로고침\n      loadInquiries()\n    } else {\n      toast.error(result.error || '발주요청 삭제 실패')\n    }\n  }\n\n  // 상태 배지 스타일\n  const getStatusBadge = (status?: string) => {\n    switch (status) {\n      case 'open':\n        return <Badge className=\"bg-yellow-100 text-yellow-800\">대기</Badge>\n      case 'in_progress':\n        return <Badge className=\"bg-blue-100 text-blue-800\">처리중</Badge>\n      case 'resolved':\n        return <Badge className=\"bg-green-100 text-green-800\">완료</Badge>\n      case 'closed':\n        return <Badge className=\"bg-gray-100 text-gray-800\">종료</Badge>\n      default:\n        return <Badge>-</Badge>\n    }\n  }\n\n  // 문의 유형 라벨\n  const getInquiryTypeLabel = (type: string) => {\n    switch (type) {\n      case 'bug': return '오류 신고'\n      case 'modify': return '수정 요청'\n      case 'delete': return '삭제 요청'\n      case 'other': return '기타 문의'\n      default: return type\n    }\n  }\n\n  // 권한 확인 중일 때 로딩 표시\n  if (isAdmin === null) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n          <p className=\"text-gray-600\">권한 확인 중...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <div className=\"w-full\">\n        {/* 헤더 */}\n        <div className=\"mb-4\">\n          <h1 className=\"text-2xl font-bold text-gray-900\">문의하기</h1>\n          <p className=\"text-sm text-gray-600 mt-1\">\n            {isAdmin \n              ? '모든 문의를 관리하고 답변할 수 있습니다'\n              : '시스템 사용 중 궁금하신 점이나 개선사항을 알려주세요'}\n          </p>\n        </div>\n\n        <div className={`${isAdmin ? 'max-w-4xl' : 'grid grid-cols-1 xl:grid-cols-2 gap-4'}`}>\n          {/* 문의 작성 폼 - app_admin이 아닌 경우에만 표시 */}\n          {!isAdmin && (\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <MessageCircle className=\"w-5 h-5\" />\n                  문의 내용\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <form onSubmit={handleSubmit} className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    문의 유형 <span className=\"text-red-500\">*</span>\n                  </label>\n                  <Select value={inquiryType} onValueChange={setInquiryType}>\n                    <SelectTrigger>\n                      <SelectValue placeholder=\"문의 유형을 선택해주세요\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"bug\">오류 신고</SelectItem>\n                      <SelectItem value=\"modify\">수정 요청</SelectItem>\n                      <SelectItem value=\"delete\">삭제 요청</SelectItem>\n                      <SelectItem value=\"other\">기타 문의</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                {/* 수정/삭제 요청 시 발주요청 선택 */}\n                {showPurchaseSelect && (\n                  <div className=\"space-y-3 p-4 bg-blue-50 rounded-lg border border-blue-200\">\n                    <div className=\"text-sm font-medium text-blue-900\">\n                      수정/삭제할 발주요청 선택\n                    </div>\n                    \n                    <div className=\"grid grid-cols-2 gap-2\">\n                      <div>\n                        <label className=\"text-xs text-gray-600\">시작일</label>\n                        <Input\n                          type=\"date\"\n                          value={startDate}\n                          onChange={(e) => setStartDate(e.target.value)}\n                          className=\"h-9\"\n                        />\n                      </div>\n                      <div>\n                        <label className=\"text-xs text-gray-600\">종료일</label>\n                        <Input\n                          type=\"date\"\n                          value={endDate}\n                          onChange={(e) => setEndDate(e.target.value)}\n                          className=\"h-9\"\n                        />\n                      </div>\n                    </div>\n                    \n                    <Button\n                      type=\"button\"\n                      onClick={searchPurchaseRequests}\n                      disabled={searchingPurchase}\n                      className=\"w-full h-9\"\n                      variant=\"outline\"\n                    >\n                      {searchingPurchase ? (\n                        <>\n                          <div className=\"w-4 h-4 border-2 border-gray-600 border-t-transparent rounded-full animate-spin mr-2\" />\n                          검색 중...\n                        </>\n                      ) : (\n                        <>\n                          <Search className=\"w-4 h-4 mr-2\" />\n                          발주요청 검색\n                        </>\n                      )}\n                    </Button>\n                    \n                    {purchaseRequests.length > 0 && (\n                      <div className=\"space-y-3\">\n                        <div className=\"text-xs text-gray-600\">\n                          발주요청 선택 (총 {purchaseRequests.length}건)\n                        </div>\n                        \n                        {/* 발주요청 리스트 */}\n                        <div className=\"space-y-1\">\n                          {currentPurchaseRequests.map((pr) => (\n                            <div key={pr.id} className=\"border rounded overflow-hidden\">\n                              <div\n                                onClick={() => setSelectedPurchase(pr)}\n                                className={`px-3 py-2 cursor-pointer transition-all text-xs ${\n                                  selectedPurchase?.id === pr.id\n                                    ? 'border-blue-500 bg-blue-50'\n                                    : 'hover:bg-gray-50'\n                                }`}\n                              >\n                                <div className=\"flex items-center justify-between gap-2\">\n                                  <div className=\"flex items-center gap-3 flex-1 min-w-0\">\n                                    <span className=\"font-medium whitespace-nowrap\">\n                                      {pr.purchase_order_number || 'N/A'}\n                                    </span>\n                                    <span className=\"text-gray-600 truncate\">\n                                      {pr.vendor_name}\n                                    </span>\n                                    <span className=\"text-gray-500\">\n                                      {pr.purchase_request_items?.[0]?.item_name || '품목 없음'}\n                                      {pr.purchase_request_items?.length > 1 && (\n                                        <span className=\"font-medium text-blue-600\">\n                                          {` 외 ${pr.purchase_request_items.length - 1}건`}\n                                        </span>\n                                      )}\n                                    </span>\n                                    <span className=\"text-gray-400 whitespace-nowrap ml-auto\">\n                                      {pr.request_date && format(new Date(pr.request_date), 'MM/dd')}\n                                    </span>\n                                  </div>\n                                  <div className=\"flex items-center gap-1\">\n                                    {selectedPurchase?.id === pr.id && (\n                                      <CheckCircle className=\"w-4 h-4 text-blue-500 flex-shrink-0\" />\n                                    )}\n                                    {pr.purchase_request_items?.length > 1 && (\n                                      <button\n                                        type=\"button\"\n                                        onClick={(e) => {\n                                          e.stopPropagation()\n                                          setExpandedPurchase(expandedPurchase === pr.id ? null : pr.id)\n                                        }}\n                                        className=\"p-1 hover:bg-gray-200 rounded\"\n                                      >\n                                        {expandedPurchase === pr.id ? (\n                                          <ChevronUp className=\"w-4 h-4\" />\n                                        ) : (\n                                          <ChevronDown className=\"w-4 h-4\" />\n                                        )}\n                                      </button>\n                                    )}\n                                  </div>\n                                </div>\n                              </div>\n                              \n                              {/* 상세 품목 목록 */}\n                              {expandedPurchase === pr.id && pr.purchase_request_items?.length > 0 && (\n                                <div className=\"px-3 py-2 bg-gray-50 border-t text-xs\">\n                                  <div className=\"space-y-1\">\n                                    <div className=\"font-medium text-gray-700 mb-1\">품목 상세</div>\n                                    {pr.purchase_request_items.map((item: any, index: number) => (\n                                      <div key={index} className=\"flex items-center gap-2 text-gray-600 pl-2\">\n                                        <span className=\"text-gray-400\">{index + 1}.</span>\n                                        <span>{item.item_name}</span>\n                                        {item.specification && (\n                                          <span className=\"text-gray-500\">({item.specification})</span>\n                                        )}\n                                        <span className=\"text-gray-500\">- {item.quantity}개</span>\n                                      </div>\n                                    ))}\n                                  </div>\n                                </div>\n                              )}\n                            </div>\n                          ))}\n                        </div>\n                        \n                        {/* 페이지네이션 */}\n                        {totalPages > 1 && (\n                          <div className=\"flex justify-center items-center gap-1 pt-2\">\n                            <Button\n                              type=\"button\"\n                              variant=\"outline\"\n                              size=\"sm\"\n                              onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}\n                              disabled={currentPage === 1}\n                              className=\"h-8 w-8 p-0\"\n                            >\n                              <ChevronLeft className=\"w-4 h-4\" />\n                            </Button>\n                            \n                            {Array.from({ length: totalPages }, (_, i) => i + 1).map((page) => (\n                              <Button\n                                key={page}\n                                type=\"button\"\n                                variant={currentPage === page ? \"default\" : \"outline\"}\n                                size=\"sm\"\n                                onClick={() => setCurrentPage(page)}\n                                className=\"h-8 w-8 p-0\"\n                              >\n                                {page}\n                              </Button>\n                            ))}\n                            \n                            <Button\n                              type=\"button\"\n                              variant=\"outline\"\n                              size=\"sm\"\n                              onClick={() => setCurrentPage(Math.min(totalPages, currentPage + 1))}\n                              disabled={currentPage === totalPages}\n                              className=\"h-8 w-8 p-0\"\n                            >\n                              <ChevronRight className=\"w-4 h-4\" />\n                            </Button>\n                          </div>\n                        )}\n                      </div>\n                    )}\n                  </div>\n                )}\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    제목 <span className=\"text-red-500\">*</span>\n                  </label>\n                  <Input\n                    value={subject}\n                    onChange={(e) => setSubject(e.target.value)}\n                    placeholder=\"문의 제목을 입력해주세요\"\n                    maxLength={100}\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    내용 <span className=\"text-red-500\">*</span>\n                  </label>\n                  <Textarea\n                    value={message}\n                    onChange={(e) => setMessage(e.target.value)}\n                    placeholder=\"문의 내용을 자세히 입력해주세요\"\n                    rows={6}\n                    maxLength={1000}\n                  />\n                  <p className=\"text-xs text-gray-500 mt-1\">\n                    {message.length}/1000\n                  </p>\n                </div>\n\n                <Button \n                  type=\"submit\" \n                  className=\"w-full\"\n                  disabled={loading}\n                >\n                  {loading ? (\n                    <>\n                      <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin mr-2\" />\n                      전송 중...\n                    </>\n                  ) : (\n                    <>\n                      <Send className=\"w-4 h-4 mr-2\" />\n                      문의 보내기\n                    </>\n                  )}\n                </Button>\n              </form>\n            </CardContent>\n          </Card>\n          )}\n\n          {/* 문의 목록 */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center justify-between\">\n                <span className=\"flex items-center gap-2\">\n                  <AlertCircle className=\"w-5 h-5 text-orange-500\" />\n                  {isAdmin ? '전체 문의 목록' : '내 문의 내역'}\n                </span>\n                <Badge variant=\"outline\">\n                  {inquiries.length}건\n                </Badge>\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              {loadingInquiries ? (\n                <div className=\"flex items-center justify-center py-8\">\n                  <div className=\"w-6 h-6 border-2 border-gray-300 border-t-transparent rounded-full animate-spin\" />\n                </div>\n              ) : inquiries.length === 0 ? (\n                <div className=\"text-center py-8 text-gray-500\">\n                  <MessageCircle className=\"w-12 h-12 mx-auto mb-3 text-gray-300\" />\n                  <p className=\"text-sm\">문의 내역이 없습니다</p>\n                </div>\n              ) : (\n                <div className=\"space-y-1 max-h-[600px] overflow-y-auto\">\n                  {inquiries.map((inquiry) => (\n                    <div key={inquiry.id} className=\"border rounded overflow-hidden\">\n                      {/* 문의 요약 (한 줄) */}\n                      <div \n                        className=\"px-3 py-2 hover:bg-gray-50 transition-colors cursor-pointer\"\n                        onClick={() => {\n                          setExpandedInquiry(expandedInquiry === inquiry.id ? null : inquiry.id!)\n                        }}\n                      >\n                        <div className=\"flex items-center justify-between gap-2\">\n                          <div className=\"flex items-center gap-2 flex-1 min-w-0\">\n                            <Badge variant=\"outline\" className=\"text-xs whitespace-nowrap\">\n                              {getInquiryTypeLabel(inquiry.inquiry_type)}\n                            </Badge>\n                            {getStatusBadge(inquiry.status)}\n                            <span className=\"text-sm font-medium truncate\">\n                              {inquiry.subject}\n                            </span>\n                            {isAdmin && (\n                              <span className=\"text-xs text-gray-500\">\n                                {inquiry.user_name || inquiry.user_email}\n                              </span>\n                            )}\n                            {inquiry.purchase_order_number && (\n                              <span className=\"text-xs text-blue-600\">\n                                [{inquiry.purchase_order_number}]\n                              </span>\n                            )}\n                            <span className=\"text-xs text-gray-400 ml-auto whitespace-nowrap\">\n                              {inquiry.created_at && format(new Date(inquiry.created_at), 'MM/dd HH:mm')}\n                            </span>\n                          </div>\n                          <div className=\"flex items-center gap-1\">\n                            {isAdmin && inquiry.status === 'open' && (\n                              <Button\n                                size=\"sm\"\n                                variant=\"outline\"\n                                onClick={(e) => {\n                                  e.stopPropagation()\n                                  handleStatusUpdate(inquiry.id!, 'in_progress')\n                                }}\n                                className=\"h-6 text-xs px-2\"\n                              >\n                                처리중\n                              </Button>\n                            )}\n                            {isAdmin && (inquiry.status === 'open' || inquiry.status === 'in_progress') && (\n                              <Button\n                                size=\"sm\"\n                                onClick={(e) => {\n                                  e.stopPropagation()\n                                  handleStatusUpdate(inquiry.id!, 'resolved')\n                                }}\n                                className=\"h-6 text-xs px-2 bg-green-600 hover:bg-green-700\"\n                              >\n                                완료\n                              </Button>\n                            )}\n                            {/* 삭제 버튼 - 관리자는 모든 문의 삭제 가능, 일반 사용자는 본인의 open 상태만 */}\n                            {(isAdmin || (inquiry.status === 'open' && !inquiry.resolution_note && inquiry.user_email === currentUserEmail)) && (\n                              <Button\n                                size=\"sm\"\n                                variant=\"ghost\"\n                                onClick={(e) => {\n                                  e.stopPropagation()\n                                  handleDeleteInquiry(inquiry.id!)\n                                }}\n                                className=\"h-6 w-6 p-0 hover:bg-red-50\"\n                                title=\"문의 삭제\"\n                              >\n                                <Trash2 className=\"w-3 h-3 text-red-600\" />\n                              </Button>\n                            )}\n                            <button\n                              type=\"button\"\n                              className=\"p-1 hover:bg-gray-200 rounded\"\n                            >\n                              {expandedInquiry === inquiry.id ? (\n                                <ChevronUp className=\"w-4 h-4\" />\n                              ) : (\n                                <ChevronDown className=\"w-4 h-4\" />\n                              )}\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                      \n                      {/* 상세 내역 */}\n                      {expandedInquiry === inquiry.id && (\n                        <div className=\"px-3 py-3 bg-gray-50 border-t text-sm\">\n                          <div className=\"space-y-2\">\n                            <div>\n                              <span className=\"font-medium text-gray-700\">내용:</span>\n                              <p className=\"text-gray-600 mt-1 whitespace-pre-wrap\">{inquiry.message}</p>\n                            </div>\n                            {inquiry.purchase_order_number && (\n                              <div>\n                                <span className=\"font-medium text-gray-700\">관련 발주번호:</span>\n                                <span className=\"text-blue-600 ml-2\">{inquiry.purchase_order_number}</span>\n                              </div>\n                            )}\n                            {inquiry.handled_by && (\n                              <div>\n                                <span className=\"font-medium text-gray-700\">처리자:</span>\n                                <span className=\"text-green-600 ml-2\">\n                                  {inquiry.handled_by}\n                                  {inquiry.processed_at && ` (${format(new Date(inquiry.processed_at), 'yyyy-MM-dd HH:mm')})`}\n                                </span>\n                              </div>\n                            )}\n                            {inquiry.resolution_note && (\n                              <div>\n                                <span className=\"font-medium text-gray-700\">처리 내용:</span>\n                                <p className=\"text-gray-600 mt-1\">{inquiry.resolution_note}</p>\n                              </div>\n                            )}\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  ))}\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n\n      {/* 발주요청 상세 모달 */}\n      <Dialog open={showDetailModal} onOpenChange={setShowDetailModal}>\n        <DialogContent className=\"max-w-6xl max-h-[90vh] overflow-y-auto\">\n          <DialogHeader>\n            <DialogTitle className=\"flex items-center justify-between text-lg\">\n              <div className=\"flex items-center gap-2\">\n                <span>발주요청 상세</span>\n                {selectedInquiryDetail?.purchase_order_number && (\n                  <Badge variant=\"outline\" className=\"font-normal\">\n                    {selectedInquiryDetail.purchase_order_number}\n                  </Badge>\n                )}\n              </div>\n              {isAdmin && selectedInquiryDetail && (\n                <Button\n                  variant=\"destructive\"\n                  size=\"sm\"\n                  onClick={deletePurchaseRequest}\n                  className=\"h-8 px-3\"\n                >\n                  <Trash2 className=\"w-4 h-4 mr-1\" />\n                  전체 삭제\n                </Button>\n              )}\n            </DialogTitle>\n          </DialogHeader>\n          \n          {loadingDetail ? (\n            <div className=\"flex items-center justify-center py-8\">\n              <div className=\"w-6 h-6 border-2 border-gray-300 border-t-transparent rounded-full animate-spin\" />\n            </div>\n          ) : selectedInquiryDetail && (\n            <div className=\"space-y-6\">\n              {/* 기본 정보 */}\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 p-4 bg-gray-50 rounded-lg\">\n                <div>\n                  <span className=\"text-xs text-gray-500 uppercase tracking-wider\">발주번호</span>\n                  <p className=\"font-semibold text-sm mt-1\">{selectedInquiryDetail.purchase_order_number || 'N/A'}</p>\n                </div>\n                <div>\n                  <span className=\"text-xs text-gray-500 uppercase tracking-wider\">업체명</span>\n                  <p className=\"font-semibold text-sm mt-1\">{selectedInquiryDetail.vendor_name}</p>\n                </div>\n                <div>\n                  <span className=\"text-xs text-gray-500 uppercase tracking-wider\">요청자</span>\n                  <p className=\"font-semibold text-sm mt-1\">{selectedInquiryDetail.requester_name}</p>\n                </div>\n                <div>\n                  <span className=\"text-xs text-gray-500 uppercase tracking-wider\">요청일</span>\n                  <p className=\"font-semibold text-sm mt-1\">\n                    {selectedInquiryDetail.request_date && \n                      format(new Date(selectedInquiryDetail.request_date), 'yyyy-MM-dd')}\n                  </p>\n                </div>\n              </div>\n\n              {/* 품목 목록 - 개선된 디자인 */}\n              <div>\n                <h3 className=\"font-semibold text-base mb-3\">품목 상세</h3>\n                <div className=\"border rounded-lg overflow-x-auto\">\n                  <table className=\"w-full\">\n                    <thead className=\"bg-gray-50 border-b\">\n                      <tr>\n                        <th className=\"text-left text-xs font-medium text-gray-700 px-3 py-3 w-12\">번호</th>\n                        <th className=\"text-left text-xs font-medium text-gray-700 px-3 py-3 min-w-[180px]\">품명</th>\n                        <th className=\"text-left text-xs font-medium text-gray-700 px-3 py-3 min-w-[150px]\">규격</th>\n                        <th className=\"text-center text-xs font-medium text-gray-700 px-3 py-3 w-20\">수량</th>\n                        <th className=\"text-right text-xs font-medium text-gray-700 px-3 py-3 w-28\">단가</th>\n                        <th className=\"text-right text-xs font-medium text-gray-700 px-3 py-3 w-32\">금액</th>\n                        <th className=\"text-left text-xs font-medium text-gray-700 px-3 py-3 min-w-[150px]\">비고</th>\n                        <th className=\"text-center text-xs font-medium text-gray-700 px-3 py-3 w-16\">링크</th>\n                        {isAdmin && <th className=\"text-center text-xs font-medium text-gray-700 px-3 py-3 w-24\">작업</th>}\n                      </tr>\n                    </thead>\n                    <tbody className=\"divide-y divide-gray-200\">\n                      {selectedInquiryDetail.purchase_request_items?.map((item: any, index: number) => (\n                        <tr key={item.id} className=\"hover:bg-gray-50 transition-colors\">\n                          <td className=\"text-sm px-3 py-3 text-center font-medium text-gray-600\">\n                            {item.line_number || index + 1}\n                          </td>\n                          <td className=\"text-sm px-3 py-3\">\n                            {editingItemId === item.id ? (\n                              <Input\n                                value={editingItem?.item_name || ''}\n                                onChange={(e) => setEditingItem({...editingItem, item_name: e.target.value})}\n                                className=\"h-9 text-sm w-full\"\n                                autoFocus\n                              />\n                            ) : (\n                              <span className=\"font-medium text-gray-900\">{item.item_name}</span>\n                            )}\n                          </td>\n                          <td className=\"text-sm px-3 py-3\">\n                            {editingItemId === item.id ? (\n                              <Input\n                                value={editingItem?.specification || ''}\n                                onChange={(e) => setEditingItem({...editingItem, specification: e.target.value})}\n                                className=\"h-9 text-sm w-full\"\n                              />\n                            ) : (\n                              <span className=\"text-gray-600\">{item.specification || '-'}</span>\n                            )}\n                          </td>\n                          <td className=\"text-sm text-center px-3 py-3\">\n                            {editingItemId === item.id ? (\n                              <Input\n                                type=\"number\"\n                                value={editingItem?.quantity || ''}\n                                onChange={(e) => setEditingItem({...editingItem, quantity: parseInt(e.target.value)})}\n                                className=\"h-9 text-sm text-center w-full\"\n                              />\n                            ) : (\n                              <span className=\"font-medium\">{item.quantity}</span>\n                            )}\n                          </td>\n                          <td className=\"text-sm text-right px-3 py-3\">\n                            {editingItemId === item.id ? (\n                              <Input\n                                type=\"number\"\n                                value={editingItem?.unit_price_value || ''}\n                                onChange={(e) => setEditingItem({...editingItem, unit_price_value: parseInt(e.target.value)})}\n                                className=\"h-9 text-sm text-right w-full\"\n                              />\n                            ) : (\n                              <span className=\"font-medium\">\n                                {item.unit_price_value ? `${parseFloat(item.unit_price_value).toLocaleString()}` : '-'}\n                              </span>\n                            )}\n                          </td>\n                          <td className=\"text-sm text-right px-3 py-3\">\n                            {editingItemId === item.id ? (\n                              <span className=\"font-semibold text-blue-600\">\n                                {((editingItem?.quantity || 0) * (editingItem?.unit_price_value || 0)).toLocaleString()}\n                              </span>\n                            ) : (\n                              <span className=\"font-semibold text-blue-600\">\n                                {item.amount_value ? `${parseFloat(item.amount_value).toLocaleString()}` : '-'}\n                              </span>\n                            )}\n                          </td>\n                          <td className=\"text-sm px-3 py-3\">\n                            {editingItemId === item.id ? (\n                              <Textarea\n                                value={editingItem?.remark || ''}\n                                onChange={(e) => setEditingItem({...editingItem, remark: e.target.value})}\n                                className=\"h-9 text-sm w-full resize-none\"\n                                rows={1}\n                              />\n                            ) : (\n                              <span className=\"text-gray-600 text-xs\">{item.remark || '-'}</span>\n                            )}\n                          </td>\n                          <td className=\"text-sm text-center px-3 py-3\">\n                            {item.link ? (\n                              <a \n                                href={item.link} \n                                target=\"_blank\" \n                                rel=\"noopener noreferrer\" \n                                className=\"inline-flex items-center justify-center w-8 h-8 rounded hover:bg-blue-50 text-blue-600\"\n                              >\n                                <Eye className=\"w-4 h-4\" />\n                              </a>\n                            ) : (\n                              <span className=\"text-gray-400\">-</span>\n                            )}\n                          </td>\n                          {isAdmin && (\n                            <td className=\"text-sm text-center px-3 py-3\">\n                              {editingItemId === item.id ? (\n                                <div className=\"flex justify-center gap-1\">\n                                  <Button\n                                    size=\"sm\"\n                                    onClick={() => saveEditItem(item.id)}\n                                    className=\"h-8 px-2 bg-green-600 hover:bg-green-700\"\n                                  >\n                                    <Save className=\"w-4 h-4 mr-1\" />\n                                    저장\n                                  </Button>\n                                  <Button\n                                    size=\"sm\"\n                                    variant=\"outline\"\n                                    onClick={cancelEditItem}\n                                    className=\"h-8 px-2\"\n                                  >\n                                    취소\n                                  </Button>\n                                </div>\n                              ) : (\n                                <div className=\"flex justify-center gap-1\">\n                                  <Button\n                                    size=\"sm\"\n                                    variant=\"ghost\"\n                                    onClick={() => startEditItem(item)}\n                                    className=\"h-8 w-8 p-0 hover:bg-blue-50\"\n                                  >\n                                    <Edit2 className=\"w-4 h-4 text-blue-600\" />\n                                  </Button>\n                                  <Button\n                                    size=\"sm\"\n                                    variant=\"ghost\"\n                                    onClick={() => deleteItem(item.id)}\n                                    className=\"h-8 w-8 p-0 hover:bg-red-50\"\n                                  >\n                                    <Trash2 className=\"w-4 h-4 text-red-600\" />\n                                  </Button>\n                                </div>\n                              )}\n                            </td>\n                          )}\n                        </tr>\n                      ))}\n                    </tbody>\n                    <tfoot className=\"bg-gray-50 border-t-2\">\n                      <tr>\n                        <td colSpan={5} className=\"text-sm font-semibold text-right px-3 py-3\">\n                          합계\n                        </td>\n                        <td className=\"text-sm font-bold text-right px-3 py-3 text-blue-600\">\n                          {selectedInquiryDetail.purchase_request_items\n                            ?.reduce((sum: number, item: any) => sum + (parseFloat(item.amount_value) || 0), 0)\n                            .toLocaleString()}\n                        </td>\n                        <td colSpan={isAdmin ? 3 : 2} className=\"px-3 py-3\"></td>\n                      </tr>\n                    </tfoot>\n                  </table>\n                </div>\n              </div>\n\n              {/* 비고 */}\n              {selectedInquiryDetail.notes && (\n                <div>\n                  <h3 className=\"font-medium mb-2\">비고</h3>\n                  <p className=\"text-sm text-gray-600 p-3 bg-gray-50 rounded-lg\">\n                    {selectedInquiryDetail.notes}\n                  </p>\n                </div>\n              )}\n            </div>\n          )}\n        </DialogContent>\n      </Dialog>\n    </div>\n  )\n}"],"names":["__iconNode","Send","createLucideIcon","SupportService","createClient","payload","user","authError","employee","error","e","data","inquiryId","status","resolution_note","updateData","startDate","endDate","query","callback","itemId","updates","requestId","itemsError","inquiry","fetchError","supportService","SupportMain","inquiryType","setInquiryType","useState","subject","setSubject","message","setMessage","loading","setLoading","showPurchaseSelect","setShowPurchaseSelect","setStartDate","setEndDate","purchaseRequests","setPurchaseRequests","selectedPurchase","setSelectedPurchase","searchingPurchase","setSearchingPurchase","currentPage","setCurrentPage","expandedPurchase","setExpandedPurchase","itemsPerPage","inquiries","setInquiries","isAdmin","setIsAdmin","currentUserEmail","setCurrentUserEmail","loadingInquiries","setLoadingInquiries","expandedInquiry","setExpandedInquiry","showDetailModal","setShowDetailModal","selectedInquiryDetail","setSelectedInquiryDetail","loadingDetail","setLoadingDetail","editingItemId","setEditingItemId","editingItem","setEditingItem","useEffect","checkUserRole","subscription","supabase","roles","r","adminStatus","loadInquiriesWithRole","result","loadInquiries","searchPurchaseRequests","toast","totalPages","startIndex","endIndex","currentPurchaseRequests","handleSubmit","finalMessage","purchaseInfo","itemsText","item","handleStatusUpdate","newStatus","handleDeleteInquiry","startEditItem","cancelEditItem","saveEditItem","totalPrice","deleteItem","deletePurchaseRequest","getStatusBadge","jsx","Badge","getInquiryTypeLabel","type","jsxs","Card","CardHeader","CardTitle","MessageCircle","CardContent","Select","SelectTrigger","SelectValue","SelectContent","SelectItem","Input","Button","Fragment","Search","pr","format","CheckCircle","ChevronUp","ChevronDown","index","ChevronLeft","_","i","page","ChevronRight","Textarea","AlertCircle","Trash2","Dialog","DialogContent","DialogHeader","DialogTitle","Eye","Save","Edit2","sum"],"mappings":"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","x_google_ignoreList":[0]}