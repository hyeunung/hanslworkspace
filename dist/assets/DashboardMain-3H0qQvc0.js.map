{"version":3,"file":"DashboardMain-3H0qQvc0.js","sources":["../../node_modules/lucide-react/dist/esm/icons/arrow-right.js","../../node_modules/lucide-react/dist/esm/icons/circle-check.js","../../node_modules/lucide-react/dist/esm/icons/clock.js","../../node_modules/lucide-react/dist/esm/icons/thumbs-up.js","../../node_modules/lucide-react/dist/esm/icons/triangle-alert.js","../../src/services/dashboardService.ts","../../src/components/dashboard/PurchaseStatusModal.tsx","../../src/components/dashboard/DashboardMain.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M5 12h14\", key: \"1ays0h\" }],\n  [\"path\", { d: \"m12 5 7 7-7 7\", key: \"xquz4c\" }]\n];\nconst ArrowRight = createLucideIcon(\"arrow-right\", __iconNode);\n\nexport { __iconNode, ArrowRight as default };\n//# sourceMappingURL=arrow-right.js.map\n","/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"path\", { d: \"m9 12 2 2 4-4\", key: \"dzmm74\" }]\n];\nconst CircleCheck = createLucideIcon(\"circle-check\", __iconNode);\n\nexport { __iconNode, CircleCheck as default };\n//# sourceMappingURL=circle-check.js.map\n","/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M12 6v6l4 2\", key: \"mmk7yg\" }],\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }]\n];\nconst Clock = createLucideIcon(\"clock\", __iconNode);\n\nexport { __iconNode, Clock as default };\n//# sourceMappingURL=clock.js.map\n","/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M7 10v12\", key: \"1qc93n\" }],\n  [\n    \"path\",\n    {\n      d: \"M15 5.88 14 10h5.83a2 2 0 0 1 1.92 2.56l-2.33 8A2 2 0 0 1 17.5 22H4a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h2.76a2 2 0 0 0 1.79-1.11L12 2a3.13 3.13 0 0 1 3 3.88Z\",\n      key: \"emmmcr\"\n    }\n  ]\n];\nconst ThumbsUp = createLucideIcon(\"thumbs-up\", __iconNode);\n\nexport { __iconNode, ThumbsUp as default };\n//# sourceMappingURL=thumbs-up.js.map\n","/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3\",\n      key: \"wmoenq\"\n    }\n  ],\n  [\"path\", { d: \"M12 9v4\", key: \"juzpu7\" }],\n  [\"path\", { d: \"M12 17h.01\", key: \"p32p05\" }]\n];\nconst TriangleAlert = createLucideIcon(\"triangle-alert\", __iconNode);\n\nexport { __iconNode, TriangleAlert as default };\n//# sourceMappingURL=triangle-alert.js.map\n","import { createClient } from '@/lib/supabase/client'\nimport type { \n  DashboardData, \n  DashboardStats, \n  UrgentRequest, \n  MyRequestStatus, \n  QuickAction,\n  Employee,\n  PurchaseRequestWithDetails \n} from '@/types/purchase'\n\nexport class DashboardService {\n  private supabase = createClient()\n\n  // 역할 파싱 유틸: 배열/CSV 문자열/단일 문자열을 모두 배열로 정규화\n  // usePurchaseData.ts와 동일한 로직 사용\n  private parseRoles(purchaseRole: string | string[] | null | undefined): string[] {\n    let roles: string[] = []\n    \n    if (purchaseRole) {\n      if (Array.isArray(purchaseRole)) {\n        // 배열인 경우\n        roles = purchaseRole.map((r: any) => String(r).trim())\n      } else {\n        // 문자열인 경우 (일반적)\n        const roleString = String(purchaseRole)\n        // 쉼표로 분할하고 공백 제거\n        roles = roleString\n          .split(',')\n          .map((r: string) => r.trim())\n          .filter((r: string) => r.length > 0)\n      }\n    }\n    \n    return roles\n  }\n\n  // 메인 대시보드 데이터 로드\n  async getDashboardData(employee: Employee): Promise<DashboardData> {\n    const [\n      stats,\n      urgentRequests,\n      myRecentRequests,\n      pendingApprovals,\n      quickActions,\n      todaySummary,\n      myPurchaseStatus\n    ] = await Promise.all([\n      this.getDashboardStats(employee),\n      this.getUrgentRequests(employee),\n      this.getMyRecentRequests(employee),\n      this.getPendingApprovals(employee),\n      this.getQuickActions(employee),\n      this.getTodaySummary(employee),\n      this.getMyPurchaseStatus(employee)\n    ])\n\n    return {\n      employee,\n      stats,\n      urgentRequests,\n      myRecentRequests,\n      pendingApprovals,\n      quickActions,\n      todaySummary,\n      myPurchaseStatus\n    }\n  }\n\n  // 통계 정보 (우선순위 재정렬)\n  async getDashboardStats(employee: Employee): Promise<DashboardStats> {\n    const today = new Date().toISOString().split('T')[0]\n    const roles = this.parseRoles(employee.purchase_role)\n\n\n    // 병렬 쿼리로 성능 최적화\n    const [\n      totalResult,\n      myRequestsResult,\n      pendingResult,\n      completedResult,\n      urgentResult,\n      todayActionsResult\n    ] = await Promise.all([\n      // 전체 요청 수\n      this.supabase\n        .from('purchase_requests')\n        .select('id', { count: 'exact', head: true }),\n\n      // 내 요청 수\n      this.supabase\n        .from('purchase_requests')\n        .select('id', { count: 'exact', head: true })\n        .eq('requester_name', employee.name),\n\n      // 내가 처리해야 할 승인 대기\n      this.getPendingCount(employee, roles),\n\n      // 이번 달 완료된 요청 수  \n      this.supabase\n        .from('purchase_requests')\n        .select('id', { count: 'exact', head: true })\n        .eq('is_received', true)\n        .gte('received_at', new Date(new Date().getFullYear(), new Date().getMonth(), 1).toISOString()),\n\n      // 긴급 요청 수 (3일 이상 대기)\n      this.getUrgentCount(employee, roles),\n\n      // 오늘 처리한 액션 수\n      this.getTodayActionsCount(employee, today)\n    ])\n\n    const stats = {\n      total: totalResult.count || 0,\n      myRequests: myRequestsResult.count || 0,\n      pending: pendingResult,\n      completed: completedResult.count || 0,\n      urgent: urgentResult,\n      todayActions: todayActionsResult\n    }\n\n    return stats\n  }\n\n  // 긴급 요청 목록 (우선순위 최상위)\n  async getUrgentRequests(employee: Employee): Promise<UrgentRequest[]> {\n    const threeDaysAgo = new Date(Date.now() - 3 * 24 * 60 * 60 * 1000).toISOString()\n    const roles = this.parseRoles(employee.purchase_role)\n\n    // 역할이 없으면 긴급 요청도 없음\n    if (roles.length === 0) {\n      return []\n    }\n\n    let query = this.supabase\n      .from('purchase_requests')\n      .select('*,vendors(vendor_name),purchase_request_items(id)')\n      .lt('created_at', threeDaysAgo)\n\n    // 역할별 긴급 요청 필터링\n    if (roles.includes('app_admin')) {\n      query = query.or('middle_manager_status.eq.pending,final_manager_status.eq.pending,purchase_status.eq.pending')\n    } else if (roles.includes('middle_manager')) {\n      query = query.eq('middle_manager_status', 'pending')\n    } else if (roles.includes('final_approver') || roles.includes('ceo')) {\n      query = query\n        .eq('middle_manager_status', 'approved')\n        .eq('final_manager_status', 'pending')\n    } else if (roles.includes('lead buyer')) {\n      query = query\n        .eq('final_manager_status', 'approved')\n        .eq('purchase_status', 'pending')\n    } else {\n      // 다른 역할은 긴급 요청 없음\n      return []\n    }\n\n    const { data } = await query\n      .order('created_at', { ascending: true })\n      .limit(5)\n\n    return (data || []).map(item => ({\n      ...item,\n      vendor_name: item.vendors?.vendor_name,\n      total_items: item.purchase_request_items?.length || 0,\n      daysOverdue: Math.floor((Date.now() - new Date(item.created_at).getTime()) / (1000 * 60 * 60 * 24)),\n      priority: this.calculatePriority(item),\n      urgentReason: this.getUrgentReason(item, roles)\n    })) as UrgentRequest[]\n  }\n\n  // 내 최근 요청 상태 (승인 진행중인 항목만 - 승인 대기는 제외)\n  async getMyRecentRequests(employee: Employee): Promise<MyRequestStatus[]> {\n    const { data } = await this.supabase\n      .from('purchase_requests')\n      .select('*,vendors(vendor_name),purchase_request_items(id)')\n      .eq('requester_name', employee.name)\n      // 승인이 진행중인 항목만 (1차 승인됨 + 최종 대기중 OR 모든 승인 완료 + 구매 대기중)\n      .or('and(middle_manager_status.eq.approved,final_manager_status.eq.pending),and(final_manager_status.eq.approved,purchase_status.eq.pending)')\n      .order('created_at', { ascending: false })\n      .limit(5)\n\n    return (data || []).map(item => ({\n      ...item,\n      vendor_name: item.vendors?.vendor_name,\n      total_items: item.purchase_request_items?.length || 0,\n      progress_percentage: this.calculateProgress(item),\n      current_step: this.getCurrentStep(item),\n      next_action: this.getNextAction(item),\n      estimated_completion: this.estimateCompletion(item)\n    })) as MyRequestStatus[]\n  }\n\n  // 승인 대기 항목 (전체 조회) - 발주 리스트와 동일한 방식\n  async getPendingApprovals(employee: Employee): Promise<PurchaseRequestWithDetails[]> {\n    const roles = this.parseRoles(employee.purchase_role)\n\n    // 먼저 모든 발주요청을 가져옴 (발주 리스트와 동일)\n    // 스키마에 맞춰 item 단가/금액 컬럼 수정 (unit_price_value, amount_value)\n    let allRequests: any[] | null = null\n    let baseError: any = null\n\n\n    const firstTry = await this.supabase\n      .from('purchase_requests')\n      .select('*')\n      .order('request_date', { ascending: false })\n      .limit(100) // 최적화: 100개로 제한\n\n\n    if (firstTry.error) {\n      // 관계 조회 실패 시 최소 컬럼으로 재시도하여 리스트 자체는 표시되도록 함\n      baseError = firstTry.error\n      const fallback = await this.supabase\n        .from('purchase_requests')\n        .select('*')\n        .order('request_date', { ascending: false })\n        .limit(100) // 최적화: 100개로 제한\n      if (fallback.error) {\n        // Fallback query also failed - will return empty array\n        return []\n      }\n      allRequests = fallback.data || []\n    } else {\n      allRequests = firstTry.data || []\n    }\n\n    // 클라이언트 사이드에서 역할별 필터링\n    let filteredData = allRequests || []\n\n    // 발주 리스트와 동일한 필터링 로직 사용 - 승인 대기인 항목만\n    // pending, 대기, 빈문자열, null 모두 대기로 처리\n    const isPending = (status: any) => (\n      status === 'pending' || status === '대기' || status === '' || status === null || status === undefined\n    )\n\n    // 발주 리스트의 pending 탭과 동일한 조건: 중간승인자나 최종승인자 중 하나라도 pending이면 승인대기\n    filteredData = filteredData.filter(item => {\n      const middlePending = isPending(item.middle_manager_status)\n      const finalPending = isPending(item.final_manager_status)\n      \n      // 반려된 경우는 제외\n      const middleRejected = item.middle_manager_status === 'rejected'\n      const finalRejected = item.final_manager_status === 'rejected'\n      \n      if (middleRejected || finalRejected) return false\n      \n      // 중간승인 대기 또는 최종승인 대기\n      return middlePending || finalPending\n    })\n    \n\n    // 역할이 있는 사용자만 승인 대기 항목을 볼 수 있음\n    if (roles.length === 0) {\n      return []\n    }\n\n    // 품목 정보를 별도로 조회하여 추가\n    const enhancedData = await Promise.all(\n      filteredData.map(async (item) => {\n        // 각 발주요청에 대해 품목 정보 조회\n        const { data: items } = await this.supabase\n          .from('purchase_request_items')\n          .select('*')\n          .eq('purchase_request_id', item.id)\n\n        // 업체 정보 조회\n        let vendor_name = item.vendor_name\n        if (!vendor_name && item.vendor_id) {\n          const { data: vendor } = await this.supabase\n            .from('vendors')\n            .select('vendor_name')\n            .eq('id', item.vendor_id)\n            .single()\n          vendor_name = vendor?.vendor_name\n        }\n\n        const purchase_request_items = items || []\n        const total_amount = purchase_request_items.reduce((sum: number, i: any) => {\n          const amount = Number(i?.amount_value) || (Number(i?.quantity) || 0) * (Number(i?.unit_price_value) || 0)\n          return sum + amount\n        }, 0)\n\n        return {\n          ...item,\n          vendor_name,\n          purchase_request_items,\n          total_amount\n        }\n      })\n    )\n\n    return enhancedData\n  }\n\n  // 빠른 액션 버튼 데이터\n  async getQuickActions(employee: Employee): Promise<QuickAction[]> {\n    const roles = this.parseRoles(employee.purchase_role)\n\n    const actions: QuickAction[] = []\n\n    // 승인 권한이 있는 경우\n    if (roles.includes('app_admin') || roles.includes('middle_manager') || roles.includes('final_approver') || roles.includes('ceo')) {\n      const pendingCount = await this.getPendingCount(employee, roles)\n      if (pendingCount > 0) {\n        actions.push({\n          id: 'approve',\n          type: 'approve',\n          label: '승인 대기',\n          description: `${pendingCount}건의 승인 대기 중`,\n          count: pendingCount,\n          color: 'red'\n        })\n      }\n    }\n\n    // 구매 권한이 있는 경우\n    if (roles.includes('lead buyer') || roles.includes('lead buyer')) {\n      const { count: purchaseCount } = await this.supabase\n        .from('purchase_requests')\n        .select('id', { count: 'exact', head: true })\n        .eq('final_manager_status', 'approved')\n        .eq('purchase_status', 'pending')\n\n      if (purchaseCount && purchaseCount > 0) {\n        actions.push({\n          id: 'purchase',\n          type: 'purchase',\n          label: '구매 처리',\n          description: `${purchaseCount}건의 구매 대기 중`,\n          count: purchaseCount,\n          color: 'yellow'\n        })\n      }\n    }\n\n    return actions\n  }\n\n  // 오늘 요약 정보\n  async getTodaySummary(employee: Employee) {\n    const today = new Date().toISOString().split('T')[0]\n    const tomorrow = new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString().split('T')[0]\n\n    const [approvedResult, requestedResult, receivedResult] = await Promise.all([\n      // 오늘 내가 승인한 건수\n      this.supabase\n        .from('purchase_requests')\n        .select('id', { count: 'exact', head: true })\n        .gte('updated_at', today)\n        .lt('updated_at', tomorrow)\n        .or('middle_manager_status.eq.approved,final_manager_status.eq.approved'),\n\n      // 오늘 내가 요청한 건수\n      this.supabase\n        .from('purchase_requests')\n        .select('id', { count: 'exact', head: true })\n        .eq('requester_name', employee.name)\n        .gte('created_at', today)\n        .lt('created_at', tomorrow),\n\n      // 오늘 입고 처리한 건수\n      this.supabase\n        .from('purchase_requests')\n        .select('id', { count: 'exact', head: true })\n        .eq('is_received', true)\n        .gte('received_at', today)\n        .lt('received_at', tomorrow)\n    ])\n\n    return {\n      approved: approvedResult.count || 0,\n      requested: requestedResult.count || 0,\n      received: receivedResult.count || 0\n    }\n  }\n\n  // 내 구매/입고 상태 확인\n  async getMyPurchaseStatus(employee: Employee): Promise<{ waitingPurchase: PurchaseRequestWithDetails[], waitingDelivery: PurchaseRequestWithDetails[], recentCompleted: PurchaseRequestWithDetails[] }> {\n    \n    // name이 없으면 email 사용\n    const requesterName = employee.name || employee.email\n    \n    const sevenDaysAgo = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString()\n\n    // 먼저 모든 내 요청을 가져온 다음 클라이언트에서 필터링\n    const myRequests = await this.supabase\n      .from('purchase_requests')\n      .select('*,vendors(vendor_name),purchase_request_items(item_name,quantity,specification,amount_value)')\n      .eq('requester_name', requesterName)\n      .order('created_at', { ascending: false })\n      .limit(100)\n\n    if (myRequests.error) {\n      console.error('getMyPurchaseStatus 에러:', myRequests.error)\n      return {\n        waitingPurchase: [],\n        waitingDelivery: [],\n        recentCompleted: []\n      }\n    }\n\n    const allMyRequests = myRequests.data || []\n    \n\n    // 클라이언트 사이드 필터링 (PurchaseListMain 구매/입고 탭과 동일한 로직)\n    \n    const waitingPurchase = allMyRequests.filter(item => {\n      // 구매 대기: 구매/발주 요청 카테고리 + 결제 미완료 + 선진행(승인무관) OR 일반&최종승인\n      // payment_category를 trim()하여 공백 처리 및 대소문자 무시\n      const categoryNormalized = (item.payment_category || '').trim().replace(/\\s+/g, '')\n      const isPurchaseRequest = ['구매요청', '발주요청'].includes(categoryNormalized)\n      const notPaid = !item.is_payment_completed\n      const isSeonJin = (item.progress_type || '').includes('선진행')\n      \n      \n      // 선진행은 승인 상태와 무관하게 구매 대기\n      if (isPurchaseRequest && notPaid && isSeonJin) {\n        return true\n      }\n      \n      // 일반은 최종 승인 완료되어야 구매 대기\n      const isIlban = (item.progress_type || '').includes('일반') || !item.progress_type || item.progress_type === ''\n      const finalApproved = item.final_manager_status === 'approved'\n      \n      return isPurchaseRequest && notPaid && isIlban && finalApproved\n    }).slice(0, 10)\n\n\n    const waitingDelivery = allMyRequests.filter(item => {\n      // 입고 탭 로직: 입고 미완료 + 선진행(승인무관) OR 최종승인\n      const notReceived = !item.is_received\n      const isSeonJin = (item.progress_type || '').includes('선진행')\n      \n      // 선진행은 승인 상태와 무관하게 입고 대기\n      if (notReceived && isSeonJin) {\n        return true\n      }\n      \n      // 일반은 최종 승인 완료되어야 입고 대기\n      const finalApproved = item.final_manager_status === 'approved'\n      \n      return notReceived && finalApproved\n    }).slice(0, 10)\n\n\n    const recentCompleted = allMyRequests.filter(item => {\n      // 입고 완료 && 7일 이내\n      if (item.is_received !== true) return false\n      if (!item.received_at) return false\n      const receivedDate = new Date(item.received_at)\n      const sevenDaysAgoDate = new Date(sevenDaysAgo)\n      return receivedDate >= sevenDaysAgoDate\n    }).slice(0, 10)\n\n\n    return {\n      waitingPurchase: waitingPurchase,\n      waitingDelivery: waitingDelivery,\n      recentCompleted: recentCompleted\n    }\n  }\n\n  // 원클릭 승인 API\n  async quickApprove(requestId: string, employee: Employee): Promise<{success: boolean, error?: string}> {\n    \n    try {\n      const roles = this.parseRoles(employee.purchase_role)\n\n      // 먼저 현재 요청의 상태를 확인\n      const { data: request } = await this.supabase\n        .from('purchase_requests')\n        .select('middle_manager_status, final_manager_status')\n        .eq('id', requestId)\n        .single()\n\n      if (!request) {\n        return { success: false, error: '요청을 찾을 수 없습니다.' }\n      }\n      \n\n      let updateData: any = {}\n\n      // pending, 대기, null, 빈 문자열 모두 대기 상태로 간주\n      const isPending = (status: any) => (\n        status === 'pending' || status === '대기' || status === '' || status === null || status === undefined\n      )\n\n      // app_admin은 현재 필요한 승인 단계를 처리\n      if (roles.includes('app_admin')) {\n        if (isPending(request.middle_manager_status)) {\n          updateData = {\n            middle_manager_status: 'approved'\n          }\n        } else if (request.middle_manager_status === 'approved' && isPending(request.final_manager_status)) {\n          updateData = {\n            final_manager_status: 'approved'\n          }\n        }\n      } else if (roles.includes('middle_manager')) {\n        if (isPending(request.middle_manager_status)) {\n          updateData = {\n            middle_manager_status: 'approved'\n          }\n        }\n      } else if (roles.includes('final_approver') || roles.includes('ceo')) {\n        if (request.middle_manager_status === 'approved' && isPending(request.final_manager_status)) {\n          updateData = {\n            final_manager_status: 'approved'\n          }\n        }\n      } else if (roles.includes('raw_material_manager') || roles.includes('consumable_manager')) {\n        // raw_material_manager와 consumable_manager도 최종 승인 권한이 있음\n        if (request.middle_manager_status === 'approved' && isPending(request.final_manager_status)) {\n          updateData = {\n            final_manager_status: 'approved'\n          }\n        }\n      }\n\n      // updateData가 비어있으면 승인할 단계가 없음\n      if (Object.keys(updateData).length === 0) {\n        return { success: false, error: '승인할 수 있는 상태가 아닙니다.' }\n      }\n      \n\n      const { data: updatedData, error } = await this.supabase\n        .from('purchase_requests')\n        .update(updateData)\n        .eq('id', requestId)\n        .select()\n        .single()\n\n      if (error) {\n        // Error details are handled by the caller\n        throw error\n      }\n\n      return { success: true }\n    } catch (error) {\n      return { success: false, error: (error as Error).message }\n    }\n  }\n\n  // Helper methods\n  private async getPendingCount(employee: Employee, roles: string[]): Promise<number> {\n    // 공통: '대기', null, 빈 문자열도 대기 상태로 간주\n    const pendingClause = (col: string) => (\n      `${col}.in.(pending,대기),${col}.is.null`\n    )\n\n    // 역할별 카운트 쿼리 구성\n    if (roles.includes('app_admin')) {\n      // 1) 중간 승인 대기 + 2) 최종 승인 대기(중간 승인 완료) + 3) 구매 대기(최종 승인 완료)\n      const [mid, fin, pur] = await Promise.all([\n        this.supabase\n          .from('purchase_requests')\n          .select('id', { count: 'exact', head: true })\n          .or(`middle_manager_status.in.(pending,대기),middle_manager_status.is.null`),\n        this.supabase\n          .from('purchase_requests')\n          .select('id', { count: 'exact', head: true })\n          .eq('middle_manager_status', 'approved')\n          .or(`final_manager_status.in.(pending,대기),final_manager_status.is.null`),\n        this.supabase\n          .from('purchase_requests')\n          .select('id', { count: 'exact', head: true })\n          .eq('final_manager_status', 'approved')\n          .or(`purchase_status.in.(pending,대기),purchase_status.is.null`)\n      ])\n\n      const total = (mid.count || 0) + (fin.count || 0) + (pur.count || 0)\n      return total\n    }\n\n    if (roles.includes('middle_manager')) {\n      const { count, error } = await this.supabase\n        .from('purchase_requests')\n        .select('id', { count: 'exact', head: true })\n        .or(`middle_manager_status.in.(pending,대기),middle_manager_status.is.null`)\n\n      if (error) {\n        // Count error for middle_manager - will use 0\n        return 0\n      }\n      return count || 0\n    }\n\n    if (roles.includes('final_approver') || roles.includes('ceo')) {\n      const { count, error } = await this.supabase\n        .from('purchase_requests')\n        .select('id', { count: 'exact', head: true })\n        .eq('middle_manager_status', 'approved')\n        .or(`final_manager_status.in.(pending,대기),final_manager_status.is.null`)\n\n      if (error) {\n        // Count error for final_approver/ceo - will use 0\n        return 0\n      }\n      return count || 0\n    }\n\n    if (roles.includes('lead buyer')) {\n      const { count, error } = await this.supabase\n        .from('purchase_requests')\n        .select('id', { count: 'exact', head: true })\n        .eq('final_manager_status', 'approved')\n        .or(`purchase_status.in.(pending,대기),purchase_status.is.null`)\n\n      if (error) {\n        // Count error for lead buyer - will use 0\n        return 0\n      }\n      return count || 0\n    }\n\n    return 0\n  }\n\n  private async getUrgentCount(employee: Employee, roles: string[]): Promise<number> {\n    // 역할이 없으면 긴급 요청 카운트도 0\n    if (roles.length === 0) {\n      return 0\n    }\n\n    const threeDaysAgo = new Date(Date.now() - 3 * 24 * 60 * 60 * 1000).toISOString()\n    \n    let query = this.supabase\n      .from('purchase_requests')\n      .select('id', { count: 'exact', head: true })\n      .lt('created_at', threeDaysAgo)\n\n    if (roles.includes('app_admin')) {\n      query = query.or('middle_manager_status.eq.pending,final_manager_status.eq.pending,purchase_status.eq.pending')\n    } else if (roles.includes('middle_manager')) {\n      query = query.eq('middle_manager_status', 'pending')\n    } else if (roles.includes('final_approver') || roles.includes('ceo')) {\n      query = query\n        .eq('middle_manager_status', 'approved')\n        .eq('final_manager_status', 'pending')\n    } else if (roles.includes('lead buyer')) {\n      query = query\n        .eq('final_manager_status', 'approved')\n        .eq('purchase_status', 'pending')\n    } else {\n      return 0\n    }\n\n    const { count } = await query\n    return count || 0\n  }\n\n  private async getTodayActionsCount(employee: Employee, today: string): Promise<number> {\n    const tomorrow = new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString().split('T')[0]\n    \n    const { count } = await this.supabase\n      .from('purchase_requests')\n      .select('id', { count: 'exact', head: true })\n      .gte('updated_at', today)\n      .lt('updated_at', tomorrow)\n      .or(`middle_manager_id.eq.${employee.id},final_manager_id.eq.${employee.id}`)\n\n    return count || 0\n  }\n\n  // 전체 입고대기 건수 조회 (권한에 관계없이 전체 조회)\n  async getTotalDeliveryWaitingCount(): Promise<number> {\n    const { count } = await this.supabase\n      .from('purchase_requests')\n      .select('id', { count: 'exact', head: true })\n      .eq('is_received', false)\n      .or('is_payment_completed.eq.true,progress_type.ilike.%선진행%')\n\n    return count || 0\n  }\n\n  private calculatePriority(request: any): 'high' | 'medium' | 'low' {\n    const daysPending = Math.floor((Date.now() - new Date(request.created_at).getTime()) / (1000 * 60 * 60 * 24))\n    \n    if (daysPending >= 7) return 'high'\n    if (daysPending >= 5) return 'medium'\n    return 'low'\n  }\n\n  private getUrgentReason(request: any, roles: string[]): 'overdue_approval' | 'delivery_delay' | 'payment_pending' {\n    if (roles.includes('middle_manager') && request.middle_manager_status === 'pending') {\n      return 'overdue_approval'\n    }\n    if ((roles.includes('final_approver') || roles.includes('ceo')) && request.final_manager_status === 'pending') {\n      return 'overdue_approval'\n    }\n    if (!request.is_received) {\n      return 'delivery_delay'\n    }\n    return 'payment_pending'\n  }\n\n  private calculateProgress(request: any): number {\n    let progress = 0\n    \n    if (request.middle_manager_status === 'approved') progress += 25\n    if (request.final_manager_status === 'approved') progress += 25\n    if (request.is_payment_completed) progress += 25\n    if (request.is_received) progress += 25\n    \n    return progress\n  }\n\n  private getCurrentStep(request: any): 'approval' | 'purchase' | 'delivery' | 'payment' | 'completed' {\n    if (request.is_received) return 'completed'\n    if (request.is_payment_completed) return 'delivery'\n    if (request.final_manager_status === 'approved') return 'purchase'\n    return 'approval'\n  }\n\n  private getNextAction(request: any): string {\n    if (request.middle_manager_status === 'pending') return '중간 승인 대기 중'\n    if (request.final_manager_status === 'pending') return '최종 승인 대기 중'\n    if (!request.is_payment_completed) return '구매 처리 대기 중'\n    if (!request.is_received) return '입고 대기 중'\n    return '완료'\n  }\n\n  private estimateCompletion(request: any): string {\n    const created = new Date(request.created_at)\n    const today = new Date()\n    const daysPassed = Math.floor((today.getTime() - created.getTime()) / (1000 * 60 * 60 * 24))\n    \n    // 평균 처리 시간을 기반으로 예상 완료일 계산\n    let estimatedDays = 7 // 기본 7일\n    if (request.progress_type === '긴급') estimatedDays = 3\n    \n    const estimatedCompletion = new Date(created.getTime() + estimatedDays * 24 * 60 * 60 * 1000)\n    return estimatedCompletion.toLocaleDateString('ko-KR')\n  }\n\n  // lead buyer를 위한 미다운로드 발주서 목록 조회\n  async getUndownloadedOrders(employee: Employee): Promise<PurchaseRequestWithDetails[]> {\n    const roles = this.parseRoles(employee.purchase_role)\n    \n    // lead buyer 또는 \"lead buyer\" (공백 포함) 권한 체크\n    if (!roles.includes('lead buyer') && !roles.includes('lead buyer')) {\n      return []\n    }\n\n    // 먼저 모든 발주서를 가져온 다음 클라이언트에서 필터링\n    const { data, error } = await this.supabase\n      .from('purchase_requests')\n      .select('*,purchase_request_items(id,item_name,specification,quantity,unit_price_value,amount_value)')\n      .order('created_at', { ascending: false })\n      .limit(100)\n\n    if (error) {\n      console.error('Failed to fetch undownloaded orders:', error)\n      return []\n    }\n\n    // 클라이언트 사이드 필터링\n    // 조건: (선진행이거나 최종승인 완료) AND (is_po_download가 false 또는 null)\n    const filteredData = (data || []).filter(item => {\n      // 다운로드 가능 조건 체크\n      const isDownloadable = item.progress_type === '선진행' || \n        (item.middle_manager_status === 'approved' && item.final_manager_status === 'approved')\n      \n      // 아직 다운로드 안 된 것만\n      const notDownloaded = !item.is_po_download || item.is_po_download === false || item.is_po_download === null\n      \n      return isDownloadable && notDownloaded\n    })\n\n    // 오래된 순으로 정렬 (created_at 기준 오름차순)\n    filteredData.sort((a, b) => new Date(a.created_at).getTime() - new Date(b.created_at).getTime())\n\n    return filteredData.slice(0, 10) // 상위 10개만 반환\n  }\n}\n\nexport const dashboardService = new DashboardService()","import React, { useState, useEffect } from 'react'\nimport { \n  Dialog, \n  DialogContent\n} from '@/components/ui/dialog'\nimport { Button } from '@/components/ui/button'\nimport { \n  ShoppingCart, \n  Truck, \n  Package, \n  CheckCircle,\n  Clock,\n  ArrowRight,\n  X,\n  CheckCircle2\n} from 'lucide-react'\nimport { useNavigate } from 'react-router-dom'\nimport { createClient } from '@/lib/supabase/client'\nimport { toast } from 'sonner'\n\ninterface PurchaseStatusModalProps {\n  isOpen: boolean\n  onClose: () => void\n  item: any\n  type: 'pending' | 'purchase' | 'delivery' | 'completed'\n  onRefresh?: () => void\n}\n\nexport default function PurchaseStatusModal({ \n  isOpen, \n  onClose, \n  item, \n  type,\n  onRefresh\n}: PurchaseStatusModalProps) {\n  const navigate = useNavigate()\n  const supabase = createClient()\n  const [currentUserRoles, setCurrentUserRoles] = useState<string[]>([])\n  const [processing, setProcessing] = useState(false)\n  const [localItem, setLocalItem] = useState(item)\n\n  // localItem을 item prop 변경 시 업데이트\n  useEffect(() => {\n    setLocalItem(item)\n  }, [item])\n\n  // Get current user roles\n  useEffect(() => {\n    const fetchUserRoles = async () => {\n      const { data: { user } } = await supabase.auth.getUser()\n      console.log('Fetching roles for user:', user?.email)\n      \n      if (user?.email) {\n        const { data: employee } = await supabase\n          .from('employees')\n          .select('purchase_role')\n          .eq('email', user.email)\n          .single()\n        \n        console.log('Employee data:', employee)\n        \n        if (employee?.purchase_role) {\n          // purchase_role이 이미 배열이면 그대로 사용, 문자열이면 split\n          const roles = Array.isArray(employee.purchase_role) \n            ? employee.purchase_role \n            : employee.purchase_role.split(',').map((r: string) => r.trim())\n          console.log('Parsed roles:', roles)\n          setCurrentUserRoles(roles)\n        } else {\n          console.log('No purchase_role found for employee')\n        }\n      }\n    }\n    fetchUserRoles()\n  }, [type])\n\n  if (!localItem) return null\n\n  const items = localItem.purchase_request_items || []\n  const totalAmount = items.reduce((sum: number, i: any) => {\n    return sum + (Number(i.amount_value) || 0)\n  }, 0)\n  const totalQuantity = items.reduce((sum: number, i: any) => {\n    return sum + (Number(i.quantity) || 0)\n  }, 0)\n  \n  // 디버깅\n  console.log('🔍 PurchaseStatusModal Debug:', {\n    type,\n    currentUserRoles,\n    item: localItem.purchase_order_number,\n    showPurchaseButton: type === 'purchase',\n    showDeliveryButton: type === 'delivery',\n    hasAdminPermission: currentUserRoles.includes('app_admin'),\n    hasLeadBuyerPermission: currentUserRoles.includes('lead buyer'),\n    hasReceiverPermission: currentUserRoles.includes('receiver'),\n    itemData: {\n      is_payment_completed: localItem.is_payment_completed,\n      is_received: localItem.is_received\n    }\n  })\n\n  const getTypeInfo = () => {\n    switch (type) {\n      case 'pending':\n        return {\n          icon: <Clock className=\"w-6 h-6 text-orange-600\" />,\n          title: '승인 대기',\n          status: '승인 처리 대기중',\n          color: 'bg-orange-50 text-orange-700 border-orange-200'\n        }\n      case 'purchase':\n        return {\n          icon: <ShoppingCart className=\"w-6 h-6 text-yellow-600\" />,\n          title: '구매 대기',\n          status: '구매 처리 대기중',\n          color: 'bg-yellow-50 text-yellow-700 border-yellow-200'\n        }\n      case 'delivery':\n        return {\n          icon: <Truck className=\"w-6 h-6 text-blue-600\" />,\n          title: '입고 대기',\n          status: '입고 처리 대기중',\n          color: 'bg-blue-50 text-blue-700 border-blue-200'\n        }\n      case 'completed':\n        return {\n          icon: <CheckCircle className=\"w-6 h-6 text-green-600\" />,\n          title: '처리 완료',\n          status: '모든 처리 완료',\n          color: 'bg-green-50 text-green-700 border-green-200'\n        }\n      default:\n        return {\n          icon: <Package className=\"w-6 h-6 text-gray-600\" />,\n          title: '상태 확인',\n          status: '상태 확인 필요',\n          color: 'bg-gray-50 text-gray-700 border-gray-200'\n        }\n    }\n  }\n\n  const typeInfo = getTypeInfo()\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent \n        className=\"overflow-hidden bg-white rounded-3xl shadow-2xl border-0\"\n        style={{ maxWidth: '1280px', width: '90vw', maxHeight: '50vh' }}\n        showCloseButton={false}\n      >\n        {/* Apple-style Header */}\n        <div className=\"relative px-6 pt-6 pb-4\">\n          <button\n            onClick={onClose}\n            className=\"absolute right-6 top-6 w-8 h-8 rounded-full bg-gray-100 hover:bg-gray-200 flex items-center justify-center transition-all duration-200\"\n          >\n            <X className=\"w-4 h-4 text-gray-500\" />\n          </button>\n          \n          <div className=\"pr-16\">\n            <div className=\"flex items-start gap-4 mb-2\">\n              <div className=\"w-10 h-10 rounded-2xl bg-blue-50 flex items-center justify-center flex-shrink-0\">\n                {typeInfo.icon}\n              </div>\n              <div className=\"min-w-0 flex-1\">\n                <h1 className=\"modal-title mb-1\">\n                  {localItem.purchase_order_number || 'PO번호 없음'}\n                </h1>\n                <p className=\"modal-subtitle\">{localItem.vendor_name || '업체명 없음'}</p>\n              </div>\n              <div className={`px-3 py-1.5 rounded-full badge-text ${typeInfo.color}`}>\n                {typeInfo.title}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Apple-style Content */}\n        <div className=\"overflow-y-auto max-h-[calc(50vh-160px)] px-6 pb-4 space-y-3\">\n          \n          {/* Dense Basic Information Grid */}\n          <div className=\"bg-gray-50 rounded-xl p-3 border border-gray-100\">\n            <div className=\"grid grid-cols-3 gap-x-4 gap-y-2 text-xs\">\n              <div><span className=\"text-gray-500\">요청자:</span> <span className=\"font-medium\">{localItem.requester_name}</span></div>\n              <div><span className=\"text-gray-500\">요청일:</span> <span className=\"font-medium\">{new Date(localItem.request_date || localItem.created_at).toLocaleDateString('ko-KR')}</span></div>\n              <div><span className=\"text-gray-500\">납기요청일:</span> <span className=\"font-medium\">{localItem.delivery_request_date ? new Date(localItem.delivery_request_date).toLocaleDateString('ko-KR') : '미지정'}</span></div>\n              \n              <div><span className=\"text-gray-500\">업체명:</span> <span className=\"font-medium\">{localItem.vendor_name || '-'}</span></div>\n              <div><span className=\"text-gray-500\">결제유형:</span> <span className=\"font-medium\">{localItem.payment_category || '일반'}</span></div>\n              <div><span className=\"text-gray-500\">진행구분:</span> <span className=\"font-medium\">{localItem.progress_type || '일반'}</span></div>\n              \n              <div><span className=\"text-gray-500\">프로젝트업체:</span> <span className=\"font-medium\">{localItem.project_vendor || '-'}</span></div>\n              <div><span className=\"text-gray-500\">판매주문번호:</span> <span className=\"font-medium\">{localItem.sales_order_number || '-'}</span></div>\n              <div><span className=\"text-gray-500\">배송지:</span> <span className=\"font-medium\">{localItem.shipping_address || '본사'}</span></div>\n              \n              <div><span className=\"text-gray-500\">통화:</span> <span className=\"font-medium\">{localItem.currency || 'KRW'}</span></div>\n              <div><span className=\"text-gray-500\">템플릿:</span> <span className=\"font-medium\">{localItem.po_template_type || '일반'}</span></div>\n              {localItem.revised_delivery_request_date && (\n                <div><span className=\"text-orange-500\">변경입고일:</span> <span className=\"font-medium text-orange-900\">{new Date(localItem.revised_delivery_request_date).toLocaleDateString('ko-KR')}</span></div>\n              )}\n            </div>\n          </div>\n\n\n          {/* Compact Items Table */}\n          <div className=\"bg-white rounded-xl border border-gray-100 overflow-hidden\">\n            <div className=\"bg-gray-50 px-3 py-2 border-b border-gray-100\">\n              <h3 className=\"text-sm font-medium text-gray-700\">주문 품목 ({items.length}개, 총 ₩{totalAmount.toLocaleString()})</h3>\n            </div>\n            <div className=\"overflow-x-auto\">\n              <table className=\"w-full text-xs table-fixed\">\n                <colgroup>\n                  <col className=\"w-[25%]\" />\n                  <col className=\"w-[20%]\" />\n                  <col className=\"w-[10%]\" />\n                  <col className=\"w-[15%]\" />\n                  <col className=\"w-[15%]\" />\n                  {(type === 'delivery' || type === 'purchase') && <col className=\"w-[15%]\" />}\n                </colgroup>\n                <thead className=\"bg-gray-50 border-b border-gray-100\">\n                  <tr>\n                    <th className=\"text-left p-2 font-medium text-gray-600\">품목명</th>\n                    <th className=\"text-left p-2 font-medium text-gray-600\">규격</th>\n                    <th className=\"text-right p-2 font-medium text-gray-600\">수량</th>\n                    <th className=\"text-right p-2 font-medium text-gray-600\">단가</th>\n                    <th className=\"text-right p-2 font-medium text-gray-600\">금액</th>\n                    {type === 'delivery' && <th className=\"text-center p-2 font-medium text-gray-600\">입고상태</th>}\n                    {type === 'purchase' && <th className=\"text-center p-2 font-medium text-gray-600\">구매상태</th>}\n                  </tr>\n                </thead>\n                <tbody className=\"divide-y divide-gray-100\">\n                  {items.map((pItem: any, index: number) => {\n                    const unitPrice = pItem.quantity > 0 ? (Number(pItem.amount_value) || 0) / pItem.quantity : 0\n                    return (\n                      <tr key={index} className=\"hover:bg-gray-50\">\n                        <td className=\"p-2\">\n                          <div className=\"font-medium text-gray-900\">{pItem.item_name || '품목명 없음'}</div>\n                          {pItem.remark && (\n                            <div className=\"text-xs text-amber-600 mt-1\">비고: {pItem.remark}</div>\n                          )}\n                        </td>\n                        <td className=\"p-2 text-gray-600\">{pItem.specification || '-'}</td>\n                        <td className=\"p-2 text-right font-medium\">{pItem.quantity || 0}</td>\n                        <td className=\"p-2 text-right\">₩{unitPrice.toLocaleString()}</td>\n                        <td className=\"p-2 text-right font-medium\">₩{(Number(pItem.amount_value) || 0).toLocaleString()}</td>\n                        {type === 'delivery' && (\n                          <td className=\"p-2 text-center\">\n                            {pItem.is_received ? (\n                              <span className=\"inline-flex items-center gap-1 bg-green-50 text-green-700 px-2 py-1 rounded text-xs border border-green-200\">\n                                <CheckCircle2 className=\"w-3 h-3\" />\n                                완료\n                              </span>\n                            ) : (\n                              <span className=\"inline-flex items-center gap-1 bg-gray-50 text-gray-600 px-2 py-1 rounded text-xs border border-gray-200\">\n                                <Clock className=\"w-3 h-3\" />\n                                대기\n                              </span>\n                            )}\n                          </td>\n                        )}\n                        {type === 'purchase' && (\n                          <td className=\"p-2 text-center\">\n                            {pItem.is_payment_completed ? (\n                              <span className=\"inline-flex items-center gap-1 bg-green-50 text-green-700 px-2 py-1 rounded text-xs border border-green-200\">\n                                <CheckCircle2 className=\"w-3 h-3\" />\n                                완료\n                              </span>\n                            ) : (\n                              (currentUserRoles.includes('app_admin') || \n                               currentUserRoles.includes('lead buyer') ||\n                               currentUserRoles.includes('receiver')) && (\n                                <Button\n                                  size=\"sm\"\n                                  onClick={async () => {\n                                    if (!confirm('이 품목을 구매완료 처리하시겠습니까?')) return\n                                    \n                                    try {\n                                      const { error } = await supabase\n                                        .from('purchase_request_items')\n                                        .update({ \n                                          is_payment_completed: true,\n                                          payment_completed_at: new Date().toISOString()\n                                        })\n                                        .eq('id', pItem.id)\n\n                                      if (error) throw error\n                                      \n                                      // 로컬 상태 업데이트\n                                      setLocalItem((prev: any) => ({\n                                        ...prev,\n                                        purchase_request_items: prev.purchase_request_items?.map((item: any) =>\n                                          item.id === pItem.id \n                                            ? { ...item, is_payment_completed: true, payment_completed_at: new Date().toISOString() }\n                                            : item\n                                        )\n                                      }))\n                                      \n                                      toast.success('품목 구매완료 처리되었습니다.')\n                                      onRefresh?.()\n                                    } catch (error) {\n                                      toast.error('처리 중 오류가 발생했습니다.')\n                                    }\n                                  }}\n                                  className=\"bg-yellow-600 hover:bg-yellow-700 text-white px-2 py-1 text-xs font-medium\"\n                                >\n                                  구매완료\n                                </Button>\n                              )\n                            )}\n                          </td>\n                        )}\n                      </tr>\n                    )\n                  })}\n                </tbody>\n              </table>\n            </div>\n          </div>\n\n          {/* Compact Delivery Progress */}\n          {type === 'delivery' && items.length > 1 && (\n            <div className=\"bg-blue-50 rounded-xl p-3 border border-blue-100\">\n              {(() => {\n                const receivedCount = items.filter((i: any) => i.is_received).length\n                const totalCount = items.length\n                const percentage = (receivedCount / totalCount) * 100\n                \n                return (\n                  <div className=\"flex items-center gap-4\">\n                    <div className=\"text-sm font-medium text-blue-700\">입고 진행률</div>\n                    <div className=\"flex-1 bg-blue-200 rounded-full h-2\">\n                      <div \n                        className=\"bg-blue-600 h-2 rounded-full transition-all duration-500\"\n                        style={{ width: `${percentage}%` }}\n                      />\n                    </div>\n                    <div className=\"text-sm font-medium text-blue-700\">{receivedCount}/{totalCount} ({percentage.toFixed(0)}%)</div>\n                  </div>\n                )\n              })()}\n            </div>\n          )}\n\n        </div>\n        \n        {/* Apple-style Action Bar */}\n        <div className=\"sticky bottom-0 bg-white border-t border-gray-100 px-6 py-6\">\n          <div className=\"flex items-center justify-between gap-6\">\n            {/* Purchase Complete Button - for purchase type with permissions */}\n            {type === 'purchase' && \n             (currentUserRoles.includes('app_admin') || \n              currentUserRoles.includes('lead buyer') ||\n              currentUserRoles.includes('receiver')) && (\n              <Button\n                onClick={async () => {\n                  setProcessing(true)\n                  try {\n                    const { error } = await supabase\n                      .from('purchase_requests')\n                      .update({ \n                        is_payment_completed: true,\n                        payment_completed_at: new Date().toISOString()\n                      })\n                      .eq('id', localItem.id)\n\n                    if (error) throw error\n                    \n                    setLocalItem((prev: any) => ({\n                      ...prev,\n                      is_payment_completed: true,\n                      payment_completed_at: new Date().toISOString()\n                    }))\n                    \n                    toast.success('구매완료 처리되었습니다.')\n                    onRefresh?.()\n                  } catch (error) {\n                    toast.error('처리 중 오류가 발생했습니다.')\n                  } finally {\n                    setProcessing(false)\n                  }\n                }}\n                disabled={processing}\n                className=\"bg-gradient-to-r from-green-500 to-green-600 hover:from-green-600 hover:to-green-700 text-white px-8 py-4 rounded-2xl shadow-lg transition-all duration-200 modal-subtitle\"\n              >\n                {processing ? (\n                  <div className=\"w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin mr-3\" />\n                ) : (\n                  <CheckCircle2 className=\"w-5 h-5 mr-3\" />\n                )}\n                구매 완료 처리\n              </Button>\n            )}\n\n            <div className=\"flex items-center gap-4 ml-auto\">\n              <Button\n                variant=\"outline\"\n                onClick={() => {\n                  navigate(`/purchase?highlight=${localItem.id}`)\n                  onClose()\n                }}\n                className=\"border-gray-300 text-gray-700 hover:bg-gray-50 hover:text-gray-900 hover:border-gray-400 px-8 py-4 rounded-2xl modal-subtitle transition-all duration-200\"\n              >\n                발주 목록에서 보기\n                <ArrowRight className=\"w-5 h-5 ml-3\" />\n              </Button>\n              <Button \n                onClick={onClose} \n                className=\"bg-gray-900 hover:bg-gray-800 text-white px-10 py-4 rounded-2xl modal-subtitle transition-all duration-200 shadow-lg\"\n              >\n                완료\n              </Button>\n            </div>\n          </div>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}","\nimport { useState, useEffect, useCallback } from 'react'\nimport { createClient } from '@/lib/supabase/client'\nimport { dashboardService } from '@/services/dashboardService'\nimport { Button } from '@/components/ui/button'\nimport { Badge } from '@/components/ui/badge'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Dialog, DialogContent } from '@/components/ui/dialog'\nimport { Input } from '@/components/ui/input'\nimport { AlertTriangle, Clock, CheckCircle, ArrowRight, Eye, ThumbsUp, X, Package, Truck, ShoppingCart, Download, Search } from 'lucide-react'\nimport ExcelJS from 'exceljs'\n\n// Import modals\nimport PurchaseDetailModal from '@/components/purchase/PurchaseDetailModal'\nimport PurchaseStatusModal from '@/components/dashboard/PurchaseStatusModal'\nimport { toast } from 'sonner'\nimport type { DashboardData } from '@/types/purchase'\nimport { useNavigate } from 'react-router-dom'\n\nexport default function DashboardMain() {\n  const [data, setData] = useState<DashboardData | null>(null)\n  const [loading, setLoading] = useState(true)\n  const [actionLoading, setActionLoading] = useState<string | null>(null)\n  const [selectedApprovalId, setSelectedApprovalId] = useState<number | null>(null)\n  const [isModalOpen, setIsModalOpen] = useState(false)\n  const [currentUserRoles, setCurrentUserRoles] = useState<string[]>([])\n  const [undownloadedOrders, setUndownloadedOrders] = useState<any[]>([])\n  const [downloadingIds, setDownloadingIds] = useState<Set<string>>(new Set())\n  const [selectedOrder, setSelectedOrder] = useState<any>(null)\n  const [isOrderModalOpen, setIsOrderModalOpen] = useState(false)\n  \n  // 구매/입고 상세 모달 상태\n  const [selectedStatusItem, setSelectedStatusItem] = useState<any>(null)\n  const [statusModalType, setStatusModalType] = useState<'purchase' | 'delivery' | 'completed' | null>(null)\n  const [isStatusModalOpen, setIsStatusModalOpen] = useState(false)\n  \n  // 검색 상태\n  const [searchTerms, setSearchTerms] = useState({\n    undownloaded: '',\n    pending: '',\n    purchase: '',\n    delivery: ''\n  })\n  \n  const navigate = useNavigate()\n  const supabase = createClient()\n\n  const loadDashboardData = useCallback(async (showLoading = true) => {\n    try {\n      if (showLoading) {\n        setLoading(true)\n      } else {\n        // 로딩 표시 없이 새로고침할 때는 기존 data를 유지\n        // data가 null이 되는 것을 방지\n      }\n      \n      const supabase = createClient()\n      \n      const { data: { user }, error: authError } = await supabase.auth.getUser()\n      \n      if (authError) {\n        console.error('Auth error:', authError)\n        toast.error('인증 정보를 불러올 수 없습니다.')\n        return\n      }\n      \n      if (!user) {\n        console.error('No user found in auth')\n        toast.error('로그인이 필요합니다.')\n        return\n      }\n\n      const { data: employee, error: employeeError } = await supabase\n        .from('employees')\n        .select('*')\n        .eq('email', user.email)\n        .single()\n\n      if (employeeError || !employee) {\n        console.error('Employee fetch error:', employeeError)\n        // employee가 없어도 기본값으로 대시보드 표시\n        const defaultEmployee = {\n          id: user.id,\n          name: user.email?.split('@')[0] || 'Guest User',  // 이메일에서 이름 추출\n          email: user.email || '',\n          purchase_role: null\n        }\n        \n        try {\n          const dashboardData = await dashboardService.getDashboardData(defaultEmployee as any)\n          setData(dashboardData)\n        } catch (err) {\n          console.error('❌ 대시보드 데이터 로딩 에러:', err)\n        }\n        \n        setLoading(false)\n        return\n      }\n\n      console.log('🔍 조회된 Employee 데이터:', {\n        id: employee.id,\n        name: employee.name,\n        email: employee.email,\n        employee_number: employee.employee_number,\n        employeeID: employee.employeeID,\n        purchase_role: employee.purchase_role\n      })\n\n      console.log('========== 대시보드 데이터 로딩 시작 ==========')\n      console.log('1️⃣ 현재 사용자:', employee.name, '/ Email:', employee.email)\n      console.log('2️⃣ Purchase Role:', employee.purchase_role)\n      \n      try {\n        const dashboardData = await dashboardService.getDashboardData(employee)\n        \n        // 전체 입고대기 건수 조회 추가\n        const _totalDeliveryWaiting = await dashboardService.getTotalDeliveryWaitingCount()\n        \n        \n        setData(dashboardData)\n      } catch (err) {\n        console.error('❌ 대시보드 데이터 로딩 에러:', err)\n        toast.error('대시보드 데이터를 불러오는데 실패했습니다.')\n      }\n      \n      // 사용자 role 설정\n      if (employee.purchase_role) {\n        const roles = Array.isArray(employee.purchase_role)\n          ? employee.purchase_role.map((r: any) => String(r).trim())\n          : String(employee.purchase_role)\n              .split(',')\n              .map((r: string) => r.trim())\n              .filter((r: string) => r.length > 0)\n        setCurrentUserRoles(roles)\n        \n        // lead buyer 또는 \"lead buyer\" (공백 포함)인 경우 미다운로드 항목 조회\n        if (roles.includes('lead buyer') || roles.includes('lead buyer')) {\n          const undownloaded = await dashboardService.getUndownloadedOrders(employee)\n          setUndownloadedOrders(undownloaded)\n        }\n      }\n    } catch (error) {\n    } finally {\n      if (showLoading) {\n        setLoading(false)\n      }\n    }\n  }, [])\n\n  useEffect(() => {\n    loadDashboardData()\n  }, [loadDashboardData])\n\n  const handleQuickApprove = async (requestId: string) => {\n    console.log('handleQuickApprove 호출:', {\n      requestId: requestId,\n      hasData: !!data,\n      hasEmployee: !!data?.employee,\n      employee: data?.employee\n    })\n    \n    if (!data?.employee) {\n      console.error('handleQuickApprove 에러: data.employee가 없음', {\n        data: data\n      })\n      toast.error('사용자 정보를 찾을 수 없습니다.')\n      return\n    }\n\n    // 승인 확인 메시지\n    if (!confirm('정말로 승인하시겠습니까?')) {\n      return\n    }\n\n    setActionLoading(requestId)\n    \n    // Optimistic Update: 즉시 UI에서 제거\n    const originalData = data\n    setData(prev => {\n      if (!prev) return prev\n      return {\n        ...prev,\n        pendingApprovals: prev.pendingApprovals.filter(item => item.id !== requestId),\n        stats: {\n          ...prev.stats,\n          pending: Math.max(0, prev.stats.pending - 1)\n        }\n      }\n    })\n\n    try {\n      const result = await dashboardService.quickApprove(requestId, data.employee)\n      \n      if (result.success) {\n        toast.success('승인이 완료되었습니다.')\n        // 성공 시 백그라운드에서 데이터 동기화 (UI 깜빡임 없이)\n        setTimeout(() => {\n          loadDashboardData(false)  // false를 전달하여 로딩 화면 표시 안 함\n        }, 1000)\n      } else {\n        // 실패 시 원래 데이터로 롤백\n        setData(originalData)\n        toast.error(result.error || '승인 처리 중 오류가 발생했습니다.')\n      }\n    } catch (error) {\n      // 에러 시 원래 데이터로 롤백\n      setData(originalData)\n      toast.error('승인 처리 중 오류가 발생했습니다.')\n    } finally {\n      setActionLoading(null)\n    }\n  }\n\n  const handleStatusClick = (item: any, type: 'purchase' | 'delivery' | 'completed') => {\n    setSelectedStatusItem(item)\n    setStatusModalType(type)\n    setIsStatusModalOpen(true)\n  }\n\n  // 검색 필터링 함수\n  const filterItems = (items: any[], searchTerm: string) => {\n    if (!searchTerm.trim()) return items\n    \n    return items.filter(item => {\n      const orderNumber = item.purchase_order_number || ''\n      const vendorName = item.vendor_name || ''\n      const itemsText = (item.purchase_request_items || [])\n        .map((pItem: any) => pItem.item_name || '')\n        .join(' ')\n      \n      return [orderNumber, vendorName, itemsText]\n        .join(' ')\n        .toLowerCase()\n        .includes(searchTerm.toLowerCase())\n    })\n  }\n\n  const handleDownloadExcel = async (purchase: any) => {\n    try {\n      setDownloadingIds(prev => new Set(prev).add(purchase.id))\n      \n      // Excel 파일 생성 (FastPurchaseTable과 동일한 로직)\n      const workbook = new ExcelJS.Workbook()\n      const worksheet = workbook.addWorksheet('발주서')\n      \n      // 헤더 설정\n      worksheet.columns = [\n        { header: '발주번호', key: 'purchase_order_number', width: 20 },\n        { header: '업체명', key: 'vendor_name', width: 30 },\n        { header: '품목명', key: 'item_name', width: 40 },\n        { header: '규격', key: 'specification', width: 30 },\n        { header: '수량', key: 'quantity', width: 15 },\n        { header: '단가', key: 'unit_price', width: 20 },\n        { header: '금액', key: 'amount', width: 20 },\n        { header: '요청일', key: 'request_date', width: 15 },\n        { header: '진행상태', key: 'progress_type', width: 15 }\n      ]\n      \n      // 데이터 추가\n      const items = purchase.purchase_request_items || []\n      items.forEach((item: any) => {\n        worksheet.addRow({\n          purchase_order_number: purchase.purchase_order_number,\n          vendor_name: purchase.vendor_name || purchase.vendors?.vendor_name || '',\n          item_name: item.item_name || '',\n          specification: item.specification || '',\n          quantity: item.quantity || 0,\n          unit_price: item.unit_price_value || 0,\n          amount: item.amount_value || 0,\n          request_date: purchase.request_date || '',\n          progress_type: purchase.progress_type || ''\n        })\n      })\n      \n      // 스타일 적용\n      worksheet.getRow(1).font = { bold: true }\n      worksheet.getRow(1).fill = {\n        type: 'pattern',\n        pattern: 'solid',\n        fgColor: { argb: 'FFE0E0E0' }\n      }\n      \n      // 파일 다운로드\n      const buffer = await workbook.xlsx.writeBuffer()\n      const blob = new Blob([buffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' })\n      const url = window.URL.createObjectURL(blob)\n      const link = document.createElement('a')\n      link.href = url\n      link.download = `발주서_${purchase.purchase_order_number}_${new Date().toISOString().slice(0, 10)}.xlsx`\n      link.click()\n      window.URL.revokeObjectURL(url)\n      \n      // lead buyer인 경우 is_po_download를 true로 업데이트\n      if (currentUserRoles.includes('lead buyer') || currentUserRoles.includes('lead buyer')) {\n        await supabase\n          .from('purchase_requests')\n          .update({ is_po_download: true })\n          .eq('id', purchase.id)\n        \n        // UI에서 제거\n        setUndownloadedOrders(prev => prev.filter(item => item.id !== purchase.id))\n      }\n      \n      toast.success('발주서가 다운로드되었습니다.')\n    } catch (error) {\n      console.error('Excel download error:', error)\n      toast.error('다운로드 중 오류가 발생했습니다.')\n    } finally {\n      setDownloadingIds(prev => {\n        const newSet = new Set(prev)\n        newSet.delete(purchase.id)\n        return newSet\n      })\n    }\n  }\n\n  const getPriorityColor = (priority: 'high' | 'medium' | 'low') => {\n    switch (priority) {\n      case 'high': return 'bg-red-100 text-red-800 border-red-200'\n      case 'medium': return 'bg-yellow-100 text-yellow-800 border-yellow-200'\n      case 'low': return 'bg-green-100 text-green-800 border-green-200'\n      default: return 'bg-gray-100 text-gray-800 border-gray-200'\n    }\n  }\n\n  const getStepColor = (step: string) => {\n    switch (step) {\n      case 'approval': return 'bg-yellow-100 text-yellow-800'\n      case 'purchase': return 'bg-blue-100 text-blue-800'\n      case 'delivery': return 'bg-purple-100 text-purple-800'\n      case 'completed': return 'bg-green-100 text-green-800'\n      default: return 'bg-gray-100 text-gray-800'\n    }\n  }\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-screen bg-gray-50\">\n        <div className=\"text-center\">\n          <div className=\"w-12 h-12 border-3 border-hansl-500 border-t-transparent rounded-full animate-spin mx-auto\" />\n          <p className=\"mt-4 card-subtitle\">대시보드를 불러오고 있습니다...</p>\n        </div>\n      </div>\n    )\n  }\n\n  if (!data?.employee) {\n    return (\n      <div className=\"flex items-center justify-center h-screen bg-gray-50\">\n        <div className=\"text-center bg-white p-8 rounded-lg border border-gray-200\">\n          <h3 className=\"modal-subtitle mb-2\">사용자 정보를 찾을 수 없습니다</h3>\n          <p className=\"card-subtitle\">로그인을 다시 시도해주세요.</p>\n        </div>\n      </div>\n    )\n  }\n\n  // 권한 파싱 및 표시 여부 결정\n  const roles = Array.isArray(data.employee.purchase_role)\n    ? (data.employee.purchase_role as any[]).map((r: any) => String(r).trim())\n    : (data.employee.purchase_role\n        ? String(data.employee.purchase_role)\n            .split(',')\n            .map((r: string) => r.trim())\n            .filter((r: string) => r.length > 0)\n        : [])\n\n  const canSeeApprovalBox = roles.some((r: string) => ['middle_manager', 'final_approver', 'app_admin', 'raw_material_manager', 'consumable_manager'].includes(r))\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <div className=\"w-full px-4 lg:px-6\">\n        {/* 헤더 */}\n        <div className=\"mb-3\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h1 className=\"header-title\">대시보드</h1>\n              <p className=\"header-subtitle mt-0.5\">\n                {data.employee.name}님, 환영합니다. 📊\n              </p>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <Badge variant=\"outline\" className=\"badge-text\">\n                {new Date().toLocaleDateString('ko-KR', { \n                  month: 'long', \n                  day: 'numeric',\n                  weekday: 'short'\n                })}\n              </Badge>\n            </div>\n          </div>\n        </div>\n\n        {/* 긴급 알림 섹션 */}\n        {data.urgentRequests.length > 0 && (\n          <Card className=\"mb-3 border-red-200 bg-red-50\">\n            <CardHeader className=\"pb-2 pt-3\">\n              <CardTitle className=\"flex items-center gap-2 text-red-800 card-title\">\n                <AlertTriangle className=\"w-4 h-4\" />\n                긴급 처리 필요 ({data.urgentRequests.length}건)\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"p-3\">\n              <div className=\"flex gap-2 overflow-x-auto pb-2\">\n              {data.urgentRequests.slice(0, 5).map((request) => (\n                <div key={request.id} className=\"bg-white rounded-lg p-2 border border-red-200 min-w-[280px] flex-shrink-0\">\n                  <div className=\"flex items-center justify-between gap-2\">\n                    <div className=\"flex-1 min-w-0\">\n                      <div className=\"flex flex-wrap items-center gap-1 mb-1\">\n                        <Badge className={`${getPriorityColor(request.priority)} badge-text h-4 px-1`}>\n                          {request.priority === 'high' ? '높음' : request.priority === 'medium' ? '보통' : '낮음'}\n                        </Badge>\n                        <span className=\"card-subtitle truncate max-w-[120px]\">\n                          {request.vendor_name || '업체명 없음'}\n                        </span>\n                        <span className=\"card-date\">\n                          {request.daysOverdue}일 지연\n                        </span>\n                      </div>\n                      <div className=\"card-description\">\n                        <span>발주: {request.purchase_order_number || request.id.slice(0, 8)}</span>\n                        <span className=\"ml-1\">• {request.total_items}개</span>\n                      </div>\n                    </div>\n                    <div className=\"flex gap-1 shrink-0\">\n                      <Button\n                        size=\"sm\"\n                        variant=\"outline\"\n                        onClick={() => navigate(`/purchase?highlight=${request.id}`)}\n                        className=\"h-6 px-2 badge-text\"\n                      >\n                        <Eye className=\"w-3 h-3 mr-0.5\" />\n                        보기\n                      </Button>\n                      <Button\n                        size=\"sm\"\n                        onClick={() => handleQuickApprove(request.id)}\n                        disabled={actionLoading === request.id}\n                        className=\"bg-red-600 hover:bg-red-700 h-6 px-2 badge-text\"\n                      >\n                        <ThumbsUp className=\"w-3 h-3 mr-0.5\" />\n                        {actionLoading === request.id ? '처리중' : '승인'}\n                      </Button>\n                    </div>\n                  </div>\n                </div>\n              ))}\n              </div>\n            </CardContent>\n          </Card>\n        )}\n\n\n\n        {/* 통합 대시보드 그리드 */}\n        <div className=\"mb-2\">\n          <h2 className=\"section-title mb-2 flex items-center gap-1.5\">\n            <Package className=\"w-3.5 h-3.5 text-gray-600\" />\n            전체 현황\n          </h2>\n        </div>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-3\">\n          {/* Lead Buyer - 미다운로드 발주서 */}\n          {(currentUserRoles.includes('lead buyer') || currentUserRoles.includes('lead buyer')) && undownloadedOrders.length > 0 && (\n            <Card className=\"w-full col-span-1 row-span-2 border-gray-200 shadow-sm hover:shadow-md transition-shadow\">\n              <CardHeader className=\"py-3 px-4 bg-gray-50 border-b\">\n                <CardTitle className=\"section-title flex items-center justify-between\">\n                  <div className=\"flex items-center gap-2\">\n                    <Download className=\"w-4 h-4 text-orange-600\" />\n                    <span>미다운로드 발주서</span>\n                  </div>\n                  <Badge className=\"bg-orange-100 text-orange-700 border-orange-200 px-2 py-0.5\">\n                    {undownloadedOrders.length}\n                  </Badge>\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"p-4\">\n                <div className=\"space-y-3\">\n                  {/* 검색 입력 */}\n                  <div className=\"relative\">\n                    <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\n                    <Input\n                      placeholder=\"발주번호, 업체명, 품목으로 검색...\"\n                      value={searchTerms.undownloaded}\n                      onChange={(e) => setSearchTerms(prev => ({ ...prev, undownloaded: e.target.value }))}\n                      className=\"pl-10 h-8 text-xs\"\n                    />\n                  </div>\n                  \n                  {/* 항목 리스트 */}\n                  <div className=\"space-y-2 h-[36rem] overflow-y-auto\">\n                    {filterItems(undownloadedOrders, searchTerms.undownloaded).slice(0, 10).map((item) => {\n                      const items = item.purchase_request_items || []\n                      const firstItem = items[0] || {}\n                      const totalAmount = items.reduce((sum: number, i: any) => {\n                        return sum + (Number(i.amount_value) || 0)\n                      }, 0)\n                      const totalQty = items.reduce((sum: number, i: any) => {\n                        return sum + (Number(i.quantity) || 0)\n                      }, 0)\n                      const daysSince = Math.floor((Date.now() - new Date(item.created_at).getTime()) / (1000 * 60 * 60 * 24))\n                      const isAdvance = item.progress_type === '선진행'\n                      \n                      return (\n                        <div \n                          key={item.id} \n                          className={`border rounded-lg p-2 transition-all cursor-pointer hover:shadow-sm ${\n                            isAdvance ? 'bg-red-50 hover:bg-red-100 border-red-200' : 'bg-white hover:bg-gray-50 border-gray-200'\n                          }`}\n                          onClick={() => {\n                            setSelectedOrder(item)\n                            setIsOrderModalOpen(true)\n                          }}\n                        >\n                          <div className=\"flex items-center justify-between gap-2\">\n                            <div className=\"flex items-center gap-2 flex-1 min-w-0\">\n                              <span className=\"card-title\">\n                                {item.purchase_order_number || `PO-${item.id.slice(0, 8)}`}\n                              </span>\n                              <span className=\"card-subtitle truncate\">\n                                {item.vendor_name || '업체명 없음'}\n                              </span>\n                              <span className=\"card-description truncate\">\n                                {firstItem.item_name || '품목'} \n                                {items.length > 1 && (\n                                  <span className=\"text-gray-400\"> 외 {items.length - 1}건</span>\n                                )}\n                              </span>\n                              {daysSince > 3 && (\n                                <Badge variant=\"outline\" className=\"badge-text px-1.5 py-0 flex-shrink-0\">\n                                  {daysSince}일\n                                </Badge>\n                              )}\n                            </div>\n                            <div>\n                              <Button\n                                size=\"sm\"\n                                variant=\"outline\"\n                                className=\"h-7 px-2 badge-text border-orange-200 hover:bg-orange-50\"\n                                onClick={(e) => {\n                                  e.stopPropagation()\n                                  handleDownloadExcel(item)\n                                }}\n                                disabled={downloadingIds.has(item.id)}\n                              >\n                                {downloadingIds.has(item.id) ? (\n                                  <div className=\"w-3 h-3 border border-orange-600 border-t-transparent rounded-full animate-spin\" />\n                                ) : (\n                                  <>\n                                    <Download className=\"w-3 h-3 mr-1\" />\n                                    다운로드\n                                  </>\n                                )}\n                              </Button>\n                            </div>\n                          </div>\n                        </div>\n                      )\n                    })}\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          )}\n\n\n          {/* 승인 대기 (승인 권한자만 표시) */}\n          {canSeeApprovalBox && (\n            <Card className=\"w-full col-span-1 row-span-2\">\n              <CardHeader className=\"pb-2 pt-3\">\n                <div className=\"flex items-center justify-between\">\n                  <CardTitle className=\"section-title flex items-center gap-1.5\">\n                    <Clock className=\"w-3.5 h-3.5 text-orange-500\" />\n                    승인 대기\n                    {data.pendingApprovals.length > 0 && (\n                      <Badge variant=\"destructive\" className=\"badge-text h-4 px-1\">\n                        {data.pendingApprovals.length}\n                      </Badge>\n                    )}\n                  </CardTitle>\n                  {data.pendingApprovals.length > 0 && (\n                    <Button\n                      size=\"sm\"\n                      variant=\"ghost\"\n                      onClick={() => navigate('/purchase')}\n                      className=\"h-6 px-2\"\n                    >\n                      <ArrowRight className=\"w-3 h-3\" />\n                    </Button>\n                  )}\n                </div>\n              </CardHeader>\n              <CardContent className=\"p-3\">\n                {data.pendingApprovals.length === 0 ? (\n                  <div className=\"text-center py-4 text-gray-400\">\n                    <CheckCircle className=\"w-6 h-6 mx-auto mb-1\" />\n                    <p className=\"card-description\">대기 항목 없음</p>\n                  </div>\n                  ) : (\n                  <div className=\"space-y-3\">\n                    {/* 검색 입력 */}\n                    <div className=\"relative\">\n                      <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\n                      <Input\n                        placeholder=\"발주번호, 업체명, 품목으로 검색...\"\n                        value={searchTerms.pending}\n                        onChange={(e) => setSearchTerms(prev => ({ ...prev, pending: e.target.value }))}\n                        className=\"pl-10 h-8 text-xs\"\n                      />\n                    </div>\n                    \n                    {/* 항목 리스트 */}\n                    <div className=\"space-y-1.5 h-[36rem] overflow-y-auto\">\n                      {filterItems(data.pendingApprovals, searchTerms.pending).slice(0, 10).map((approval) => {\n                        const items = approval.purchase_request_items || []\n                        const firstItem = items[0] || {}\n                        const totalAmount = approval.total_amount || items.reduce((sum: number, i: any) => sum + (Number(i.amount_value) || 0), 0)\n                        const isAdvance = approval.progress_type === '선진행'\n                        \n                        return (\n                          <div \n                            key={approval.id} \n                            className={`border rounded-lg p-2 hover:shadow-sm transition-all cursor-pointer ${\n                              isAdvance ? 'bg-red-50 border-red-200' : 'hover:bg-orange-50/30'\n                            }`}\n                            onClick={(e) => {\n                              if ((e.target as HTMLElement).closest('button')) return\n                              setSelectedApprovalId(Number(approval.id))\n                              setIsModalOpen(true)\n                            }}\n                          >\n                            <div className=\"flex items-center justify-between gap-2\">\n                              <div className=\"flex items-center gap-2 flex-1 min-w-0\">\n                                <span className=\"card-title\">\n                                  {approval.purchase_order_number}\n                                </span>\n                                <span className=\"card-subtitle truncate\">{approval.vendor_name || '업체'}</span>\n                                <span className=\"card-description truncate\">\n                                  {firstItem.item_name || '품목'} {items.length > 1 && `외 ${items.length - 1}건`}\n                                </span>\n                              </div>\n                              <Button\n                                size=\"sm\"\n                                onClick={(e) => {\n                                  e.stopPropagation()\n                                  handleQuickApprove(approval.id)\n                                }}\n                                disabled={actionLoading === approval.id}\n                                className={`h-7 px-2 text-white badge-text shrink-0 ${\n                                  approval.middle_manager_status === 'approved' \n                                    ? 'bg-blue-600 hover:bg-blue-700' \n                                    : 'bg-green-600 hover:bg-green-700'\n                                }`}\n                              >\n                                {actionLoading === approval.id ? (\n                                  <div className=\"w-3 h-3 border border-white border-t-transparent rounded-full animate-spin\" />\n                                ) : (\n                                  <>\n                                    {approval.middle_manager_status === 'approved' ? '최종' : '1차'} 승인\n                                  </>\n                                )}\n                              </Button>\n                            </div>\n                          </div>\n                        )\n                      })}\n                    </div>\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          )}\n          \n          {/* 구매 대기중 - 모든 사용자에게 표시 (본인 것만) */}\n          <Card className=\"w-full col-span-1 border-gray-200 shadow-sm hover:shadow-md transition-shadow\">\n              <CardHeader className=\"py-3 px-4 bg-gray-50 border-b\">\n                <CardTitle className=\"section-title flex items-center justify-between\">\n                  <div className=\"flex items-center gap-2\">\n                    <ShoppingCart className=\"w-4 h-4 text-yellow-600\" />\n                    <span>구매 대기</span>\n                  </div>\n                  {data.myPurchaseStatus && data.myPurchaseStatus.waitingPurchase && data.myPurchaseStatus.waitingPurchase.length > 0 && (\n                    <Badge className=\"bg-yellow-100 text-yellow-700 border-yellow-200 px-2 py-0.5\">\n                      {data.myPurchaseStatus.waitingPurchase.length}\n                    </Badge>\n                  )}\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"p-4\">\n                {!data.myPurchaseStatus || !data.myPurchaseStatus.waitingPurchase || data.myPurchaseStatus.waitingPurchase.length === 0 ? (\n                  <div className=\"text-center py-12 text-gray-400\">\n                    <ShoppingCart className=\"w-10 h-10 mx-auto mb-3 text-gray-300\" />\n                    <p className=\"card-subtitle\">구매 대기 항목이 없습니다</p>\n                  </div>\n                ) : (\n                  <div className=\"space-y-3\">\n                    {/* 검색 입력 */}\n                    <div className=\"relative\">\n                      <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\n                      <Input\n                        placeholder=\"발주번호, 업체명, 품목으로 검색...\"\n                        value={searchTerms.purchase}\n                        onChange={(e) => setSearchTerms(prev => ({ ...prev, purchase: e.target.value }))}\n                        className=\"pl-10 h-8 text-xs\"\n                      />\n                    </div>\n                    \n                    {/* 항목 리스트 */}\n                    <div className=\"space-y-2 h-[36rem] overflow-y-auto\">\n                      {filterItems(data.myPurchaseStatus.waitingPurchase, searchTerms.purchase).slice(0, 10).map((item) => {\n                        const items = item.purchase_request_items || []\n                        const firstItem = items[0]\n                        const totalAmount = items.reduce((sum: number, i: any) => sum + (Number(i.amount_value) || 0), 0)\n                        const isSeonJin = (item.progress_type || '').includes('선진행')\n                        \n                        return (\n                          <div \n                            key={item.id} \n                            className={`border rounded-lg p-3 transition-all hover:shadow-sm ${\n                              isSeonJin ? 'bg-red-50 hover:bg-red-100 border-red-200' : 'bg-white hover:bg-gray-50 border-gray-200'\n                            }`}\n                          >\n                            <div className=\"flex items-center justify-between gap-2\">\n                              <div \n                                className=\"flex items-center gap-2 flex-1 cursor-pointer\"\n                                onClick={() => handleStatusClick(item, 'purchase')}\n                              >\n                                <span className=\"card-title\">\n                                  {item.purchase_order_number || `PO-${item.id.slice(0, 8)}`}\n                                </span>\n                                <span className=\"card-subtitle truncate\">\n                                  {item.vendor_name || '업체명 없음'}\n                                </span>\n                                <span className=\"card-description truncate\">\n                                  {firstItem?.item_name || '품목'} \n                                  {items.length > 1 && (\n                                    <span className=\"text-gray-400\"> 외 {items.length - 1}건</span>\n                                  )}\n                                </span>\n                              </div>\n                              \n                              {/* 구매완료 버튼 - Lead Buyer, App Admin, Receiver만 표시 */}\n                              {(currentUserRoles.includes('lead buyer') || \n                                currentUserRoles.includes('app_admin') || \n                                currentUserRoles.includes('receiver')) && !item.is_payment_completed && (\n                                <Button\n                                  size=\"sm\"\n                                  onClick={async (e) => {\n                                    e.stopPropagation()\n                                    if (!confirm('이 발주를 구매완료 처리하시겠습니까?')) return\n                                    \n                                    try {\n                                      const { error } = await supabase\n                                        .from('purchase_requests')\n                                        .update({ \n                                          is_payment_completed: true,\n                                          payment_completed_at: new Date().toISOString()\n                                        })\n                                        .eq('id', item.id)\n\n                                      if (error) throw error\n                                      \n                                      toast.success('구매완료 처리되었습니다.')\n                                      loadDashboardData(false) // 데이터 새로고침\n                                    } catch (error) {\n                                      toast.error('처리 중 오류가 발생했습니다.')\n                                    }\n                                  }}\n                                  className=\"bg-yellow-600 hover:bg-yellow-700 text-white h-7 px-2 badge-text shrink-0\"\n                                >\n                                  구매완료\n                                </Button>\n                              )}\n                              \n                              {/* 이미 구매완료된 경우 완료 표시 */}\n                              {item.is_payment_completed && (\n                                <div className=\"bg-green-100 text-green-700 px-2 py-1 rounded text-xs font-medium shrink-0\">\n                                  완료됨\n                                </div>\n                              )}\n                            </div>\n                          </div>\n                        )\n                      })}\n                    </div>\n                  </div>\n                )}\n              </CardContent>\n          </Card>\n\n          {/* 입고 대기중 */}\n          <Card className=\"w-full col-span-1 border-gray-200 shadow-sm hover:shadow-md transition-shadow\">\n              <CardHeader className=\"py-3 px-4 bg-gray-50 border-b\">\n                <CardTitle className=\"section-title flex items-center justify-between\">\n                  <div className=\"flex items-center gap-2\">\n                    <Truck className=\"w-4 h-4 text-blue-600\" />\n                    <span>입고 대기</span>\n                  </div>\n                  {data.myPurchaseStatus.waitingDelivery.length > 0 && (\n                    <Badge className=\"bg-blue-100 text-blue-700 border-blue-200 px-2 py-0.5\">\n                      {data.myPurchaseStatus.waitingDelivery.length}\n                    </Badge>\n                  )}\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"p-4\">\n                {data.myPurchaseStatus.waitingDelivery.length === 0 ? (\n                  <div className=\"text-center py-12 text-gray-400\">\n                    <Truck className=\"w-10 h-10 mx-auto mb-3 text-gray-300\" />\n                    <p className=\"card-subtitle\">입고 대기 항목이 없습니다</p>\n                  </div>\n                ) : (\n                  <div className=\"space-y-3\">\n                    {/* 검색 입력 */}\n                    <div className=\"relative\">\n                      <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\n                      <Input\n                        placeholder=\"발주번호, 업체명, 품목으로 검색...\"\n                        value={searchTerms.delivery}\n                        onChange={(e) => setSearchTerms(prev => ({ ...prev, delivery: e.target.value }))}\n                        className=\"pl-10 h-8 text-xs\"\n                      />\n                    </div>\n                    \n                    {/* 항목 리스트 */}\n                    <div className=\"space-y-2 h-[36rem] overflow-y-auto\">\n                      {filterItems(data.myPurchaseStatus.waitingDelivery, searchTerms.delivery).slice(0, 10).map((item) => {\n                        const items = item.purchase_request_items || []\n                        const firstItem = items[0]\n                        const totalItems = items.length\n                        const receivedItems = items.filter((i: any) => i.is_received).length\n                        const progress = totalItems > 0 ? Math.round((receivedItems / totalItems) * 100) : 0\n                        const totalAmount = items.reduce((sum: number, i: any) => sum + (Number(i.amount_value) || 0), 0)\n                        const isSeonJin = (item.progress_type || '').includes('선진행')\n                        \n                        return (\n                          <div \n                            key={item.id} \n                            className={`border rounded-lg p-3 transition-all cursor-pointer hover:shadow-sm ${\n                              isSeonJin ? 'bg-red-50 hover:bg-red-100 border-red-200' : 'bg-white hover:bg-gray-50 border-gray-200'\n                            }`}\n                            onClick={() => handleStatusClick(item, 'delivery')}\n                          >\n                            <div className=\"flex items-center gap-2\">\n                              <span className=\"card-title\">\n                                {item.purchase_order_number || `PO-${item.id.slice(0, 8)}`}\n                              </span>\n                              <span className=\"card-subtitle truncate\">\n                                {item.vendor_name || '업체명 없음'}\n                              </span>\n                              <span className=\"card-description truncate\">\n                                {firstItem?.item_name || '품목'} \n                                {totalItems > 1 && (\n                                  <span className=\"text-gray-400\"> 외 {totalItems - 1}건</span>\n                                )}\n                              </span>\n                            </div>\n                          </div>\n                        )\n                      })}\n                    </div>\n                  </div>\n                )}\n              </CardContent>\n          </Card>\n\n        </div>\n\n        {/* 오늘의 요약 - 상단 통계에 통합 */}\n      </div>\n      \n      {/* 승인 상세보기 모달 */}\n      <PurchaseDetailModal\n        purchaseId={selectedApprovalId}\n        isOpen={isModalOpen}\n        onClose={() => {\n          setIsModalOpen(false)\n          setSelectedApprovalId(null)\n        }}\n        currentUserRoles={currentUserRoles}\n        onRefresh={() => {\n          loadDashboardData()\n          setIsModalOpen(false)\n          setSelectedApprovalId(null)\n        }}\n      />\n      \n      {/* 구매/입고 상태 상세보기 모달 */}\n      <PurchaseStatusModal\n          isOpen={isStatusModalOpen}\n          onClose={() => {\n            setIsStatusModalOpen(false)\n            setSelectedStatusItem(null)\n            setStatusModalType(null)\n          }}\n          item={selectedStatusItem}\n          type={statusModalType as any}\n          onRefresh={() => loadDashboardData(false)}\n      />\n\n      {/* Order Detail Modal - Apple-inspired Design */}\n      {isOrderModalOpen && selectedOrder && (\n        <Dialog open={isOrderModalOpen} onOpenChange={() => {\n          setIsOrderModalOpen(false)\n          setSelectedOrder(null)\n        }}>\n          <DialogContent \n            className=\"overflow-hidden bg-white rounded-3xl shadow-2xl border-0\"\n            style={{ maxWidth: '1280px', width: '90vw', maxHeight: '50vh' }}\n            showCloseButton={false}\n          >\n            {/* Apple-style Header */}\n            <div className=\"relative px-6 pt-6 pb-4\">\n              <button\n                onClick={() => {\n                  setIsOrderModalOpen(false)\n                  setSelectedOrder(null)\n                }}\n                className=\"absolute right-6 top-6 w-8 h-8 rounded-full bg-gray-100 hover:bg-gray-200 flex items-center justify-center transition-all duration-200\"\n              >\n                <X className=\"w-4 h-4 text-gray-500\" />\n              </button>\n              \n              <div className=\"pr-16\">\n                <div className=\"flex items-start gap-4 mb-2\">\n                  <div className=\"w-10 h-10 rounded-2xl bg-orange-50 flex items-center justify-center flex-shrink-0\">\n                    <Download className=\"w-6 h-6 text-orange-600\" />\n                  </div>\n                  <div className=\"min-w-0 flex-1\">\n                    <h1 className=\"modal-title mb-1\">\n                      {selectedOrder.purchase_order_number || 'PO번호 없음'}\n                    </h1>\n                    <p className=\"modal-subtitle\">{selectedOrder.vendor_name || '업체명 없음'}</p>\n                  </div>\n                  <div className={`px-3 py-1.5 rounded-full badge-text bg-orange-50 text-orange-700 border-orange-200`}>\n                    미다운로드\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Apple-style Content */}\n            <div className=\"overflow-y-auto max-h-[calc(50vh-160px)] px-6 pb-4 space-y-3\">\n              \n              {/* Dense Basic Information Grid */}\n              <div className=\"bg-gray-50 rounded-xl p-3 border border-gray-100\">\n                <div className=\"grid grid-cols-3 gap-x-4 gap-y-2 text-xs\">\n                  <div><span className=\"text-gray-500\">요청자:</span> <span className=\"font-medium\">{selectedOrder.requester_name}</span></div>\n                  <div><span className=\"text-gray-500\">요청일:</span> <span className=\"font-medium\">{new Date(selectedOrder.request_date || selectedOrder.created_at).toLocaleDateString('ko-KR')}</span></div>\n                  <div><span className=\"text-gray-500\">납기요청일:</span> <span className=\"font-medium\">{selectedOrder.delivery_request_date ? new Date(selectedOrder.delivery_request_date).toLocaleDateString('ko-KR') : '미지정'}</span></div>\n                  \n                  <div><span className=\"text-gray-500\">업체명:</span> <span className=\"font-medium\">{selectedOrder.vendor_name || '-'}</span></div>\n                  <div><span className=\"text-gray-500\">결제유형:</span> <span className=\"font-medium\">{selectedOrder.payment_category || '일반'}</span></div>\n                  <div><span className=\"text-gray-500\">진행구분:</span> <span className=\"font-medium\">{selectedOrder.progress_type || '일반'}</span></div>\n                  \n                  <div><span className=\"text-gray-500\">프로젝트업체:</span> <span className=\"font-medium\">{selectedOrder.project_vendor || '-'}</span></div>\n                  <div><span className=\"text-gray-500\">판매주문번호:</span> <span className=\"font-medium\">{selectedOrder.sales_order_number || '-'}</span></div>\n                  <div><span className=\"text-gray-500\">배송지:</span> <span className=\"font-medium\">{selectedOrder.shipping_address || '본사'}</span></div>\n                  \n                  <div><span className=\"text-gray-500\">통화:</span> <span className=\"font-medium\">{selectedOrder.currency || 'KRW'}</span></div>\n                  <div><span className=\"text-gray-500\">템플릿:</span> <span className=\"font-medium\">{selectedOrder.po_template_type || '일반'}</span></div>\n                  {selectedOrder.revised_delivery_request_date && (\n                    <div><span className=\"text-orange-500\">변경입고일:</span> <span className=\"font-medium text-orange-900\">{new Date(selectedOrder.revised_delivery_request_date).toLocaleDateString('ko-KR')}</span></div>\n                  )}\n                </div>\n              </div>\n\n              {/* Compact Items Table */}\n              <div className=\"bg-white rounded-xl border border-gray-100 overflow-hidden\">\n                <div className=\"bg-gray-50 px-3 py-2 border-b border-gray-100\">\n                  <h3 className=\"text-sm font-medium text-gray-700\">주문 품목 ({(selectedOrder.purchase_request_items || []).length}개, 총 ₩{(selectedOrder.purchase_request_items || []).reduce((sum: number, i: any) => sum + (Number(i.amount_value) || 0), 0).toLocaleString()})</h3>\n                </div>\n                <div className=\"overflow-x-auto\">\n                  <table className=\"w-full text-xs table-fixed\">\n                    <colgroup>\n                      <col className=\"w-[30%]\" />\n                      <col className=\"w-[25%]\" />\n                      <col className=\"w-[10%]\" />\n                      <col className=\"w-[15%]\" />\n                      <col className=\"w-[20%]\" />\n                    </colgroup>\n                    <thead className=\"bg-gray-50 border-b border-gray-100\">\n                      <tr>\n                        <th className=\"text-left p-2 font-medium text-gray-600\">품목명</th>\n                        <th className=\"text-left p-2 font-medium text-gray-600\">규격</th>\n                        <th className=\"text-right p-2 font-medium text-gray-600\">수량</th>\n                        <th className=\"text-right p-2 font-medium text-gray-600\">단가</th>\n                        <th className=\"text-right p-2 font-medium text-gray-600\">금액</th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"divide-y divide-gray-100\">\n                      {(selectedOrder.purchase_request_items || []).map((pItem: any, index: number) => {\n                        const unitPrice = pItem.quantity > 0 ? (Number(pItem.amount_value) || 0) / pItem.quantity : 0\n                        return (\n                          <tr key={index} className=\"hover:bg-gray-50\">\n                            <td className=\"p-2\">\n                              <div className=\"font-medium text-gray-900\">{pItem.item_name || '품목명 없음'}</div>\n                              {pItem.remark && (\n                                <div className=\"text-xs text-amber-600 mt-1\">비고: {pItem.remark}</div>\n                              )}\n                            </td>\n                            <td className=\"p-2 text-gray-600\">{pItem.specification || '-'}</td>\n                            <td className=\"p-2 text-right font-medium\">{pItem.quantity || 0}</td>\n                            <td className=\"p-2 text-right\">₩{unitPrice.toLocaleString()}</td>\n                            <td className=\"p-2 text-right font-medium\">₩{(Number(pItem.amount_value) || 0).toLocaleString()}</td>\n                          </tr>\n                        )\n                      })}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n\n            {/* Apple-style Action Bar */}\n            <div className=\"sticky bottom-0 bg-white border-t border-gray-100 px-6 py-6\">\n              <div className=\"flex items-center justify-between gap-6\">\n                <Button\n                  onClick={() => handleDownloadExcel(selectedOrder)}\n                  disabled={downloadingIds.has(selectedOrder.id)}\n                  className=\"bg-gradient-to-r from-orange-500 to-orange-600 hover:from-orange-600 hover:to-orange-700 text-white px-8 py-4 rounded-2xl shadow-lg transition-all duration-200 modal-subtitle\"\n                >\n                  {downloadingIds.has(selectedOrder.id) ? (\n                    <div className=\"w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin mr-3\" />\n                  ) : (\n                    <Download className=\"w-5 h-5 mr-3\" />\n                  )}\n                  Excel 다운로드\n                </Button>\n\n                <div className=\"flex items-center gap-4 ml-auto\">\n                  <Button\n                    variant=\"outline\"\n                    onClick={() => {\n                      navigate(`/purchase/list?tab=purchase`)\n                      setIsOrderModalOpen(false)\n                      setSelectedOrder(null)\n                    }}\n                    className=\"border-gray-300 text-gray-700 hover:bg-gray-50 hover:text-gray-900 hover:border-gray-400 px-8 py-4 rounded-2xl modal-subtitle transition-all duration-200\"\n                  >\n                    발주 목록에서 보기\n                    <ArrowRight className=\"w-5 h-5 ml-3\" />\n                  </Button>\n                  <Button \n                    onClick={() => {\n                      setIsOrderModalOpen(false)\n                      setSelectedOrder(null)\n                    }} \n                    className=\"bg-gray-900 hover:bg-gray-800 text-white px-10 py-4 rounded-2xl modal-subtitle transition-all duration-200 shadow-lg\"\n                  >\n                    완료\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n      )}\n    </div>\n  )\n}"],"names":["__iconNode","ArrowRight","createLucideIcon","CircleCheck","Clock","ThumbsUp","TriangleAlert","DashboardService","createClient","purchaseRole","roles","r","employee","stats","urgentRequests","myRecentRequests","pendingApprovals","quickActions","todaySummary","myPurchaseStatus","today","totalResult","myRequestsResult","pendingResult","completedResult","urgentResult","todayActionsResult","threeDaysAgo","query","data","item","allRequests","firstTry","fallback","filteredData","isPending","status","middlePending","finalPending","middleRejected","finalRejected","items","vendor_name","vendor","purchase_request_items","total_amount","sum","i","amount","actions","pendingCount","purchaseCount","tomorrow","approvedResult","requestedResult","receivedResult","requesterName","sevenDaysAgo","myRequests","allMyRequests","waitingPurchase","categoryNormalized","isPurchaseRequest","notPaid","isSeonJin","isIlban","finalApproved","waitingDelivery","notReceived","recentCompleted","receivedDate","sevenDaysAgoDate","requestId","request","updateData","updatedData","error","mid","fin","pur","count","daysPending","progress","created","estimatedDays","isDownloadable","notDownloaded","a","b","dashboardService","PurchaseStatusModal","isOpen","onClose","type","onRefresh","navigate","useNavigate","supabase","currentUserRoles","setCurrentUserRoles","useState","processing","setProcessing","localItem","setLocalItem","useEffect","user","totalAmount","typeInfo","jsx","ShoppingCart","Truck","CheckCircle","Package","Dialog","jsxs","DialogContent","X","pItem","index","unitPrice","CheckCircle2","Button","prev","toast","receivedCount","totalCount","percentage","DashboardMain","setData","loading","setLoading","actionLoading","setActionLoading","selectedApprovalId","setSelectedApprovalId","isModalOpen","setIsModalOpen","undownloadedOrders","setUndownloadedOrders","downloadingIds","setDownloadingIds","selectedOrder","setSelectedOrder","isOrderModalOpen","setIsOrderModalOpen","selectedStatusItem","setSelectedStatusItem","statusModalType","setStatusModalType","isStatusModalOpen","setIsStatusModalOpen","searchTerms","setSearchTerms","loadDashboardData","useCallback","showLoading","authError","employeeError","defaultEmployee","dashboardData","err","_totalDeliveryWaiting","undownloaded","handleQuickApprove","originalData","result","handleStatusClick","filterItems","searchTerm","orderNumber","vendorName","itemsText","handleDownloadExcel","purchase","workbook","ExcelJS","worksheet","buffer","blob","url","link","newSet","getPriorityColor","priority","canSeeApprovalBox","Badge","Card","CardHeader","CardTitle","AlertTriangle","CardContent","Eye","Download","Search","Input","e","firstItem","daysSince","isAdvance","Fragment","approval","totalItems","PurchaseDetailModal"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4]}