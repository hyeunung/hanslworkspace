{"version":3,"file":"DashboardMain-CozGBADg.js","sources":["../../node_modules/lucide-react/dist/esm/icons/arrow-right.js","../../node_modules/lucide-react/dist/esm/icons/circle-check.js","../../node_modules/lucide-react/dist/esm/icons/clock.js","../../node_modules/lucide-react/dist/esm/icons/thumbs-up.js","../../node_modules/lucide-react/dist/esm/icons/triangle-alert.js","../../src/services/dashboardService.ts","../../src/components/dashboard/PurchaseStatusModal.tsx","../../src/components/dashboard/DashboardMain.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M5 12h14\", key: \"1ays0h\" }],\n  [\"path\", { d: \"m12 5 7 7-7 7\", key: \"xquz4c\" }]\n];\nconst ArrowRight = createLucideIcon(\"arrow-right\", __iconNode);\n\nexport { __iconNode, ArrowRight as default };\n//# sourceMappingURL=arrow-right.js.map\n","/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"path\", { d: \"m9 12 2 2 4-4\", key: \"dzmm74\" }]\n];\nconst CircleCheck = createLucideIcon(\"circle-check\", __iconNode);\n\nexport { __iconNode, CircleCheck as default };\n//# sourceMappingURL=circle-check.js.map\n","/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M12 6v6l4 2\", key: \"mmk7yg\" }],\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }]\n];\nconst Clock = createLucideIcon(\"clock\", __iconNode);\n\nexport { __iconNode, Clock as default };\n//# sourceMappingURL=clock.js.map\n","/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M7 10v12\", key: \"1qc93n\" }],\n  [\n    \"path\",\n    {\n      d: \"M15 5.88 14 10h5.83a2 2 0 0 1 1.92 2.56l-2.33 8A2 2 0 0 1 17.5 22H4a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h2.76a2 2 0 0 0 1.79-1.11L12 2a3.13 3.13 0 0 1 3 3.88Z\",\n      key: \"emmmcr\"\n    }\n  ]\n];\nconst ThumbsUp = createLucideIcon(\"thumbs-up\", __iconNode);\n\nexport { __iconNode, ThumbsUp as default };\n//# sourceMappingURL=thumbs-up.js.map\n","/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3\",\n      key: \"wmoenq\"\n    }\n  ],\n  [\"path\", { d: \"M12 9v4\", key: \"juzpu7\" }],\n  [\"path\", { d: \"M12 17h.01\", key: \"p32p05\" }]\n];\nconst TriangleAlert = createLucideIcon(\"triangle-alert\", __iconNode);\n\nexport { __iconNode, TriangleAlert as default };\n//# sourceMappingURL=triangle-alert.js.map\n","import { createClient } from '@/lib/supabase/client'\nimport { logger } from '@/lib/logger'\nimport type { \n  DashboardData, \n  DashboardStats, \n  UrgentRequest, \n  MyRequestStatus, \n  QuickAction,\n  Employee,\n  PurchaseRequestWithDetails \n} from '@/types/purchase'\n\nexport class DashboardService {\n  private supabase = createClient()\n\n  // 역할 파싱 유틸: 배열/CSV 문자열/단일 문자열을 모두 배열로 정규화\n  // usePurchaseData.ts와 동일한 로직 사용\n  private parseRoles(purchaseRole: string | string[] | null | undefined): string[] {\n    let roles: string[] = []\n    \n    if (purchaseRole) {\n      if (Array.isArray(purchaseRole)) {\n        // 배열인 경우\n        roles = purchaseRole.map((r: any) => String(r).trim())\n      } else {\n        // 문자열인 경우 (일반적)\n        const roleString = String(purchaseRole)\n        // 쉼표로 분할하고 공백 제거\n        roles = roleString\n          .split(',')\n          .map((r: string) => r.trim())\n          .filter((r: string) => r.length > 0)\n      }\n    }\n    \n    return roles\n  }\n\n  // 메인 대시보드 데이터 로드\n  async getDashboardData(employee: Employee): Promise<DashboardData> {\n    const [\n      stats,\n      urgentRequests,\n      myRecentRequests,\n      pendingApprovals,\n      quickActions,\n      todaySummary,\n      myPurchaseStatus\n    ] = await Promise.all([\n      this.getDashboardStats(employee),\n      this.getUrgentRequests(employee),\n      this.getMyRecentRequests(employee),\n      this.getPendingApprovals(employee),\n      this.getQuickActions(employee),\n      this.getTodaySummary(employee),\n      this.getMyPurchaseStatus(employee)\n    ])\n\n    return {\n      employee,\n      stats,\n      urgentRequests,\n      myRecentRequests,\n      pendingApprovals,\n      quickActions,\n      todaySummary,\n      myPurchaseStatus\n    }\n  }\n\n  // 통계 정보 (우선순위 재정렬)\n  async getDashboardStats(employee: Employee): Promise<DashboardStats> {\n    const today = new Date().toISOString().split('T')[0]\n    const roles = this.parseRoles(employee.purchase_role)\n\n\n    // 병렬 쿼리로 성능 최적화\n    const [\n      totalResult,\n      myRequestsResult,\n      pendingResult,\n      completedResult,\n      urgentResult,\n      todayActionsResult\n    ] = await Promise.all([\n      // 전체 요청 수\n      this.supabase\n        .from('purchase_requests')\n        .select('id', { count: 'exact', head: true }),\n\n      // 내 요청 수\n      this.supabase\n        .from('purchase_requests')\n        .select('id', { count: 'exact', head: true })\n        .eq('requester_name', employee.name),\n\n      // 내가 처리해야 할 승인 대기\n      this.getPendingCount(employee, roles),\n\n      // 이번 달 완료된 요청 수  \n      this.supabase\n        .from('purchase_requests')\n        .select('id', { count: 'exact', head: true })\n        .eq('is_received', true)\n        .gte('received_at', new Date(new Date().getFullYear(), new Date().getMonth(), 1).toISOString()),\n\n      // 긴급 요청 수 (3일 이상 대기)\n      this.getUrgentCount(employee, roles),\n\n      // 오늘 처리한 액션 수\n      this.getTodayActionsCount(employee, today)\n    ])\n\n    const stats = {\n      total: totalResult.count || 0,\n      myRequests: myRequestsResult.count || 0,\n      pending: pendingResult,\n      completed: completedResult.count || 0,\n      urgent: urgentResult,\n      todayActions: todayActionsResult\n    }\n\n    return stats\n  }\n\n  // 긴급 요청 목록 (우선순위 최상위)\n  async getUrgentRequests(employee: Employee): Promise<UrgentRequest[]> {\n    const threeDaysAgo = new Date(Date.now() - 3 * 24 * 60 * 60 * 1000).toISOString()\n    const roles = this.parseRoles(employee.purchase_role)\n\n    // 역할이 없으면 긴급 요청도 없음\n    if (roles.length === 0) {\n      return []\n    }\n\n    let query = this.supabase\n      .from('purchase_requests')\n      .select('*,vendors(vendor_name),purchase_request_items(id)')\n      .lt('created_at', threeDaysAgo)\n\n    // 역할별 긴급 요청 필터링\n    if (roles.includes('app_admin')) {\n      query = query.or('middle_manager_status.eq.pending,final_manager_status.eq.pending,purchase_status.eq.pending')\n    } else if (roles.includes('middle_manager')) {\n      query = query.eq('middle_manager_status', 'pending')\n    } else if (roles.includes('final_approver') || roles.includes('ceo')) {\n      query = query\n        .eq('middle_manager_status', 'approved')\n        .eq('final_manager_status', 'pending')\n    } else if (roles.includes('lead buyer')) {\n      query = query\n        .eq('final_manager_status', 'approved')\n        .eq('purchase_status', 'pending')\n    } else {\n      // 다른 역할은 긴급 요청 없음\n      return []\n    }\n\n    const { data } = await query\n      .order('created_at', { ascending: true })\n      .limit(5)\n\n    return (data || []).map(item => ({\n      ...item,\n      vendor_name: item.vendors?.vendor_name,\n      total_items: item.purchase_request_items?.length || 0,\n      daysOverdue: Math.floor((Date.now() - new Date(item.created_at).getTime()) / (1000 * 60 * 60 * 24)),\n      priority: this.calculatePriority(item),\n      urgentReason: this.getUrgentReason(item, roles)\n    })) as UrgentRequest[]\n  }\n\n  // 내 최근 요청 상태 (승인 진행중인 항목만 - 승인 대기는 제외)\n  async getMyRecentRequests(employee: Employee): Promise<MyRequestStatus[]> {\n    const { data } = await this.supabase\n      .from('purchase_requests')\n      .select('*,vendors(vendor_name),purchase_request_items(id)')\n      .eq('requester_name', employee.name)\n      // 승인이 진행중인 항목만 (1차 승인됨 + 최종 대기중 OR 모든 승인 완료 + 구매 대기중)\n      .or('and(middle_manager_status.eq.approved,final_manager_status.eq.pending),and(final_manager_status.eq.approved,purchase_status.eq.pending)')\n      .order('created_at', { ascending: false })\n      .limit(5)\n\n    return (data || []).map(item => ({\n      ...item,\n      vendor_name: item.vendors?.vendor_name,\n      total_items: item.purchase_request_items?.length || 0,\n      progress_percentage: this.calculateProgress(item),\n      current_step: this.getCurrentStep(item),\n      next_action: this.getNextAction(item),\n      estimated_completion: this.estimateCompletion(item)\n    })) as MyRequestStatus[]\n  }\n\n  // 승인 대기 항목 (전체 조회) - 발주 리스트와 동일한 방식\n  async getPendingApprovals(employee: Employee): Promise<PurchaseRequestWithDetails[]> {\n    const roles = this.parseRoles(employee.purchase_role)\n\n    // 먼저 모든 발주요청을 가져옴 (발주 리스트와 동일)\n    // 스키마에 맞춰 item 단가/금액 컬럼 수정 (unit_price_value, amount_value)\n    let allRequests: any[] | null = null\n    let baseError: any = null\n\n\n    const firstTry = await this.supabase\n      .from('purchase_requests')\n      .select('*')\n      .order('request_date', { ascending: false })\n      .limit(100) // 최적화: 100개로 제한\n\n\n    if (firstTry.error) {\n      // 관계 조회 실패 시 최소 컬럼으로 재시도하여 리스트 자체는 표시되도록 함\n      baseError = firstTry.error\n      const fallback = await this.supabase\n        .from('purchase_requests')\n        .select('*')\n        .order('request_date', { ascending: false })\n        .limit(100) // 최적화: 100개로 제한\n      if (fallback.error) {\n        // Fallback query also failed - will return empty array\n        return []\n      }\n      allRequests = fallback.data || []\n    } else {\n      allRequests = firstTry.data || []\n    }\n    \n    console.log('📊 전체 조회된 발주요청 개수:', allRequests.length)\n    console.log('📊 최근 5개 발주요청:', allRequests.slice(0, 5).map(item => ({\n      id: item.id,\n      purchase_order_number: item.purchase_order_number,\n      request_date: item.request_date,\n      created_at: item.created_at,\n      middle_manager_status: item.middle_manager_status,\n      final_manager_status: item.final_manager_status\n    })))\n\n    // 클라이언트 사이드에서 역할별 필터링\n    let filteredData = allRequests || []\n\n    // 발주 리스트와 동일한 필터링 로직 사용 - 승인 대기인 항목만\n    // pending, 대기, 빈문자열, null 모두 대기로 처리\n    const isPending = (status: any) => (\n      status === 'pending' || status === '대기' || status === '' || status === null || status === undefined\n    )\n\n    // 발주 리스트의 pending 탭과 동일한 조건: 중간승인자나 최종승인자 중 하나라도 pending이면 승인대기\n    logger.debug('🔍 승인대기 필터링 전 데이터', {\n      employeeName: employee.name,\n      employeeRoles: this.parseRoles(employee.purchase_role),\n      totalRequests: allRequests?.length || 0,\n      sampleData: allRequests?.slice(0, 3).map(item => ({\n        id: item.id,\n        purchase_order_number: item.purchase_order_number,\n        middle_manager_status: item.middle_manager_status,\n        final_manager_status: item.final_manager_status,\n        vendor_name: item.vendor_name\n      })) || []\n    })\n    \n    filteredData = filteredData.filter(item => {\n      const middlePending = isPending(item.middle_manager_status)\n      const finalPending = isPending(item.final_manager_status)\n      \n      // 반려된 경우는 제외\n      const middleRejected = item.middle_manager_status === 'rejected'\n      const finalRejected = item.final_manager_status === 'rejected'\n      \n      if (middleRejected || finalRejected) return false\n      \n      // 중간승인 대기 또는 최종승인 대기\n      const shouldInclude = middlePending || finalPending\n      \n      console.log('✅ 승인대기 항목 필터링', {\n        id: item.id,\n        purchase_order_number: item.purchase_order_number,\n        middle_manager_status: item.middle_manager_status,\n        final_manager_status: item.final_manager_status,\n        middlePending,\n        finalPending,\n        shouldInclude\n      })\n      \n      return shouldInclude\n    })\n    \n    logger.debug('🔍 승인대기 필터링 후 데이터', {\n      filteredCount: filteredData.length,\n      filteredItems: filteredData.map(item => ({\n        id: item.id,\n        purchase_order_number: item.purchase_order_number,\n        middle_manager_status: item.middle_manager_status,\n        final_manager_status: item.final_manager_status\n      }))\n    })\n    \n    // 역할이 있는 사용자만 승인 대기 항목을 볼 수 있음\n    if (roles.length === 0) {\n      return []\n    }\n\n    // 역할별 권한에 따른 추가 필터링 (app_admin이 최우선)\n    let roleFilteredData = filteredData\n    \n    if (roles.includes('app_admin')) {\n      // app_admin은 모든 승인 대기 항목 볼 수 있음 (필터링 없음)\n      logger.debug('🔑 app_admin 권한으로 모든 승인대기 항목 표시', {\n        totalItems: roleFilteredData.length\n      })\n    } else if (roles.includes('middle_manager')) {\n      // 중간승인자: 중간승인 대기 항목만\n      roleFilteredData = filteredData.filter(item => {\n        const middlePending = isPending(item.middle_manager_status)\n        return middlePending\n      })\n      logger.debug('🔑 middle_manager 권한으로 중간승인 대기 항목만 표시', {\n        beforeFilter: filteredData.length,\n        afterFilter: roleFilteredData.length\n      })\n    } else if (roles.includes('final_approver') || roles.includes('ceo')) {\n      // 최종승인자: 중간승인 완료 + 최종승인 대기 항목만\n      roleFilteredData = filteredData.filter(item => {\n        const middleApproved = item.middle_manager_status === 'approved'\n        const finalPending = isPending(item.final_manager_status)\n        return middleApproved && finalPending\n      })\n      logger.debug('🔑 final_approver/ceo 권한으로 최종승인 대기 항목만 표시', {\n        beforeFilter: filteredData.length,\n        afterFilter: roleFilteredData.length\n      })\n    } else if (roles.includes('raw_material_manager') || roles.includes('consumable_manager')) {\n      // 원자재/소모품 매니저: 최종승인자와 동일한 권한\n      roleFilteredData = filteredData.filter(item => {\n        const middleApproved = item.middle_manager_status === 'approved'\n        const finalPending = isPending(item.final_manager_status)\n        return middleApproved && finalPending\n      })\n      logger.debug('🔑 material_manager 권한으로 최종승인 대기 항목만 표시', {\n        beforeFilter: filteredData.length,\n        afterFilter: roleFilteredData.length\n      })\n    } else if (roles.includes('lead buyer')) {\n      // 구매담당자: 최종승인 완료 + 구매 대기 항목만\n      roleFilteredData = filteredData.filter(item => {\n        const finalApproved = item.final_manager_status === 'approved'\n        const purchasePending = isPending(item.purchase_status)\n        return finalApproved && purchasePending\n      })\n      logger.debug('🔑 lead buyer 권한으로 구매 대기 항목만 표시', {\n        beforeFilter: filteredData.length,\n        afterFilter: roleFilteredData.length\n      })\n    } else {\n      // 기타 역할은 승인 권한 없음\n      roleFilteredData = []\n      logger.debug('🔑 승인 권한 없는 역할', {\n        roles,\n        result: 'empty'\n      })\n    }\n    \n    // 최종 필터링된 데이터 사용\n    filteredData = roleFilteredData\n    \n    console.log('📋 품목 정보 조회 시작', {\n      filteredDataCount: filteredData.length,\n      filteredDataIds: filteredData.map(item => ({\n        id: item.id,\n        purchase_order_number: item.purchase_order_number\n      }))\n    })\n\n    // 품목 정보를 별도로 조회하여 추가\n    const enhancedData = await Promise.all(\n      filteredData.map(async (item) => {\n        // 각 발주요청에 대해 품목 정보 조회\n        const { data: items } = await this.supabase\n          .from('purchase_request_items')\n          .select('*')\n          .eq('purchase_request_id', item.id)\n\n        // 업체 정보 조회\n        let vendor_name = item.vendor_name\n        if (!vendor_name && item.vendor_id) {\n          const { data: vendor } = await this.supabase\n            .from('vendors')\n            .select('vendor_name')\n            .eq('id', item.vendor_id)\n            .single()\n          vendor_name = vendor?.vendor_name\n        }\n\n        const purchase_request_items = items || []\n        const total_amount = purchase_request_items.reduce((sum: number, i: any) => {\n          const amount = Number(i?.amount_value) || (Number(i?.quantity) || 0) * (Number(i?.unit_price_value) || 0)\n          return sum + amount\n        }, 0)\n\n        return {\n          ...item,\n          vendor_name,\n          purchase_request_items,\n          total_amount\n        }\n      })\n    )\n    \n    console.log('📋 품목 정보 조회 완료', {\n      enhancedDataCount: enhancedData.length,\n      enhancedDataSummary: enhancedData.map(item => ({\n        id: item.id,\n        purchase_order_number: item.purchase_order_number,\n        itemsCount: item.purchase_request_items?.length || 0,\n        total_amount: item.total_amount\n      }))\n    })\n\n    return enhancedData\n  }\n\n  // 빠른 액션 버튼 데이터\n  async getQuickActions(employee: Employee): Promise<QuickAction[]> {\n    const roles = this.parseRoles(employee.purchase_role)\n\n    const actions: QuickAction[] = []\n\n    // 승인 권한이 있는 경우\n    if (roles.includes('app_admin') || roles.includes('middle_manager') || roles.includes('final_approver') || roles.includes('ceo')) {\n      const pendingCount = await this.getPendingCount(employee, roles)\n      if (pendingCount > 0) {\n        actions.push({\n          id: 'approve',\n          type: 'approve',\n          label: '승인 대기',\n          description: `${pendingCount}건의 승인 대기 중`,\n          count: pendingCount,\n          color: 'red'\n        })\n      }\n    }\n\n    // 구매 권한이 있는 경우\n    if (roles.includes('lead buyer') || roles.includes('lead buyer')) {\n      const { count: purchaseCount } = await this.supabase\n        .from('purchase_requests')\n        .select('id', { count: 'exact', head: true })\n        .eq('final_manager_status', 'approved')\n        .eq('purchase_status', 'pending')\n\n      if (purchaseCount && purchaseCount > 0) {\n        actions.push({\n          id: 'purchase',\n          type: 'purchase',\n          label: '구매 처리',\n          description: `${purchaseCount}건의 구매 대기 중`,\n          count: purchaseCount,\n          color: 'yellow'\n        })\n      }\n    }\n\n    return actions\n  }\n\n  // 오늘 요약 정보\n  async getTodaySummary(employee: Employee) {\n    const today = new Date().toISOString().split('T')[0]\n    const tomorrow = new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString().split('T')[0]\n\n    const [approvedResult, requestedResult, receivedResult] = await Promise.all([\n      // 오늘 내가 승인한 건수\n      this.supabase\n        .from('purchase_requests')\n        .select('id', { count: 'exact', head: true })\n        .gte('updated_at', today)\n        .lt('updated_at', tomorrow)\n        .or('middle_manager_status.eq.approved,final_manager_status.eq.approved'),\n\n      // 오늘 내가 요청한 건수\n      this.supabase\n        .from('purchase_requests')\n        .select('id', { count: 'exact', head: true })\n        .eq('requester_name', employee.name)\n        .gte('created_at', today)\n        .lt('created_at', tomorrow),\n\n      // 오늘 입고 처리한 건수\n      this.supabase\n        .from('purchase_requests')\n        .select('id', { count: 'exact', head: true })\n        .eq('is_received', true)\n        .gte('received_at', today)\n        .lt('received_at', tomorrow)\n    ])\n\n    return {\n      approved: approvedResult.count || 0,\n      requested: requestedResult.count || 0,\n      received: receivedResult.count || 0\n    }\n  }\n\n  // 내 구매/입고 상태 확인\n  async getMyPurchaseStatus(employee: Employee): Promise<{ waitingPurchase: PurchaseRequestWithDetails[], waitingDelivery: PurchaseRequestWithDetails[], recentCompleted: PurchaseRequestWithDetails[] }> {\n    \n    // name이 없으면 email 사용\n    const requesterName = employee.name || employee.email\n    \n    const sevenDaysAgo = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString()\n\n    // 먼저 모든 내 요청을 가져온 다음 클라이언트에서 필터링\n    const myRequests = await this.supabase\n      .from('purchase_requests')\n      .select('*,vendors(vendor_name),purchase_request_items(item_name,quantity,specification,amount_value)')\n      .eq('requester_name', requesterName)\n      .order('created_at', { ascending: false })\n      .limit(100)\n\n    if (myRequests.error) {\n      logger.error('getMyPurchaseStatus 에러', myRequests.error)\n      return {\n        waitingPurchase: [],\n        waitingDelivery: [],\n        recentCompleted: []\n      }\n    }\n\n    const allMyRequests = myRequests.data || []\n    \n\n    // 클라이언트 사이드 필터링 (PurchaseListMain 구매/입고 탭과 동일한 로직)\n    \n    const waitingPurchase = allMyRequests.filter(item => {\n      // 구매 대기: 구매/발주 요청 카테고리 + 결제 미완료 + 선진행(승인무관) OR 일반&최종승인\n      // payment_category를 trim()하여 공백 처리 및 대소문자 무시\n      const categoryNormalized = (item.payment_category || '').trim().replace(/\\s+/g, '')\n      const isPurchaseRequest = ['구매요청', '발주요청'].includes(categoryNormalized)\n      const notPaid = !item.is_payment_completed\n      const isSeonJin = (item.progress_type || '').includes('선진행')\n      \n      \n      // 선진행은 승인 상태와 무관하게 구매 대기\n      if (isPurchaseRequest && notPaid && isSeonJin) {\n        return true\n      }\n      \n      // 일반은 최종 승인 완료되어야 구매 대기\n      const isIlban = (item.progress_type || '').includes('일반') || !item.progress_type || item.progress_type === ''\n      const finalApproved = item.final_manager_status === 'approved'\n      \n      return isPurchaseRequest && notPaid && isIlban && finalApproved\n    }).slice(0, 10)\n\n\n    const waitingDelivery = allMyRequests.filter(item => {\n      // 입고 탭 로직: 입고 미완료 + 선진행(승인무관) OR 최종승인\n      const notReceived = !item.is_received\n      const isSeonJin = (item.progress_type || '').includes('선진행')\n      \n      // 선진행은 승인 상태와 무관하게 입고 대기\n      if (notReceived && isSeonJin) {\n        return true\n      }\n      \n      // 일반은 최종 승인 완료되어야 입고 대기\n      const finalApproved = item.final_manager_status === 'approved'\n      \n      return notReceived && finalApproved\n    }).slice(0, 10)\n\n\n    const recentCompleted = allMyRequests.filter(item => {\n      // 입고 완료 && 7일 이내\n      if (item.is_received !== true) return false\n      if (!item.received_at) return false\n      const receivedDate = new Date(item.received_at)\n      const sevenDaysAgoDate = new Date(sevenDaysAgo)\n      return receivedDate >= sevenDaysAgoDate\n    }).slice(0, 10)\n\n\n    return {\n      waitingPurchase: waitingPurchase,\n      waitingDelivery: waitingDelivery,\n      recentCompleted: recentCompleted\n    }\n  }\n\n  // 원클릭 승인 API\n  async quickApprove(requestId: string, employee: Employee): Promise<{success: boolean, error?: string}> {\n    \n    try {\n      const roles = this.parseRoles(employee.purchase_role)\n\n      // 먼저 현재 요청의 상태를 확인\n      const { data: request } = await this.supabase\n        .from('purchase_requests')\n        .select('middle_manager_status, final_manager_status')\n        .eq('id', requestId)\n        .single()\n\n      if (!request) {\n        return { success: false, error: '요청을 찾을 수 없습니다.' }\n      }\n      \n\n      let updateData: any = {}\n\n      // pending, 대기, null, 빈 문자열 모두 대기 상태로 간주\n      const isPending = (status: any) => (\n        status === 'pending' || status === '대기' || status === '' || status === null || status === undefined\n      )\n\n      // app_admin은 현재 필요한 승인 단계를 처리\n      if (roles.includes('app_admin')) {\n        if (isPending(request.middle_manager_status)) {\n          updateData = {\n            middle_manager_status: 'approved'\n          }\n        } else if (request.middle_manager_status === 'approved' && isPending(request.final_manager_status)) {\n          updateData = {\n            final_manager_status: 'approved'\n          }\n        }\n      } else if (roles.includes('middle_manager')) {\n        if (isPending(request.middle_manager_status)) {\n          updateData = {\n            middle_manager_status: 'approved'\n          }\n        }\n      } else if (roles.includes('final_approver') || roles.includes('ceo')) {\n        if (request.middle_manager_status === 'approved' && isPending(request.final_manager_status)) {\n          updateData = {\n            final_manager_status: 'approved'\n          }\n        }\n      } else if (roles.includes('raw_material_manager') || roles.includes('consumable_manager')) {\n        // raw_material_manager와 consumable_manager도 최종 승인 권한이 있음\n        if (request.middle_manager_status === 'approved' && isPending(request.final_manager_status)) {\n          updateData = {\n            final_manager_status: 'approved'\n          }\n        }\n      }\n\n      // updateData가 비어있으면 승인할 단계가 없음\n      if (Object.keys(updateData).length === 0) {\n        return { success: false, error: '승인할 수 있는 상태가 아닙니다.' }\n      }\n      \n\n      const { data: updatedData, error } = await this.supabase\n        .from('purchase_requests')\n        .update(updateData)\n        .eq('id', requestId)\n        .select()\n        .single()\n\n      if (error) {\n        // Error details are handled by the caller\n        throw error\n      }\n\n      return { success: true }\n    } catch (error) {\n      return { success: false, error: (error as Error).message }\n    }\n  }\n\n  // Helper methods\n  private async getPendingCount(employee: Employee, roles: string[]): Promise<number> {\n    // 공통: '대기', null, 빈 문자열도 대기 상태로 간주\n    const pendingClause = (col: string) => (\n      `${col}.in.(pending,대기),${col}.is.null`\n    )\n\n    // 역할별 카운트 쿼리 구성\n    if (roles.includes('app_admin')) {\n      // 1) 중간 승인 대기 + 2) 최종 승인 대기(중간 승인 완료) + 3) 구매 대기(최종 승인 완료)\n      const [mid, fin, pur] = await Promise.all([\n        this.supabase\n          .from('purchase_requests')\n          .select('id', { count: 'exact', head: true })\n          .or(`middle_manager_status.in.(pending,대기),middle_manager_status.is.null`),\n        this.supabase\n          .from('purchase_requests')\n          .select('id', { count: 'exact', head: true })\n          .eq('middle_manager_status', 'approved')\n          .or(`final_manager_status.in.(pending,대기),final_manager_status.is.null`),\n        this.supabase\n          .from('purchase_requests')\n          .select('id', { count: 'exact', head: true })\n          .eq('final_manager_status', 'approved')\n          .or(`purchase_status.in.(pending,대기),purchase_status.is.null`)\n      ])\n\n      const total = (mid.count || 0) + (fin.count || 0) + (pur.count || 0)\n      return total\n    }\n\n    if (roles.includes('middle_manager')) {\n      const { count, error } = await this.supabase\n        .from('purchase_requests')\n        .select('id', { count: 'exact', head: true })\n        .or(`middle_manager_status.in.(pending,대기),middle_manager_status.is.null`)\n\n      if (error) {\n        // Count error for middle_manager - will use 0\n        return 0\n      }\n      return count || 0\n    }\n\n    if (roles.includes('final_approver') || roles.includes('ceo')) {\n      const { count, error } = await this.supabase\n        .from('purchase_requests')\n        .select('id', { count: 'exact', head: true })\n        .eq('middle_manager_status', 'approved')\n        .or(`final_manager_status.in.(pending,대기),final_manager_status.is.null`)\n\n      if (error) {\n        // Count error for final_approver/ceo - will use 0\n        return 0\n      }\n      return count || 0\n    }\n\n    if (roles.includes('lead buyer')) {\n      const { count, error } = await this.supabase\n        .from('purchase_requests')\n        .select('id', { count: 'exact', head: true })\n        .eq('final_manager_status', 'approved')\n        .or(`purchase_status.in.(pending,대기),purchase_status.is.null`)\n\n      if (error) {\n        // Count error for lead buyer - will use 0\n        return 0\n      }\n      return count || 0\n    }\n\n    return 0\n  }\n\n  private async getUrgentCount(employee: Employee, roles: string[]): Promise<number> {\n    // 역할이 없으면 긴급 요청 카운트도 0\n    if (roles.length === 0) {\n      return 0\n    }\n\n    const threeDaysAgo = new Date(Date.now() - 3 * 24 * 60 * 60 * 1000).toISOString()\n    \n    let query = this.supabase\n      .from('purchase_requests')\n      .select('id', { count: 'exact', head: true })\n      .lt('created_at', threeDaysAgo)\n\n    if (roles.includes('app_admin')) {\n      query = query.or('middle_manager_status.eq.pending,final_manager_status.eq.pending,purchase_status.eq.pending')\n    } else if (roles.includes('middle_manager')) {\n      query = query.eq('middle_manager_status', 'pending')\n    } else if (roles.includes('final_approver') || roles.includes('ceo')) {\n      query = query\n        .eq('middle_manager_status', 'approved')\n        .eq('final_manager_status', 'pending')\n    } else if (roles.includes('lead buyer')) {\n      query = query\n        .eq('final_manager_status', 'approved')\n        .eq('purchase_status', 'pending')\n    } else {\n      return 0\n    }\n\n    const { count } = await query\n    return count || 0\n  }\n\n  private async getTodayActionsCount(employee: Employee, today: string): Promise<number> {\n    const tomorrow = new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString().split('T')[0]\n    \n    const { count } = await this.supabase\n      .from('purchase_requests')\n      .select('id', { count: 'exact', head: true })\n      .gte('updated_at', today)\n      .lt('updated_at', tomorrow)\n      .or(`middle_manager_id.eq.${employee.id},final_manager_id.eq.${employee.id}`)\n\n    return count || 0\n  }\n\n  // 전체 입고대기 건수 조회 (권한에 관계없이 전체 조회)\n  async getTotalDeliveryWaitingCount(): Promise<number> {\n    const { count } = await this.supabase\n      .from('purchase_requests')\n      .select('id', { count: 'exact', head: true })\n      .eq('is_received', false)\n      .or('is_payment_completed.eq.true,progress_type.ilike.%선진행%')\n\n    return count || 0\n  }\n\n  private calculatePriority(request: any): 'high' | 'medium' | 'low' {\n    const daysPending = Math.floor((Date.now() - new Date(request.created_at).getTime()) / (1000 * 60 * 60 * 24))\n    \n    if (daysPending >= 7) return 'high'\n    if (daysPending >= 5) return 'medium'\n    return 'low'\n  }\n\n  private getUrgentReason(request: any, roles: string[]): 'overdue_approval' | 'delivery_delay' | 'payment_pending' {\n    if (roles.includes('middle_manager') && request.middle_manager_status === 'pending') {\n      return 'overdue_approval'\n    }\n    if ((roles.includes('final_approver') || roles.includes('ceo')) && request.final_manager_status === 'pending') {\n      return 'overdue_approval'\n    }\n    if (!request.is_received) {\n      return 'delivery_delay'\n    }\n    return 'payment_pending'\n  }\n\n  private calculateProgress(request: any): number {\n    let progress = 0\n    \n    if (request.middle_manager_status === 'approved') progress += 25\n    if (request.final_manager_status === 'approved') progress += 25\n    if (request.is_payment_completed) progress += 25\n    if (request.is_received) progress += 25\n    \n    return progress\n  }\n\n  private getCurrentStep(request: any): 'approval' | 'purchase' | 'delivery' | 'payment' | 'completed' {\n    if (request.is_received) return 'completed'\n    if (request.is_payment_completed) return 'delivery'\n    if (request.final_manager_status === 'approved') return 'purchase'\n    return 'approval'\n  }\n\n  private getNextAction(request: any): string {\n    if (request.middle_manager_status === 'pending') return '중간 승인 대기 중'\n    if (request.final_manager_status === 'pending') return '최종 승인 대기 중'\n    if (!request.is_payment_completed) return '구매 처리 대기 중'\n    if (!request.is_received) return '입고 대기 중'\n    return '완료'\n  }\n\n  private estimateCompletion(request: any): string {\n    const created = new Date(request.created_at)\n    const today = new Date()\n    const daysPassed = Math.floor((today.getTime() - created.getTime()) / (1000 * 60 * 60 * 24))\n    \n    // 평균 처리 시간을 기반으로 예상 완료일 계산\n    let estimatedDays = 7 // 기본 7일\n    if (request.progress_type === '긴급') estimatedDays = 3\n    \n    const estimatedCompletion = new Date(created.getTime() + estimatedDays * 24 * 60 * 60 * 1000)\n    return estimatedCompletion.toLocaleDateString('ko-KR')\n  }\n\n  // lead buyer를 위한 미다운로드 발주서 목록 조회\n  async getUndownloadedOrders(employee: Employee): Promise<PurchaseRequestWithDetails[]> {\n    const roles = this.parseRoles(employee.purchase_role)\n    \n    // lead buyer 또는 \"lead buyer\" (공백 포함) 권한 체크\n    if (!roles.includes('lead buyer') && !roles.includes('lead buyer')) {\n      return []\n    }\n\n    // 먼저 모든 발주서를 가져온 다음 클라이언트에서 필터링\n    const { data, error } = await this.supabase\n      .from('purchase_requests')\n      .select('*,purchase_request_items(id,item_name,specification,quantity,unit_price_value,amount_value)')\n      .order('created_at', { ascending: false })\n      .limit(100)\n\n    if (error) {\n      logger.error('Failed to fetch undownloaded orders', error)\n      return []\n    }\n\n    // 클라이언트 사이드 필터링\n    // 조건: (선진행이거나 최종승인 완료) AND (is_po_download가 false 또는 null)\n    const filteredData = (data || []).filter(item => {\n      // 다운로드 가능 조건 체크\n      const isDownloadable = item.progress_type === '선진행' || \n        (item.middle_manager_status === 'approved' && item.final_manager_status === 'approved')\n      \n      // 아직 다운로드 안 된 것만\n      const notDownloaded = !item.is_po_download || item.is_po_download === false || item.is_po_download === null\n      \n      return isDownloadable && notDownloaded\n    })\n\n    // 오래된 순으로 정렬 (created_at 기준 오름차순)\n    filteredData.sort((a, b) => new Date(a.created_at).getTime() - new Date(b.created_at).getTime())\n\n    return filteredData.slice(0, 10) // 상위 10개만 반환\n  }\n}\n\nexport const dashboardService = new DashboardService()","import React, { useState, useEffect } from 'react'\nimport { \n  Dialog, \n  DialogContent\n} from '@/components/ui/dialog'\nimport { Button } from '@/components/ui/button'\nimport { \n  ShoppingCart, \n  Truck, \n  Package, \n  CheckCircle,\n  Clock,\n  ArrowRight,\n  X,\n  CheckCircle2\n} from 'lucide-react'\nimport { useNavigate } from 'react-router-dom'\nimport { createClient } from '@/lib/supabase/client'\nimport { toast } from 'sonner'\nimport { logger } from '@/lib/logger'\n\ninterface PurchaseStatusModalProps {\n  isOpen: boolean\n  onClose: () => void\n  item: any\n  type: 'pending' | 'purchase' | 'delivery' | 'completed'\n  onRefresh?: () => void\n}\n\nexport default function PurchaseStatusModal({ \n  isOpen, \n  onClose, \n  item, \n  type,\n  onRefresh\n}: PurchaseStatusModalProps) {\n  const navigate = useNavigate()\n  const supabase = createClient()\n  const [currentUserRoles, setCurrentUserRoles] = useState<string[]>([])\n  const [processing, setProcessing] = useState(false)\n  const [localItem, setLocalItem] = useState(item)\n\n  // localItem을 item prop 변경 시 업데이트\n  useEffect(() => {\n    setLocalItem(item)\n  }, [item])\n\n  // Get current user roles\n  useEffect(() => {\n    const fetchUserRoles = async () => {\n      const { data: { user } } = await supabase.auth.getUser()\n      \n      if (user?.email) {\n        const { data: employee } = await supabase\n          .from('employees')\n          .select('purchase_role')\n          .eq('email', user.email)\n          .single()\n        \n        \n        if (employee?.purchase_role) {\n          // purchase_role이 이미 배열이면 그대로 사용, 문자열이면 split\n          const roles = Array.isArray(employee.purchase_role) \n            ? employee.purchase_role \n            : employee.purchase_role.split(',').map((r: string) => r.trim())\n          setCurrentUserRoles(roles)\n        } else {\n        }\n      }\n    }\n    fetchUserRoles()\n  }, [type])\n\n  if (!localItem) return null\n\n  const items = localItem.purchase_request_items || []\n  const totalAmount = items.reduce((sum: number, i: any) => {\n    return sum + (Number(i.amount_value) || 0)\n  }, 0)\n  const totalQuantity = items.reduce((sum: number, i: any) => {\n    return sum + (Number(i.quantity) || 0)\n  }, 0)\n  \n  // 디버깅\n  logger.debug('PurchaseStatusModal 디버깅', {\n    type,\n    currentUserRoles,\n    item: localItem.purchase_order_number,\n    showPurchaseButton: type === 'purchase',\n    showDeliveryButton: type === 'delivery',\n    hasAdminPermission: currentUserRoles.includes('app_admin'),\n    hasLeadBuyerPermission: currentUserRoles.includes('lead buyer'),\n    itemData: {\n      is_payment_completed: localItem.is_payment_completed,\n      is_received: localItem.is_received\n    }\n  })\n\n  const getTypeInfo = () => {\n    switch (type) {\n      case 'pending':\n        return {\n          icon: <Clock className=\"w-6 h-6 text-orange-600\" />,\n          title: '승인 대기',\n          status: '승인 처리 대기중',\n          color: 'bg-orange-50 text-orange-700 border-orange-200'\n        }\n      case 'purchase':\n        return {\n          icon: <ShoppingCart className=\"w-6 h-6 text-yellow-600\" />,\n          title: '구매 대기',\n          status: '구매 처리 대기중',\n          color: 'bg-yellow-50 text-yellow-700 border-yellow-200'\n        }\n      case 'delivery':\n        return {\n          icon: <Truck className=\"w-6 h-6 text-blue-600\" />,\n          title: '입고 대기',\n          status: '입고 처리 대기중',\n          color: 'bg-blue-50 text-blue-700 border-blue-200'\n        }\n      case 'completed':\n        return {\n          icon: <CheckCircle className=\"w-6 h-6 text-green-600\" />,\n          title: '처리 완료',\n          status: '모든 처리 완료',\n          color: 'bg-green-50 text-green-700 border-green-200'\n        }\n      default:\n        return {\n          icon: <Package className=\"w-6 h-6 text-gray-600\" />,\n          title: '상태 확인',\n          status: '상태 확인 필요',\n          color: 'bg-gray-50 text-gray-700 border-gray-200'\n        }\n    }\n  }\n\n  const typeInfo = getTypeInfo()\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent \n        className=\"overflow-hidden bg-white rounded-3xl shadow-2xl border-0\"\n        style={{ maxWidth: '1280px', width: '90vw', maxHeight: '50vh' }}\n        showCloseButton={false}\n      >\n        {/* Apple-style Header */}\n        <div className=\"relative px-6 pt-6 pb-4\">\n          <button\n            onClick={onClose}\n            className=\"absolute right-6 top-6 w-8 h-8 rounded-full bg-gray-100 hover:bg-gray-200 flex items-center justify-center transition-all duration-200\"\n          >\n            <X className=\"w-4 h-4 text-gray-500\" />\n          </button>\n          \n          <div className=\"pr-16\">\n            <div className=\"flex items-start gap-4 mb-2\">\n              <div className=\"w-10 h-10 rounded-2xl bg-blue-50 flex items-center justify-center flex-shrink-0\">\n                {typeInfo.icon}\n              </div>\n              <div className=\"min-w-0 flex-1\">\n                <h1 className=\"modal-title mb-1\">\n                  {localItem.purchase_order_number || 'PO번호 없음'}\n                </h1>\n                <p className=\"modal-subtitle\">{localItem.vendor_name || '업체명 없음'}</p>\n              </div>\n              <div className={`px-3 py-1.5 rounded-full badge-text ${typeInfo.color}`}>\n                {typeInfo.title}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Apple-style Content */}\n        <div className=\"overflow-y-auto max-h-[calc(50vh-160px)] px-6 pb-4 space-y-3\">\n          \n          {/* Dense Basic Information Grid */}\n          <div className=\"bg-gray-50 rounded-xl p-3 border border-gray-100\">\n            <div className=\"grid grid-cols-3 gap-x-4 gap-y-2 text-xs\">\n              <div><span className=\"text-gray-500\">요청자:</span> <span className=\"font-medium\">{localItem.requester_name}</span></div>\n              <div><span className=\"text-gray-500\">요청일:</span> <span className=\"font-medium\">{new Date(localItem.request_date || localItem.created_at).toLocaleDateString('ko-KR')}</span></div>\n              <div><span className=\"text-gray-500\">납기요청일:</span> <span className=\"font-medium\">{localItem.delivery_request_date ? new Date(localItem.delivery_request_date).toLocaleDateString('ko-KR') : '미지정'}</span></div>\n              \n              <div><span className=\"text-gray-500\">업체명:</span> <span className=\"font-medium\">{localItem.vendor_name || '-'}</span></div>\n              <div><span className=\"text-gray-500\">결제유형:</span> <span className=\"font-medium\">{localItem.payment_category || '일반'}</span></div>\n              <div><span className=\"text-gray-500\">진행구분:</span> <span className=\"font-medium\">{localItem.progress_type || '일반'}</span></div>\n              \n              <div><span className=\"text-gray-500\">프로젝트업체:</span> <span className=\"font-medium\">{localItem.project_vendor || '-'}</span></div>\n              <div><span className=\"text-gray-500\">판매주문번호:</span> <span className=\"font-medium\">{localItem.sales_order_number || '-'}</span></div>\n              <div><span className=\"text-gray-500\">배송지:</span> <span className=\"font-medium\">{localItem.shipping_address || '본사'}</span></div>\n              \n              <div><span className=\"text-gray-500\">통화:</span> <span className=\"font-medium\">{localItem.currency || 'KRW'}</span></div>\n              <div><span className=\"text-gray-500\">템플릿:</span> <span className=\"font-medium\">{localItem.po_template_type || '일반'}</span></div>\n              {localItem.revised_delivery_request_date && (\n                <div><span className=\"text-orange-500\">변경입고일:</span> <span className=\"font-medium text-orange-900\">{new Date(localItem.revised_delivery_request_date).toLocaleDateString('ko-KR')}</span></div>\n              )}\n            </div>\n          </div>\n\n\n          {/* Compact Items Table */}\n          <div className=\"bg-white rounded-xl border border-gray-100 overflow-hidden\">\n            <div className=\"bg-gray-50 px-3 py-2 border-b border-gray-100\">\n              <h3 className=\"text-sm font-medium text-gray-700\">주문 품목 ({items.length}개, 총 ₩{totalAmount.toLocaleString()})</h3>\n            </div>\n            <div className=\"overflow-x-auto\">\n              <table className=\"w-full text-xs table-fixed\">\n                <colgroup>\n                  <col className=\"w-[25%]\" />\n                  <col className=\"w-[20%]\" />\n                  <col className=\"w-[10%]\" />\n                  <col className=\"w-[15%]\" />\n                  <col className=\"w-[15%]\" />\n                  {(type === 'delivery' || type === 'purchase') && <col className=\"w-[15%]\" />}\n                </colgroup>\n                <thead className=\"bg-gray-50 border-b border-gray-100\">\n                  <tr>\n                    <th className=\"text-left p-2 font-medium text-gray-600\">품목명</th>\n                    <th className=\"text-left p-2 font-medium text-gray-600\">규격</th>\n                    <th className=\"text-right p-2 font-medium text-gray-600\">수량</th>\n                    <th className=\"text-right p-2 font-medium text-gray-600\">단가</th>\n                    <th className=\"text-right p-2 font-medium text-gray-600\">금액</th>\n                    {type === 'delivery' && <th className=\"text-center p-2 font-medium text-gray-600\">입고상태</th>}\n                    {type === 'purchase' && <th className=\"text-center p-2 font-medium text-gray-600\">구매상태</th>}\n                  </tr>\n                </thead>\n                <tbody className=\"divide-y divide-gray-100\">\n                  {items.map((pItem: any, index: number) => {\n                    const unitPrice = pItem.quantity > 0 ? (Number(pItem.amount_value) || 0) / pItem.quantity : 0\n                    return (\n                      <tr key={index} className=\"hover:bg-gray-50\">\n                        <td className=\"p-2\">\n                          <div className=\"font-medium text-gray-900\">{pItem.item_name || '품목명 없음'}</div>\n                          {pItem.remark && (\n                            <div className=\"text-xs text-amber-600 mt-1\">비고: {pItem.remark}</div>\n                          )}\n                        </td>\n                        <td className=\"p-2 text-gray-600\">{pItem.specification || '-'}</td>\n                        <td className=\"p-2 text-right font-medium\">{pItem.quantity || 0}</td>\n                        <td className=\"p-2 text-right\">₩{unitPrice.toLocaleString()}</td>\n                        <td className=\"p-2 text-right font-medium\">₩{(Number(pItem.amount_value) || 0).toLocaleString()}</td>\n                        {type === 'delivery' && (\n                          <td className=\"p-2 text-center\">\n                            {pItem.is_received ? (\n                              <span className=\"inline-flex items-center gap-1 bg-green-50 text-green-700 px-2 py-1 rounded text-xs border border-green-200\">\n                                <CheckCircle2 className=\"w-3 h-3\" />\n                                완료\n                              </span>\n                            ) : (\n                              (currentUserRoles.includes('app_admin') || \n                               currentUserRoles.includes('requester')) && (\n                                <Button\n                                  size=\"sm\"\n                                  onClick={async () => {\n                                    if (!confirm('이 품목을 입고완료 처리하시겠습니까?')) return\n                                    \n                                    try {\n                                      const { error } = await supabase\n                                        .from('purchase_request_items')\n                                        .update({ \n                                          is_received: true,\n                                          received_at: new Date().toISOString()\n                                        })\n                                        .eq('id', pItem.id)\n\n                                      if (error) throw error\n                                      \n                                      // 로컬 상태 업데이트\n                                      setLocalItem(prev => ({\n                                        ...prev,\n                                        purchase_request_items: prev.purchase_request_items?.map((item: any) =>\n                                          item.id === pItem.id ? { ...item, is_received: true, received_at: new Date().toISOString() } : item\n                                        ) || []\n                                      }))\n                                      \n                                      toast.success('입고완료 처리되었습니다.')\n                                      if (onRefresh) onRefresh()\n                                    } catch (error) {\n                                      toast.error('처리 중 오류가 발생했습니다.')\n                                    }\n                                  }}\n                                  className=\"bg-blue-600 hover:bg-blue-700 text-white h-6 px-2 text-xs\"\n                                >\n                                  입고완료\n                                </Button>\n                              )\n                            )}\n                          </td>\n                        )}\n                        {type === 'purchase' && (\n                          <td className=\"p-2 text-center\">\n                            {pItem.is_payment_completed ? (\n                              <span className=\"inline-flex items-center gap-1 bg-green-50 text-green-700 px-2 py-1 rounded text-xs border border-green-200\">\n                                <CheckCircle2 className=\"w-3 h-3\" />\n                                완료\n                              </span>\n                            ) : (\n                              (currentUserRoles.includes('app_admin') || \n                               currentUserRoles.includes('lead buyer')) && (\n                                <Button\n                                  size=\"sm\"\n                                  onClick={async () => {\n                                    if (!confirm('이 품목을 구매완료 처리하시겠습니까?')) return\n                                    \n                                    try {\n                                      const { error } = await supabase\n                                        .from('purchase_request_items')\n                                        .update({ \n                                          is_payment_completed: true,\n                                          payment_completed_at: new Date().toISOString()\n                                        })\n                                        .eq('id', pItem.id)\n\n                                      if (error) throw error\n                                      \n                                      // 로컬 상태 업데이트\n                                      setLocalItem((prev: any) => ({\n                                        ...prev,\n                                        purchase_request_items: prev.purchase_request_items?.map((item: any) =>\n                                          item.id === pItem.id \n                                            ? { ...item, is_payment_completed: true, payment_completed_at: new Date().toISOString() }\n                                            : item\n                                        )\n                                      }))\n                                      \n                                      toast.success('품목 구매완료 처리되었습니다.')\n                                      onRefresh?.()\n                                    } catch (error) {\n                                      toast.error('처리 중 오류가 발생했습니다.')\n                                    }\n                                  }}\n                                  className=\"bg-yellow-600 hover:bg-yellow-700 text-white px-2 py-1 text-xs font-medium\"\n                                >\n                                  구매완료\n                                </Button>\n                              )\n                            )}\n                          </td>\n                        )}\n                      </tr>\n                    )\n                  })}\n                </tbody>\n              </table>\n            </div>\n          </div>\n\n          {/* Compact Delivery Progress */}\n          {type === 'delivery' && items.length > 1 && (\n            <div className=\"bg-blue-50 rounded-xl p-3 border border-blue-100\">\n              {(() => {\n                const receivedCount = items.filter((i: any) => i.is_received).length\n                const totalCount = items.length\n                const percentage = (receivedCount / totalCount) * 100\n                \n                return (\n                  <div className=\"flex items-center gap-4\">\n                    <div className=\"text-sm font-medium text-blue-700\">입고 진행률</div>\n                    <div className=\"flex-1 bg-blue-200 rounded-full h-2\">\n                      <div \n                        className=\"bg-blue-600 h-2 rounded-full transition-all duration-500\"\n                        style={{ width: `${percentage}%` }}\n                      />\n                    </div>\n                    <div className=\"text-sm font-medium text-blue-700\">{receivedCount}/{totalCount} ({percentage.toFixed(0)}%)</div>\n                  </div>\n                )\n              })()}\n            </div>\n          )}\n\n        </div>\n        \n        {/* Apple-style Action Bar */}\n        <div className=\"sticky bottom-0 bg-white border-t border-gray-100 px-6 py-6\">\n          <div className=\"flex items-center justify-between gap-6\">\n            {/* Purchase Complete Button - for purchase type with permissions */}\n            {type === 'purchase' && \n             (currentUserRoles.includes('app_admin') || \n              currentUserRoles.includes('lead buyer')) && (\n              <Button\n                onClick={async () => {\n                  setProcessing(true)\n                  try {\n                    const { error } = await supabase\n                      .from('purchase_requests')\n                      .update({ \n                        is_payment_completed: true,\n                        payment_completed_at: new Date().toISOString()\n                      })\n                      .eq('id', localItem.id)\n\n                    if (error) throw error\n                    \n                    setLocalItem((prev: any) => ({\n                      ...prev,\n                      is_payment_completed: true,\n                      payment_completed_at: new Date().toISOString()\n                    }))\n                    \n                    toast.success('구매완료 처리되었습니다.')\n                    onRefresh?.()\n                  } catch (error) {\n                    toast.error('처리 중 오류가 발생했습니다.')\n                  } finally {\n                    setProcessing(false)\n                  }\n                }}\n                disabled={processing}\n                className=\"bg-gradient-to-r from-green-500 to-green-600 hover:from-green-600 hover:to-green-700 text-white px-8 py-4 rounded-2xl shadow-lg transition-all duration-200 modal-subtitle\"\n              >\n                {processing ? (\n                  <div className=\"w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin mr-3\" />\n                ) : (\n                  <CheckCircle2 className=\"w-5 h-5 mr-3\" />\n                )}\n                구매 완료 처리\n              </Button>\n            )}\n\n            <div className=\"flex items-center gap-4 ml-auto\">\n              <Button\n                variant=\"outline\"\n                onClick={() => {\n                  navigate(`/purchase?highlight=${localItem.id}`)\n                  onClose()\n                }}\n                className=\"border-gray-300 text-gray-700 hover:bg-gray-50 hover:text-gray-900 hover:border-gray-400 px-8 py-4 rounded-2xl modal-subtitle transition-all duration-200\"\n              >\n                발주 목록에서 보기\n                <ArrowRight className=\"w-5 h-5 ml-3\" />\n              </Button>\n              <Button \n                onClick={onClose} \n                className=\"bg-gray-900 hover:bg-gray-800 text-white px-10 py-4 rounded-2xl modal-subtitle transition-all duration-200 shadow-lg\"\n              >\n                완료\n              </Button>\n            </div>\n          </div>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}","\nimport { useState, useEffect, useCallback } from 'react'\nimport { createClient } from '@/lib/supabase/client'\nimport { dashboardService } from '@/services/dashboardService'\nimport { Button } from '@/components/ui/button'\nimport { Badge } from '@/components/ui/badge'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Dialog, DialogContent } from '@/components/ui/dialog'\nimport { Input } from '@/components/ui/input'\nimport { AlertTriangle, Clock, CheckCircle, ArrowRight, Eye, ThumbsUp, X, Package, Truck, ShoppingCart, Download, Search } from 'lucide-react'\nimport ExcelJS from 'exceljs'\n\n// Import modals\nimport PurchaseDetailModal from '@/components/purchase/PurchaseDetailModal'\nimport PurchaseStatusModal from '@/components/dashboard/PurchaseStatusModal'\nimport { toast } from 'sonner'\nimport type { DashboardData } from '@/types/purchase'\nimport { useNavigate } from 'react-router-dom'\n\nexport default function DashboardMain() {\n  const [data, setData] = useState<DashboardData | null>(null)\n  const [loading, setLoading] = useState(true)\n  const [actionLoading, setActionLoading] = useState<string | null>(null)\n  const [selectedApprovalId, setSelectedApprovalId] = useState<number | null>(null)\n  const [isModalOpen, setIsModalOpen] = useState(false)\n  const [currentUserRoles, setCurrentUserRoles] = useState<string[]>([])\n  const [undownloadedOrders, setUndownloadedOrders] = useState<any[]>([])\n  const [downloadingIds, setDownloadingIds] = useState<Set<string>>(new Set())\n  const [selectedOrder, setSelectedOrder] = useState<any>(null)\n  const [isOrderModalOpen, setIsOrderModalOpen] = useState(false)\n  \n  // 구매/입고 상세 모달 상태\n  const [selectedStatusItem, setSelectedStatusItem] = useState<any>(null)\n  const [statusModalType, setStatusModalType] = useState<'purchase' | 'delivery' | 'completed' | null>(null)\n  const [isStatusModalOpen, setIsStatusModalOpen] = useState(false)\n  \n  // 검색 상태\n  const [searchTerms, setSearchTerms] = useState({\n    undownloaded: '',\n    pending: '',\n    purchase: '',\n    delivery: ''\n  })\n  \n  const navigate = useNavigate()\n  const supabase = createClient()\n\n  const loadDashboardData = useCallback(async (showLoading = true) => {\n    try {\n      if (showLoading) {\n        setLoading(true)\n      } else {\n        // 로딩 표시 없이 새로고침할 때는 기존 data를 유지\n        // data가 null이 되는 것을 방지\n      }\n      \n      const supabase = createClient()\n      \n      const { data: { user }, error: authError } = await supabase.auth.getUser()\n      \n      if (authError) {\n        toast.error('인증 정보를 불러올 수 없습니다.')\n        return\n      }\n      \n      if (!user) {\n        toast.error('로그인이 필요합니다.')\n        return\n      }\n\n      const { data: employee, error: employeeError } = await supabase\n        .from('employees')\n        .select('*')\n        .eq('email', user.email)\n        .single()\n\n      if (employeeError || !employee) {\n        // employee가 없어도 기본값으로 대시보드 표시\n        const defaultEmployee = {\n          id: user.id,\n          name: user.email?.split('@')[0] || 'Guest User',  // 이메일에서 이름 추출\n          email: user.email || '',\n          purchase_role: null\n        }\n        \n        try {\n          const dashboardData = await dashboardService.getDashboardData(defaultEmployee as any)\n          setData(dashboardData)\n        } catch (err) {\n        }\n        \n        setLoading(false)\n        return\n      }\n\n\n      \n      try {\n        const dashboardData = await dashboardService.getDashboardData(employee)\n        \n        // 디버깅: 승인대기 데이터 확인\n        console.log('🔍 대시보드 데이터 로딩 완료', {\n          employeeName: employee.name,\n          employeeEmail: employee.email,\n          purchaseRole: employee.purchase_role,\n          pendingApprovalsCount: dashboardData.pendingApprovals?.length || 0,\n          pendingApprovals: dashboardData.pendingApprovals?.map(item => ({\n            id: item.id,\n            purchase_order_number: item.purchase_order_number,\n            middle_manager_status: item.middle_manager_status,\n            final_manager_status: item.final_manager_status,\n            vendor_name: item.vendor_name\n          })) || []\n        })\n        \n        // 전체 입고대기 건수 조회 추가\n        const _totalDeliveryWaiting = await dashboardService.getTotalDeliveryWaitingCount()\n        \n        \n        setData(dashboardData)\n      } catch (err) {\n        toast.error('대시보드 데이터를 불러오는데 실패했습니다.')\n      }\n      \n      // 사용자 role 설정\n      if (employee.purchase_role) {\n        const roles = Array.isArray(employee.purchase_role)\n          ? employee.purchase_role.map((r: any) => String(r).trim())\n          : String(employee.purchase_role)\n              .split(',')\n              .map((r: string) => r.trim())\n              .filter((r: string) => r.length > 0)\n        setCurrentUserRoles(roles)\n        \n        // lead buyer 또는 \"lead buyer\" (공백 포함)인 경우 미다운로드 항목 조회\n        if (roles.includes('lead buyer') || roles.includes('lead buyer')) {\n          const undownloaded = await dashboardService.getUndownloadedOrders(employee)\n          setUndownloadedOrders(undownloaded)\n        }\n      }\n    } catch (error) {\n    } finally {\n      if (showLoading) {\n        setLoading(false)\n      }\n    }\n  }, [])\n\n  useEffect(() => {\n    loadDashboardData()\n  }, [loadDashboardData])\n\n  const handleQuickApprove = async (requestId: string) => {\n    console.log('Quick approve:', {\n      requestId: requestId,\n      hasData: !!data,\n      hasEmployee: !!data?.employee,\n      employee: data?.employee\n    })\n    \n    if (!data?.employee) {\n      toast.error('사용자 정보를 찾을 수 없습니다.')\n      return\n    }\n\n    // 승인 확인 메시지\n    if (!confirm('정말로 승인하시겠습니까?')) {\n      return\n    }\n\n    setActionLoading(requestId)\n    \n    // Optimistic Update: 즉시 UI에서 제거\n    const originalData = data\n    setData(prev => {\n      if (!prev) return prev\n      return {\n        ...prev,\n        pendingApprovals: prev.pendingApprovals.filter(item => item.id !== requestId),\n        stats: {\n          ...prev.stats,\n          pending: Math.max(0, prev.stats.pending - 1)\n        }\n      }\n    })\n\n    try {\n      const result = await dashboardService.quickApprove(requestId, data.employee)\n      \n      if (result.success) {\n        toast.success('승인이 완료되었습니다.')\n        // 성공 시 백그라운드에서 데이터 동기화 (UI 깜빡임 없이)\n        setTimeout(() => {\n          loadDashboardData(false)  // false를 전달하여 로딩 화면 표시 안 함\n        }, 1000)\n      } else {\n        // 실패 시 원래 데이터로 롤백\n        setData(originalData)\n        toast.error(result.error || '승인 처리 중 오류가 발생했습니다.')\n      }\n    } catch (error) {\n      // 에러 시 원래 데이터로 롤백\n      setData(originalData)\n      toast.error('승인 처리 중 오류가 발생했습니다.')\n    } finally {\n      setActionLoading(null)\n    }\n  }\n\n  const handleStatusClick = (item: any, type: 'purchase' | 'delivery' | 'completed') => {\n    setSelectedStatusItem(item)\n    setStatusModalType(type)\n    setIsStatusModalOpen(true)\n  }\n\n  // 검색 필터링 함수\n  const filterItems = (items: any[], searchTerm: string) => {\n    if (!searchTerm.trim()) return items\n    \n    return items.filter(item => {\n      const orderNumber = item.purchase_order_number || ''\n      const vendorName = item.vendor_name || ''\n      const itemsText = (item.purchase_request_items || [])\n        .map((pItem: any) => pItem.item_name || '')\n        .join(' ')\n      \n      return [orderNumber, vendorName, itemsText]\n        .join(' ')\n        .toLowerCase()\n        .includes(searchTerm.toLowerCase())\n    })\n  }\n\n  const handleDownloadExcel = async (purchase: any) => {\n    try {\n      setDownloadingIds(prev => new Set(prev).add(purchase.id))\n      \n      // Excel 파일 생성 (FastPurchaseTable과 동일한 로직)\n      const workbook = new ExcelJS.Workbook()\n      const worksheet = workbook.addWorksheet('발주서')\n      \n      // 헤더 설정\n      worksheet.columns = [\n        { header: '발주번호', key: 'purchase_order_number', width: 20 },\n        { header: '업체명', key: 'vendor_name', width: 30 },\n        { header: '품목명', key: 'item_name', width: 40 },\n        { header: '규격', key: 'specification', width: 30 },\n        { header: '수량', key: 'quantity', width: 15 },\n        { header: '단가', key: 'unit_price', width: 20 },\n        { header: '금액', key: 'amount', width: 20 },\n        { header: '요청일', key: 'request_date', width: 15 },\n        { header: '진행상태', key: 'progress_type', width: 15 }\n      ]\n      \n      // 데이터 추가\n      const items = purchase.purchase_request_items || []\n      items.forEach((item: any) => {\n        worksheet.addRow({\n          purchase_order_number: purchase.purchase_order_number,\n          vendor_name: purchase.vendor_name || purchase.vendors?.vendor_name || '',\n          item_name: item.item_name || '',\n          specification: item.specification || '',\n          quantity: item.quantity || 0,\n          unit_price: item.unit_price_value || 0,\n          amount: item.amount_value || 0,\n          request_date: purchase.request_date || '',\n          progress_type: purchase.progress_type || ''\n        })\n      })\n      \n      // 스타일 적용\n      worksheet.getRow(1).font = { bold: true }\n      worksheet.getRow(1).fill = {\n        type: 'pattern',\n        pattern: 'solid',\n        fgColor: { argb: 'FFE0E0E0' }\n      }\n      \n      // 파일 다운로드\n      const buffer = await workbook.xlsx.writeBuffer()\n      const blob = new Blob([buffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' })\n      const url = window.URL.createObjectURL(blob)\n      const link = document.createElement('a')\n      link.href = url\n      link.download = `발주서_${purchase.purchase_order_number}_${new Date().toISOString().slice(0, 10)}.xlsx`\n      link.click()\n      window.URL.revokeObjectURL(url)\n      \n      // lead buyer인 경우 is_po_download를 true로 업데이트\n      if (currentUserRoles.includes('lead buyer') || currentUserRoles.includes('lead buyer')) {\n        await supabase\n          .from('purchase_requests')\n          .update({ is_po_download: true })\n          .eq('id', purchase.id)\n        \n        // UI에서 제거\n        setUndownloadedOrders(prev => prev.filter(item => item.id !== purchase.id))\n      }\n      \n      toast.success('발주서가 다운로드되었습니다.')\n    } catch (error) {\n      toast.error('다운로드 중 오류가 발생했습니다.')\n    } finally {\n      setDownloadingIds(prev => {\n        const newSet = new Set(prev)\n        newSet.delete(purchase.id)\n        return newSet\n      })\n    }\n  }\n\n  const getPriorityColor = (priority: 'high' | 'medium' | 'low') => {\n    switch (priority) {\n      case 'high': return 'bg-red-100 text-red-800 border-red-200'\n      case 'medium': return 'bg-yellow-100 text-yellow-800 border-yellow-200'\n      case 'low': return 'bg-green-100 text-green-800 border-green-200'\n      default: return 'bg-gray-100 text-gray-800 border-gray-200'\n    }\n  }\n\n  const getStepColor = (step: string) => {\n    switch (step) {\n      case 'approval': return 'bg-yellow-100 text-yellow-800'\n      case 'purchase': return 'bg-blue-100 text-blue-800'\n      case 'delivery': return 'bg-purple-100 text-purple-800'\n      case 'completed': return 'bg-green-100 text-green-800'\n      default: return 'bg-gray-100 text-gray-800'\n    }\n  }\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-screen bg-gray-50\">\n        <div className=\"text-center\">\n          <div className=\"w-12 h-12 border-3 border-hansl-500 border-t-transparent rounded-full animate-spin mx-auto\" />\n          <p className=\"mt-4 card-subtitle\">대시보드를 불러오고 있습니다...</p>\n        </div>\n      </div>\n    )\n  }\n\n  if (!data?.employee) {\n    return (\n      <div className=\"flex items-center justify-center h-screen bg-gray-50\">\n        <div className=\"text-center bg-white p-8 rounded-lg border border-gray-200\">\n          <h3 className=\"modal-subtitle mb-2\">사용자 정보를 찾을 수 없습니다</h3>\n          <p className=\"card-subtitle\">로그인을 다시 시도해주세요.</p>\n        </div>\n      </div>\n    )\n  }\n\n  // 권한 파싱 및 표시 여부 결정\n  const roles = Array.isArray(data.employee.purchase_role)\n    ? (data.employee.purchase_role as any[]).map((r: any) => String(r).trim())\n    : (data.employee.purchase_role\n        ? String(data.employee.purchase_role)\n            .split(',')\n            .map((r: string) => r.trim())\n            .filter((r: string) => r.length > 0)\n        : [])\n\n  const canSeeApprovalBox = roles.some((r: string) => ['middle_manager', 'final_approver', 'app_admin', 'raw_material_manager', 'consumable_manager'].includes(r))\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <div className=\"w-full px-4 lg:px-6\">\n        {/* 헤더 */}\n        <div className=\"mb-3\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h1 className=\"header-title\">대시보드</h1>\n              <p className=\"header-subtitle mt-0.5\">\n                {data.employee.name}님, 환영합니다. 📊\n              </p>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <Badge variant=\"outline\" className=\"badge-text\">\n                {new Date().toLocaleDateString('ko-KR', { \n                  month: 'long', \n                  day: 'numeric',\n                  weekday: 'short'\n                })}\n              </Badge>\n            </div>\n          </div>\n        </div>\n\n        {/* 긴급 알림 섹션 */}\n        {data.urgentRequests.length > 0 && (\n          <Card className=\"mb-3 border-red-200 bg-red-50\">\n            <CardHeader className=\"pb-2 pt-3\">\n              <CardTitle className=\"flex items-center gap-2 text-red-800 card-title\">\n                <AlertTriangle className=\"w-4 h-4\" />\n                긴급 처리 필요 ({data.urgentRequests.length}건)\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"p-3\">\n              <div className=\"flex gap-2 overflow-x-auto pb-2\">\n              {data.urgentRequests.slice(0, 5).map((request) => (\n                <div key={request.id} className=\"bg-white rounded-lg p-2 border border-red-200 min-w-[280px] flex-shrink-0\">\n                  <div className=\"flex items-center justify-between gap-2\">\n                    <div className=\"flex-1 min-w-0\">\n                      <div className=\"flex flex-wrap items-center gap-1 mb-1\">\n                        <Badge className={`${getPriorityColor(request.priority)} badge-text h-4 px-1`}>\n                          {request.priority === 'high' ? '높음' : request.priority === 'medium' ? '보통' : '낮음'}\n                        </Badge>\n                        <span className=\"card-subtitle truncate max-w-[120px]\">\n                          {request.vendor_name || '업체명 없음'}\n                        </span>\n                        <span className=\"card-date\">\n                          {request.daysOverdue}일 지연\n                        </span>\n                      </div>\n                      <div className=\"card-description\">\n                        <span>발주: {request.purchase_order_number || request.id.slice(0, 8)}</span>\n                        <span className=\"ml-1\">• {request.total_items}개</span>\n                      </div>\n                    </div>\n                    <div className=\"flex gap-1 shrink-0\">\n                      <Button\n                        size=\"sm\"\n                        variant=\"outline\"\n                        onClick={() => navigate(`/purchase?highlight=${request.id}`)}\n                        className=\"h-6 px-2 badge-text\"\n                      >\n                        <Eye className=\"w-3 h-3 mr-0.5\" />\n                        보기\n                      </Button>\n                      <Button\n                        size=\"sm\"\n                        onClick={() => handleQuickApprove(request.id)}\n                        disabled={actionLoading === request.id}\n                        className=\"bg-red-600 hover:bg-red-700 h-6 px-2 badge-text\"\n                      >\n                        <ThumbsUp className=\"w-3 h-3 mr-0.5\" />\n                        {actionLoading === request.id ? '처리중' : '승인'}\n                      </Button>\n                    </div>\n                  </div>\n                </div>\n              ))}\n              </div>\n            </CardContent>\n          </Card>\n        )}\n\n\n\n        {/* 통합 대시보드 그리드 */}\n        <div className=\"mb-2\">\n          <h2 className=\"section-title mb-2 flex items-center gap-1.5\">\n            <Package className=\"w-3.5 h-3.5 text-gray-600\" />\n            전체 현황\n          </h2>\n        </div>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-3\">\n          {/* Lead Buyer - 미다운로드 발주서 */}\n          {(currentUserRoles.includes('lead buyer') || currentUserRoles.includes('lead buyer')) && undownloadedOrders.length > 0 && (\n            <Card className=\"w-full col-span-1 row-span-2 border-gray-200 shadow-sm hover:shadow-md transition-shadow\">\n              <CardHeader className=\"py-3 px-4 bg-gray-50 border-b\">\n                <CardTitle className=\"section-title flex items-center justify-between\">\n                  <div className=\"flex items-center gap-2\">\n                    <Download className=\"w-4 h-4 text-orange-600\" />\n                    <span>미다운로드 발주서</span>\n                  </div>\n                  <Badge className=\"bg-orange-100 text-orange-700 border-orange-200 px-2 py-0.5\">\n                    {undownloadedOrders.length}\n                  </Badge>\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"p-4\">\n                <div className=\"space-y-3\">\n                  {/* 검색 입력 */}\n                  <div className=\"relative\">\n                    <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\n                    <Input\n                      placeholder=\"발주번호, 업체명, 품목으로 검색...\"\n                      value={searchTerms.undownloaded}\n                      onChange={(e) => setSearchTerms(prev => ({ ...prev, undownloaded: e.target.value }))}\n                      className=\"pl-10 h-8 text-xs\"\n                    />\n                  </div>\n                  \n                  {/* 항목 리스트 */}\n                  <div className=\"space-y-2 h-[36rem] overflow-y-auto\">\n                    {filterItems(undownloadedOrders, searchTerms.undownloaded).slice(0, 10).map((item) => {\n                      const items = item.purchase_request_items || []\n                      const firstItem = items[0] || {}\n                      const totalAmount = items.reduce((sum: number, i: any) => {\n                        return sum + (Number(i.amount_value) || 0)\n                      }, 0)\n                      const totalQty = items.reduce((sum: number, i: any) => {\n                        return sum + (Number(i.quantity) || 0)\n                      }, 0)\n                      const daysSince = Math.floor((Date.now() - new Date(item.created_at).getTime()) / (1000 * 60 * 60 * 24))\n                      const isAdvance = item.progress_type === '선진행'\n                      \n                      return (\n                        <div \n                          key={item.id} \n                          className={`border rounded-lg p-2 transition-all cursor-pointer hover:shadow-sm ${\n                            isAdvance ? 'bg-red-50 hover:bg-red-100 border-red-200' : 'bg-white hover:bg-gray-50 border-gray-200'\n                          }`}\n                          onClick={() => {\n                            setSelectedOrder(item)\n                            setIsOrderModalOpen(true)\n                          }}\n                        >\n                          <div className=\"flex items-center justify-between gap-2\">\n                            <div className=\"flex items-center gap-2 flex-1 min-w-0\">\n                              <span className=\"card-title\">\n                                {item.purchase_order_number || `PO-${item.id.slice(0, 8)}`}\n                              </span>\n                              <span className=\"card-subtitle truncate\">\n                                {item.vendor_name || '업체명 없음'}\n                              </span>\n                              <span className=\"card-description truncate\">\n                                {firstItem.item_name || '품목'} \n                                {items.length > 1 && (\n                                  <span className=\"text-gray-400\"> 외 {items.length - 1}건</span>\n                                )}\n                              </span>\n                              {daysSince > 3 && (\n                                <Badge variant=\"outline\" className=\"badge-text px-1.5 py-0 flex-shrink-0\">\n                                  {daysSince}일\n                                </Badge>\n                              )}\n                            </div>\n                            <div>\n                              <Button\n                                size=\"sm\"\n                                variant=\"outline\"\n                                className=\"h-7 px-2 badge-text border-orange-200 hover:bg-orange-50\"\n                                onClick={(e) => {\n                                  e.stopPropagation()\n                                  handleDownloadExcel(item)\n                                }}\n                                disabled={downloadingIds.has(item.id)}\n                              >\n                                {downloadingIds.has(item.id) ? (\n                                  <div className=\"w-3 h-3 border border-orange-600 border-t-transparent rounded-full animate-spin\" />\n                                ) : (\n                                  <>\n                                    <Download className=\"w-3 h-3 mr-1\" />\n                                    다운로드\n                                  </>\n                                )}\n                              </Button>\n                            </div>\n                          </div>\n                        </div>\n                      )\n                    })}\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          )}\n\n\n          {/* 승인 대기 (승인 권한자만 표시) */}\n          {canSeeApprovalBox && (\n            <Card className=\"w-full col-span-1 row-span-2\">\n              <CardHeader className=\"pb-2 pt-3\">\n                <div className=\"flex items-center justify-between\">\n                  <CardTitle className=\"section-title flex items-center gap-1.5\">\n                    <Clock className=\"w-3.5 h-3.5 text-orange-500\" />\n                    승인 대기\n                    {data.pendingApprovals.length > 0 && (\n                      <Badge variant=\"destructive\" className=\"badge-text h-4 px-1\">\n                        {data.pendingApprovals.length}\n                      </Badge>\n                    )}\n                  </CardTitle>\n                  {data.pendingApprovals.length > 0 && (\n                    <Button\n                      size=\"sm\"\n                      variant=\"ghost\"\n                      onClick={() => navigate('/purchase')}\n                      className=\"h-6 px-2\"\n                    >\n                      <ArrowRight className=\"w-3 h-3\" />\n                    </Button>\n                  )}\n                </div>\n              </CardHeader>\n              <CardContent className=\"p-3\">\n                {data.pendingApprovals.length === 0 ? (\n                  <div className=\"text-center py-4 text-gray-400\">\n                    <CheckCircle className=\"w-6 h-6 mx-auto mb-1\" />\n                    <p className=\"card-description\">대기 항목 없음</p>\n                  </div>\n                  ) : (\n                  <div className=\"space-y-3\">\n                    {/* 검색 입력 */}\n                    <div className=\"relative\">\n                      <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\n                      <Input\n                        placeholder=\"발주번호, 업체명, 품목으로 검색...\"\n                        value={searchTerms.pending}\n                        onChange={(e) => setSearchTerms(prev => ({ ...prev, pending: e.target.value }))}\n                        className=\"pl-10 h-8 text-xs\"\n                      />\n                    </div>\n                    \n                    {/* 항목 리스트 */}\n                    <div className=\"space-y-1.5 h-[36rem] overflow-y-auto\">\n                      {filterItems(data.pendingApprovals, searchTerms.pending).slice(0, 10).map((approval) => {\n                        const items = approval.purchase_request_items || []\n                        const firstItem = items[0] || {}\n                        const totalAmount = approval.total_amount || items.reduce((sum: number, i: any) => sum + (Number(i.amount_value) || 0), 0)\n                        const isAdvance = approval.progress_type === '선진행'\n                        \n                        return (\n                          <div \n                            key={approval.id} \n                            className={`border rounded-lg p-2 hover:shadow-sm transition-all cursor-pointer ${\n                              isAdvance ? 'bg-red-50 border-red-200' : 'hover:bg-orange-50/30'\n                            }`}\n                            onClick={(e) => {\n                              if ((e.target as HTMLElement).closest('button')) return\n                              setSelectedApprovalId(Number(approval.id))\n                              setIsModalOpen(true)\n                            }}\n                          >\n                            <div className=\"flex items-center justify-between gap-2\">\n                              <div className=\"flex items-center gap-2 flex-1 min-w-0\">\n                                <span className=\"card-title\">\n                                  {approval.purchase_order_number}\n                                </span>\n                                <span className=\"card-subtitle truncate\">{approval.vendor_name || '업체'}</span>\n                                <span className=\"card-description truncate\">\n                                  {firstItem.item_name || '품목'} {items.length > 1 && `외 ${items.length - 1}건`}\n                                </span>\n                              </div>\n                              <Button\n                                size=\"sm\"\n                                onClick={(e) => {\n                                  e.stopPropagation()\n                                  handleQuickApprove(approval.id)\n                                }}\n                                disabled={actionLoading === approval.id}\n                                className={`h-7 px-2 text-white badge-text shrink-0 ${\n                                  approval.middle_manager_status === 'approved' \n                                    ? 'bg-blue-600 hover:bg-blue-700' \n                                    : 'bg-green-600 hover:bg-green-700'\n                                }`}\n                              >\n                                {actionLoading === approval.id ? (\n                                  <div className=\"w-3 h-3 border border-white border-t-transparent rounded-full animate-spin\" />\n                                ) : (\n                                  <>\n                                    {approval.middle_manager_status === 'approved' ? '최종' : '1차'} 승인\n                                  </>\n                                )}\n                              </Button>\n                            </div>\n                          </div>\n                        )\n                      })}\n                    </div>\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          )}\n          \n\n          {/* 구매 대기중 - Lead Buyer만 표시 */}\n          {currentUserRoles.includes('lead buyer') && (\n            <Card className=\"w-full col-span-1 border-gray-200 shadow-sm hover:shadow-md transition-shadow\">\n              <CardHeader className=\"py-3 px-4 bg-gray-50 border-b\">\n                <CardTitle className=\"section-title flex items-center justify-between\">\n                  <div className=\"flex items-center gap-2\">\n                    <ShoppingCart className=\"w-4 h-4 text-yellow-600\" />\n                    <span>구매 대기</span>\n                  </div>\n                  {data.myPurchaseStatus && data.myPurchaseStatus.waitingPurchase && data.myPurchaseStatus.waitingPurchase.length > 0 && (\n                    <Badge className=\"bg-yellow-100 text-yellow-700 border-yellow-200 px-2 py-0.5\">\n                      {data.myPurchaseStatus.waitingPurchase.length}\n                    </Badge>\n                  )}\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"p-4\">\n                {!data.myPurchaseStatus || !data.myPurchaseStatus.waitingPurchase || data.myPurchaseStatus.waitingPurchase.length === 0 ? (\n                  <div className=\"text-center py-12 text-gray-400\">\n                    <ShoppingCart className=\"w-10 h-10 mx-auto mb-3 text-gray-300\" />\n                    <p className=\"card-subtitle\">구매 대기 항목이 없습니다</p>\n                  </div>\n                ) : (\n                  <div className=\"space-y-3\">\n                    {/* 검색 입력 */}\n                    <div className=\"relative\">\n                      <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\n                      <Input\n                        placeholder=\"발주번호, 업체명, 품목으로 검색...\"\n                        value={searchTerms.purchase}\n                        onChange={(e) => setSearchTerms(prev => ({ ...prev, purchase: e.target.value }))}\n                        className=\"pl-10 h-8 text-xs\"\n                      />\n                    </div>\n                    \n                    {/* 항목 리스트 */}\n                    <div className=\"space-y-2 h-[36rem] overflow-y-auto\">\n                      {filterItems(data.myPurchaseStatus.waitingPurchase, searchTerms.purchase).slice(0, 10).map((item) => {\n                        const items = item.purchase_request_items || []\n                        const firstItem = items[0]\n                        const totalAmount = items.reduce((sum: number, i: any) => sum + (Number(i.amount_value) || 0), 0)\n                        const isSeonJin = (item.progress_type || '').includes('선진행')\n                        \n                        return (\n                          <div \n                            key={item.id} \n                            className={`border rounded-lg p-3 transition-all hover:shadow-sm ${\n                              isSeonJin ? 'bg-red-50 hover:bg-red-100 border-red-200' : 'bg-white hover:bg-gray-50 border-gray-200'\n                            }`}\n                          >\n                            <div className=\"flex items-center justify-between gap-2\">\n                              <div \n                                className=\"flex items-center gap-2 flex-1 cursor-pointer\"\n                                onClick={() => handleStatusClick(item, 'purchase')}\n                              >\n                                <span className=\"card-title\">\n                                  {item.purchase_order_number || `PO-${item.id.slice(0, 8)}`}\n                                </span>\n                                <span className=\"card-subtitle truncate\">\n                                  {item.vendor_name || '업체명 없음'}\n                                </span>\n                                <span className=\"card-description truncate\">\n                                  {firstItem?.item_name || '품목'} \n                                  {items.length > 1 && (\n                                    <span className=\"text-gray-400\"> 외 {items.length - 1}건</span>\n                                  )}\n                                </span>\n                              </div>\n                              \n                              {/* 구매완료 버튼 - Lead Buyer, App Admin만 표시 */}\n                              {(currentUserRoles.includes('lead buyer') || \n                                currentUserRoles.includes('app_admin')) && !item.is_payment_completed && (\n                                <Button\n                                  size=\"sm\"\n                                  onClick={async (e) => {\n                                    e.stopPropagation()\n                                    if (!confirm('이 발주를 구매완료 처리하시겠습니까?')) return\n                                    \n                                    try {\n                                      const { error } = await supabase\n                                        .from('purchase_requests')\n                                        .update({ \n                                          is_payment_completed: true,\n                                          payment_completed_at: new Date().toISOString()\n                                        })\n                                        .eq('id', item.id)\n\n                                      if (error) throw error\n                                      \n                                      toast.success('구매완료 처리되었습니다.')\n                                      loadDashboardData(false) // 데이터 새로고침\n                                    } catch (error) {\n                                      toast.error('처리 중 오류가 발생했습니다.')\n                                    }\n                                  }}\n                                  className=\"bg-yellow-600 hover:bg-yellow-700 text-white h-7 px-2 badge-text shrink-0\"\n                                >\n                                  구매완료\n                                </Button>\n                              )}\n                              \n                              {/* 이미 구매완료된 경우 완료 표시 */}\n                              {item.is_payment_completed && (\n                                <div className=\"bg-green-100 text-green-700 px-2 py-1 rounded text-xs font-medium shrink-0\">\n                                  완료됨\n                                </div>\n                              )}\n                            </div>\n                          </div>\n                        )\n                      })}\n                    </div>\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          )}\n\n          {/* 입고 대기중 */}\n          <Card className=\"w-full col-span-1 border-gray-200 shadow-sm hover:shadow-md transition-shadow\">\n              <CardHeader className=\"py-3 px-4 bg-gray-50 border-b\">\n                <CardTitle className=\"section-title flex items-center justify-between\">\n                  <div className=\"flex items-center gap-2\">\n                    <Truck className=\"w-4 h-4 text-blue-600\" />\n                    <span>입고 대기</span>\n                  </div>\n                  {data.myPurchaseStatus.waitingDelivery.length > 0 && (\n                    <Badge className=\"bg-blue-100 text-blue-700 border-blue-200 px-2 py-0.5\">\n                      {data.myPurchaseStatus.waitingDelivery.length}\n                    </Badge>\n                  )}\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"p-4\">\n                {data.myPurchaseStatus.waitingDelivery.length === 0 ? (\n                  <div className=\"text-center py-12 text-gray-400\">\n                    <Truck className=\"w-10 h-10 mx-auto mb-3 text-gray-300\" />\n                    <p className=\"card-subtitle\">입고 대기 항목이 없습니다</p>\n                  </div>\n                ) : (\n                  <div className=\"space-y-3\">\n                    {/* 검색 입력 */}\n                    <div className=\"relative\">\n                      <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\n                      <Input\n                        placeholder=\"발주번호, 업체명, 품목으로 검색...\"\n                        value={searchTerms.delivery}\n                        onChange={(e) => setSearchTerms(prev => ({ ...prev, delivery: e.target.value }))}\n                        className=\"pl-10 h-8 text-xs\"\n                      />\n                    </div>\n                    \n                    {/* 항목 리스트 */}\n                    <div className=\"space-y-2 h-[36rem] overflow-y-auto\">\n                      {filterItems(data.myPurchaseStatus.waitingDelivery, searchTerms.delivery).slice(0, 10).map((item) => {\n                        const items = item.purchase_request_items || []\n                        const firstItem = items[0]\n                        const totalItems = items.length\n                        const receivedItems = items.filter((i: any) => i.is_received).length\n                        const progress = totalItems > 0 ? Math.round((receivedItems / totalItems) * 100) : 0\n                        const totalAmount = items.reduce((sum: number, i: any) => sum + (Number(i.amount_value) || 0), 0)\n                        const isSeonJin = (item.progress_type || '').includes('선진행')\n                        \n                        return (\n                          <div \n                            key={item.id} \n                            className={`border rounded-lg p-3 transition-all cursor-pointer hover:shadow-sm ${\n                              isSeonJin ? 'bg-red-50 hover:bg-red-100 border-red-200' : 'bg-white hover:bg-gray-50 border-gray-200'\n                            }`}\n                            onClick={() => handleStatusClick(item, 'delivery')}\n                          >\n                            <div className=\"flex items-center gap-2\">\n                              <span className=\"card-title\">\n                                {item.purchase_order_number || `PO-${item.id.slice(0, 8)}`}\n                              </span>\n                              <span className=\"card-subtitle truncate\">\n                                {item.vendor_name || '업체명 없음'}\n                              </span>\n                              <span className=\"card-description truncate\">\n                                {firstItem?.item_name || '품목'} \n                                {totalItems > 1 && (\n                                  <span className=\"text-gray-400\"> 외 {totalItems - 1}건</span>\n                                )}\n                              </span>\n                            </div>\n                          </div>\n                        )\n                      })}\n                    </div>\n                  </div>\n                )}\n              </CardContent>\n          </Card>\n\n        </div>\n\n        {/* 오늘의 요약 - 상단 통계에 통합 */}\n      </div>\n      \n      {/* 승인 상세보기 모달 */}\n      <PurchaseDetailModal\n        purchaseId={selectedApprovalId}\n        isOpen={isModalOpen}\n        onClose={() => {\n          setIsModalOpen(false)\n          setSelectedApprovalId(null)\n        }}\n        currentUserRoles={currentUserRoles}\n        onRefresh={() => {\n          loadDashboardData()\n          setIsModalOpen(false)\n          setSelectedApprovalId(null)\n        }}\n      />\n      \n      {/* 구매/입고 상태 상세보기 모달 */}\n      <PurchaseStatusModal\n          isOpen={isStatusModalOpen}\n          onClose={() => {\n            setIsStatusModalOpen(false)\n            setSelectedStatusItem(null)\n            setStatusModalType(null)\n          }}\n          item={selectedStatusItem}\n          type={statusModalType as any}\n          onRefresh={() => loadDashboardData(false)}\n      />\n\n      {/* Order Detail Modal - Apple-inspired Design */}\n      {isOrderModalOpen && selectedOrder && (\n        <Dialog open={isOrderModalOpen} onOpenChange={() => {\n          setIsOrderModalOpen(false)\n          setSelectedOrder(null)\n        }}>\n          <DialogContent \n            className=\"overflow-hidden bg-white rounded-3xl shadow-2xl border-0\"\n            style={{ maxWidth: '1280px', width: '90vw', maxHeight: '50vh' }}\n            showCloseButton={false}\n          >\n            {/* Apple-style Header */}\n            <div className=\"relative px-6 pt-6 pb-4\">\n              <button\n                onClick={() => {\n                  setIsOrderModalOpen(false)\n                  setSelectedOrder(null)\n                }}\n                className=\"absolute right-6 top-6 w-8 h-8 rounded-full bg-gray-100 hover:bg-gray-200 flex items-center justify-center transition-all duration-200\"\n              >\n                <X className=\"w-4 h-4 text-gray-500\" />\n              </button>\n              \n              <div className=\"pr-16\">\n                <div className=\"flex items-start gap-4 mb-2\">\n                  <div className=\"w-10 h-10 rounded-2xl bg-orange-50 flex items-center justify-center flex-shrink-0\">\n                    <Download className=\"w-6 h-6 text-orange-600\" />\n                  </div>\n                  <div className=\"min-w-0 flex-1\">\n                    <h1 className=\"modal-title mb-1\">\n                      {selectedOrder.purchase_order_number || 'PO번호 없음'}\n                    </h1>\n                    <p className=\"modal-subtitle\">{selectedOrder.vendor_name || '업체명 없음'}</p>\n                  </div>\n                  <div className={`px-3 py-1.5 rounded-full badge-text bg-orange-50 text-orange-700 border-orange-200`}>\n                    미다운로드\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Apple-style Content */}\n            <div className=\"overflow-y-auto max-h-[calc(50vh-160px)] px-6 pb-4 space-y-3\">\n              \n              {/* Dense Basic Information Grid */}\n              <div className=\"bg-gray-50 rounded-xl p-3 border border-gray-100\">\n                <div className=\"grid grid-cols-3 gap-x-4 gap-y-2 text-xs\">\n                  <div><span className=\"text-gray-500\">요청자:</span> <span className=\"font-medium\">{selectedOrder.requester_name}</span></div>\n                  <div><span className=\"text-gray-500\">요청일:</span> <span className=\"font-medium\">{new Date(selectedOrder.request_date || selectedOrder.created_at).toLocaleDateString('ko-KR')}</span></div>\n                  <div><span className=\"text-gray-500\">납기요청일:</span> <span className=\"font-medium\">{selectedOrder.delivery_request_date ? new Date(selectedOrder.delivery_request_date).toLocaleDateString('ko-KR') : '미지정'}</span></div>\n                  \n                  <div><span className=\"text-gray-500\">업체명:</span> <span className=\"font-medium\">{selectedOrder.vendor_name || '-'}</span></div>\n                  <div><span className=\"text-gray-500\">결제유형:</span> <span className=\"font-medium\">{selectedOrder.payment_category || '일반'}</span></div>\n                  <div><span className=\"text-gray-500\">진행구분:</span> <span className=\"font-medium\">{selectedOrder.progress_type || '일반'}</span></div>\n                  \n                  <div><span className=\"text-gray-500\">프로젝트업체:</span> <span className=\"font-medium\">{selectedOrder.project_vendor || '-'}</span></div>\n                  <div><span className=\"text-gray-500\">판매주문번호:</span> <span className=\"font-medium\">{selectedOrder.sales_order_number || '-'}</span></div>\n                  <div><span className=\"text-gray-500\">배송지:</span> <span className=\"font-medium\">{selectedOrder.shipping_address || '본사'}</span></div>\n                  \n                  <div><span className=\"text-gray-500\">통화:</span> <span className=\"font-medium\">{selectedOrder.currency || 'KRW'}</span></div>\n                  <div><span className=\"text-gray-500\">템플릿:</span> <span className=\"font-medium\">{selectedOrder.po_template_type || '일반'}</span></div>\n                  {selectedOrder.revised_delivery_request_date && (\n                    <div><span className=\"text-orange-500\">변경입고일:</span> <span className=\"font-medium text-orange-900\">{new Date(selectedOrder.revised_delivery_request_date).toLocaleDateString('ko-KR')}</span></div>\n                  )}\n                </div>\n              </div>\n\n              {/* Compact Items Table */}\n              <div className=\"bg-white rounded-xl border border-gray-100 overflow-hidden\">\n                <div className=\"bg-gray-50 px-3 py-2 border-b border-gray-100\">\n                  <h3 className=\"text-sm font-medium text-gray-700\">주문 품목 ({(selectedOrder.purchase_request_items || []).length}개, 총 ₩{(selectedOrder.purchase_request_items || []).reduce((sum: number, i: any) => sum + (Number(i.amount_value) || 0), 0).toLocaleString()})</h3>\n                </div>\n                <div className=\"overflow-x-auto\">\n                  <table className=\"w-full text-xs table-fixed\">\n                    <colgroup>\n                      <col className=\"w-[30%]\" />\n                      <col className=\"w-[25%]\" />\n                      <col className=\"w-[10%]\" />\n                      <col className=\"w-[15%]\" />\n                      <col className=\"w-[20%]\" />\n                    </colgroup>\n                    <thead className=\"bg-gray-50 border-b border-gray-100\">\n                      <tr>\n                        <th className=\"text-left p-2 font-medium text-gray-600\">품목명</th>\n                        <th className=\"text-left p-2 font-medium text-gray-600\">규격</th>\n                        <th className=\"text-right p-2 font-medium text-gray-600\">수량</th>\n                        <th className=\"text-right p-2 font-medium text-gray-600\">단가</th>\n                        <th className=\"text-right p-2 font-medium text-gray-600\">금액</th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"divide-y divide-gray-100\">\n                      {(selectedOrder.purchase_request_items || []).map((pItem: any, index: number) => {\n                        const unitPrice = pItem.quantity > 0 ? (Number(pItem.amount_value) || 0) / pItem.quantity : 0\n                        return (\n                          <tr key={index} className=\"hover:bg-gray-50\">\n                            <td className=\"p-2\">\n                              <div className=\"font-medium text-gray-900\">{pItem.item_name || '품목명 없음'}</div>\n                              {pItem.remark && (\n                                <div className=\"text-xs text-amber-600 mt-1\">비고: {pItem.remark}</div>\n                              )}\n                            </td>\n                            <td className=\"p-2 text-gray-600\">{pItem.specification || '-'}</td>\n                            <td className=\"p-2 text-right font-medium\">{pItem.quantity || 0}</td>\n                            <td className=\"p-2 text-right\">₩{unitPrice.toLocaleString()}</td>\n                            <td className=\"p-2 text-right font-medium\">₩{(Number(pItem.amount_value) || 0).toLocaleString()}</td>\n                          </tr>\n                        )\n                      })}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n\n            {/* Apple-style Action Bar */}\n            <div className=\"sticky bottom-0 bg-white border-t border-gray-100 px-6 py-6\">\n              <div className=\"flex items-center justify-between gap-6\">\n                <Button\n                  onClick={() => handleDownloadExcel(selectedOrder)}\n                  disabled={downloadingIds.has(selectedOrder.id)}\n                  className=\"bg-gradient-to-r from-orange-500 to-orange-600 hover:from-orange-600 hover:to-orange-700 text-white px-8 py-4 rounded-2xl shadow-lg transition-all duration-200 modal-subtitle\"\n                >\n                  {downloadingIds.has(selectedOrder.id) ? (\n                    <div className=\"w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin mr-3\" />\n                  ) : (\n                    <Download className=\"w-5 h-5 mr-3\" />\n                  )}\n                  Excel 다운로드\n                </Button>\n\n                <div className=\"flex items-center gap-4 ml-auto\">\n                  <Button\n                    variant=\"outline\"\n                    onClick={() => {\n                      navigate(`/purchase/list?tab=purchase`)\n                      setIsOrderModalOpen(false)\n                      setSelectedOrder(null)\n                    }}\n                    className=\"border-gray-300 text-gray-700 hover:bg-gray-50 hover:text-gray-900 hover:border-gray-400 px-8 py-4 rounded-2xl modal-subtitle transition-all duration-200\"\n                  >\n                    발주 목록에서 보기\n                    <ArrowRight className=\"w-5 h-5 ml-3\" />\n                  </Button>\n                  <Button \n                    onClick={() => {\n                      setIsOrderModalOpen(false)\n                      setSelectedOrder(null)\n                    }} \n                    className=\"bg-gray-900 hover:bg-gray-800 text-white px-10 py-4 rounded-2xl modal-subtitle transition-all duration-200 shadow-lg\"\n                  >\n                    완료\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n      )}\n    </div>\n  )\n}"],"names":["ArrowRight","createLucideIcon","d","key","CircleCheck","cx","cy","r","Clock","ThumbsUp","TriangleAlert","dashboardService","constructor","this","supabase","createClient","parseRoles","purchaseRole","roles","Array","isArray","map","String","trim","split","filter","length","getDashboardData","employee","stats","urgentRequests","myRecentRequests","pendingApprovals","quickActions","todaySummary","myPurchaseStatus","Promise","all","getDashboardStats","getUrgentRequests","getMyRecentRequests","getPendingApprovals","getQuickActions","getTodaySummary","getMyPurchaseStatus","today","Date","toISOString","purchase_role","totalResult","myRequestsResult","pendingResult","completedResult","urgentResult","todayActionsResult","from","select","count","head","eq","name","getPendingCount","gte","getFullYear","getMonth","getUrgentCount","getTodayActionsCount","total","myRequests","pending","completed","urgent","todayActions","threeDaysAgo","now","query","lt","includes","or","data","order","ascending","limit","item","vendor_name","vendors","total_items","purchase_request_items","daysOverdue","Math","floor","created_at","getTime","priority","calculatePriority","urgentReason","getUrgentReason","progress_percentage","calculateProgress","current_step","getCurrentStep","next_action","getNextAction","estimated_completion","estimateCompletion","allRequests","firstTry","error","fallback","filteredData","isPending","status","logger","debug","employeeName","employeeRoles","totalRequests","sampleData","slice","id","purchase_order_number","middle_manager_status","final_manager_status","middlePending","finalPending","middleRejected","finalRejected","filteredCount","filteredItems","roleFilteredData","totalItems","beforeFilter","afterFilter","middleApproved","finalApproved","purchasePending","purchase_status","result","async","items","vendor_id","vendor","single","total_amount","reduce","sum","i","Number","amount_value","quantity","unit_price_value","actions","pendingCount","push","type","label","description","color","purchaseCount","tomorrow","approvedResult","requestedResult","receivedResult","approved","requested","received","requesterName","email","sevenDaysAgo","waitingPurchase","waitingDelivery","recentCompleted","allMyRequests","categoryNormalized","payment_category","replace","isPurchaseRequest","notPaid","is_payment_completed","isSeonJin","progress_type","isIlban","notReceived","is_received","received_at","quickApprove","requestId","request","success","updateData","Object","keys","updatedData","update","message","mid","fin","pur","getTotalDeliveryWaitingCount","daysPending","progress","created","estimatedDays","toLocaleDateString","getUndownloadedOrders","isDownloadable","notDownloaded","is_po_download","sort","a","b","PurchaseStatusModal","isOpen","onClose","onRefresh","navigate","useNavigate","currentUserRoles","setCurrentUserRoles","useState","processing","setProcessing","localItem","setLocalItem","useEffect","user","auth","getUser","fetchUserRoles","totalAmount","showPurchaseButton","showDeliveryButton","hasAdminPermission","hasLeadBuyerPermission","itemData","typeInfo","icon","jsx","className","title","ShoppingCart","Truck","CheckCircle","Package","getTypeInfo","Dialog","open","onOpenChange","children","jsxs","DialogContent","style","maxWidth","width","maxHeight","showCloseButton","onClick","X","requester_name","request_date","delivery_request_date","project_vendor","sales_order_number","shipping_address","currency","po_template_type","revised_delivery_request_date","toLocaleString","pItem","index","unitPrice","item_name","remark","specification","CheckCircle2","Button","size","confirm","prev","toast","payment_completed_at","receivedCount","totalCount","percentage","toFixed","disabled","variant","DashboardMain","setData","loading","setLoading","actionLoading","setActionLoading","selectedApprovalId","setSelectedApprovalId","isModalOpen","setIsModalOpen","undownloadedOrders","setUndownloadedOrders","downloadingIds","setDownloadingIds","Set","selectedOrder","setSelectedOrder","isOrderModalOpen","setIsOrderModalOpen","selectedStatusItem","setSelectedStatusItem","statusModalType","setStatusModalType","isStatusModalOpen","setIsStatusModalOpen","searchTerms","setSearchTerms","undownloaded","purchase","delivery","loadDashboardData","useCallback","showLoading","authError","employeeError","defaultEmployee","dashboardData","err","handleQuickApprove","originalData","max","setTimeout","handleStatusClick","filterItems","searchTerm","join","toLowerCase","handleDownloadExcel","add","workbook","ExcelJS","Workbook","worksheet","addWorksheet","columns","header","forEach","addRow","unit_price","amount","getRow","font","bold","fill","pattern","fgColor","argb","buffer","xlsx","writeBuffer","blob","Blob","url","window","URL","createObjectURL","link","document","createElement","href","download","click","revokeObjectURL","newSet","delete","getPriorityColor","canSeeApprovalBox","some","Badge","month","day","weekday","Card","CardHeader","CardTitle","AlertTriangle","CardContent","Eye","Download","Search","Input","placeholder","value","onChange","e","target","firstItem","daysSince","isAdvance","stopPropagation","has","Fragment","approval","closest","PurchaseDetailModal","purchaseId"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4]}