{"version":3,"file":"ReceiptsMain-BRG6gIl5.js","sources":["../../node_modules/lucide-react/dist/esm/icons/file-image.js","../../node_modules/lucide-react/dist/esm/icons/funnel.js","../../node_modules/lucide-react/dist/esm/icons/printer.js","../../node_modules/lucide-react/dist/esm/icons/rotate-ccw.js","../../node_modules/lucide-react/dist/esm/icons/upload.js","../../node_modules/lucide-react/dist/esm/icons/zoom-in.js","../../node_modules/lucide-react/dist/esm/icons/zoom-out.js","../../src/hooks/useReceiptPermissions.ts","../../src/components/receipts/ReceiptDetailModal.tsx","../../src/utils/receipt.ts","../../src/components/receipts/MobileReceiptCard.tsx","../../src/components/receipts/ReceiptUploadModal.tsx","../../src/components/receipts/ReceiptsMain.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z\", key: \"1rqfz7\" }],\n  [\"path\", { d: \"M14 2v4a2 2 0 0 0 2 2h4\", key: \"tnqrlb\" }],\n  [\"circle\", { cx: \"10\", cy: \"12\", r: \"2\", key: \"737tya\" }],\n  [\"path\", { d: \"m20 17-1.296-1.296a2.41 2.41 0 0 0-3.408 0L9 22\", key: \"wt3hpn\" }]\n];\nconst FileImage = createLucideIcon(\"file-image\", __iconNode);\n\nexport { __iconNode, FileImage as default };\n//# sourceMappingURL=file-image.js.map\n","/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M10 20a1 1 0 0 0 .553.895l2 1A1 1 0 0 0 14 21v-7a2 2 0 0 1 .517-1.341L21.74 4.67A1 1 0 0 0 21 3H3a1 1 0 0 0-.742 1.67l7.225 7.989A2 2 0 0 1 10 14z\",\n      key: \"sc7q7i\"\n    }\n  ]\n];\nconst Funnel = createLucideIcon(\"funnel\", __iconNode);\n\nexport { __iconNode, Funnel as default };\n//# sourceMappingURL=funnel.js.map\n","/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2\",\n      key: \"143wyd\"\n    }\n  ],\n  [\"path\", { d: \"M6 9V3a1 1 0 0 1 1-1h10a1 1 0 0 1 1 1v6\", key: \"1itne7\" }],\n  [\"rect\", { x: \"6\", y: \"14\", width: \"12\", height: \"8\", rx: \"1\", key: \"1ue0tg\" }]\n];\nconst Printer = createLucideIcon(\"printer\", __iconNode);\n\nexport { __iconNode, Printer as default };\n//# sourceMappingURL=printer.js.map\n","/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M3 12a9 9 0 1 0 9-9 9.75 9.75 0 0 0-6.74 2.74L3 8\", key: \"1357e3\" }],\n  [\"path\", { d: \"M3 3v5h5\", key: \"1xhq8a\" }]\n];\nconst RotateCcw = createLucideIcon(\"rotate-ccw\", __iconNode);\n\nexport { __iconNode, RotateCcw as default };\n//# sourceMappingURL=rotate-ccw.js.map\n","/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M12 3v12\", key: \"1x0j5s\" }],\n  [\"path\", { d: \"m17 8-5-5-5 5\", key: \"7q97r8\" }],\n  [\"path\", { d: \"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\", key: \"ih7n3h\" }]\n];\nconst Upload = createLucideIcon(\"upload\", __iconNode);\n\nexport { __iconNode, Upload as default };\n//# sourceMappingURL=upload.js.map\n","/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"circle\", { cx: \"11\", cy: \"11\", r: \"8\", key: \"4ej97u\" }],\n  [\"line\", { x1: \"21\", x2: \"16.65\", y1: \"21\", y2: \"16.65\", key: \"13gj7c\" }],\n  [\"line\", { x1: \"11\", x2: \"11\", y1: \"8\", y2: \"14\", key: \"1vmskp\" }],\n  [\"line\", { x1: \"8\", x2: \"14\", y1: \"11\", y2: \"11\", key: \"durymu\" }]\n];\nconst ZoomIn = createLucideIcon(\"zoom-in\", __iconNode);\n\nexport { __iconNode, ZoomIn as default };\n//# sourceMappingURL=zoom-in.js.map\n","/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"circle\", { cx: \"11\", cy: \"11\", r: \"8\", key: \"4ej97u\" }],\n  [\"line\", { x1: \"21\", x2: \"16.65\", y1: \"21\", y2: \"16.65\", key: \"13gj7c\" }],\n  [\"line\", { x1: \"8\", x2: \"14\", y1: \"11\", y2: \"11\", key: \"durymu\" }]\n];\nconst ZoomOut = createLucideIcon(\"zoom-out\", __iconNode);\n\nexport { __iconNode, ZoomOut as default };\n//# sourceMappingURL=zoom-out.js.map\n","import { useState, useEffect } from 'react';\nimport { createClient } from '@/lib/supabase/client';\nimport type { ReceiptPermissions, UserRole } from '@/types/receipt';\n\n/**\n * 영수증 관리 권한을 관리하는 React Hook\n * \n * 사용자의 역할(role)에 따라 영수증 관련 권한을 계산하고 제공합니다.\n * \n * @returns {Object} 권한 정보와 관련 상태\n * @returns {ReceiptPermissions} permissions - 권한 객체\n * @returns {UserRole | null} userRole - 사용자 역할\n * @returns {boolean} loading - 권한 로딩 상태\n * @returns {Function} refreshPermissions - 권한 새로고침 함수\n * \n * @example\n * ```tsx\n * const { permissions, userRole, loading } = useReceiptPermissions();\n * \n * if (loading) return <div>로딩 중...</div>;\n * \n * return (\n *   <div>\n *     {permissions.canUpload && <UploadButton />}\n *     {permissions.canDelete && <DeleteButton />}\n *   </div>\n * );\n * ```\n */\nexport function useReceiptPermissions() {\n  const [permissions, setPermissions] = useState<ReceiptPermissions>({\n    canView: false,\n    canUpload: false,\n    canDownload: false,\n    canPrint: false,\n    canDelete: false,\n    canViewUploaderInfo: false,\n  });\n  const [userRole, setUserRole] = useState<UserRole | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  const supabase = createClient();\n\n  const checkPermissions = async () => {\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) {\n        setLoading(false);\n        return;\n      }\n\n      const { data: employee } = await supabase\n        .from('employees')\n        .select('purchase_role')\n        .eq('email', user.email)\n        .single();\n\n      const role = employee?.purchase_role || '';\n      setUserRole(role);\n\n      // 권한 계산\n      const isAppAdmin = role.includes('app_admin');\n      const isHr = role.includes('hr');\n      const isLeadBuyer = role.includes('lead buyer');\n      \n      // 영수증 관리 접근 가능 권한\n      const hasReceiptAccess = isAppAdmin || isHr || isLeadBuyer;\n\n      setPermissions({\n        canView: hasReceiptAccess,\n        canUpload: hasReceiptAccess,\n        canDownload: hasReceiptAccess,\n        canPrint: hasReceiptAccess,\n        canDelete: isAppAdmin, // 오직 app_admin만\n        canViewUploaderInfo: isAppAdmin, // 오직 app_admin만\n      });\n    } catch (error) {\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    checkPermissions();\n  }, []);\n\n  return {\n    permissions,\n    userRole,\n    loading,\n    refreshPermissions: checkPermissions,\n  };\n}","import { useState, useEffect, useCallback } from \"react\";\nimport {\n  Dialog,\n  DialogContent,\n} from \"@/components/ui/dialog\";\nimport { Button } from \"@/components/ui/button\";\nimport { Download, X, ZoomIn, ZoomOut, RotateCcw, Printer, Trash2 } from \"lucide-react\";\nimport { toast } from \"sonner\";\nimport { createClient } from \"@/lib/supabase/client\";\nimport { useReceiptPermissions } from \"@/hooks/useReceiptPermissions\";\nimport type { ReceiptItem } from \"@/types/receipt\";\nimport { logger } from \"@/lib/logger\";\n\ninterface ReceiptDetailModalProps {\n  receipt: ReceiptItem;\n  isOpen: boolean;\n  onClose: () => void;\n  onDelete?: () => void;\n}\n\nexport default function ReceiptDetailModal({ receipt, isOpen, onClose, onDelete }: ReceiptDetailModalProps) {\n  const [imageScale, setImageScale] = useState(1);\n  const [imageRotation, setImageRotation] = useState(0);\n  const [imageError, setImageError] = useState(false);\n  const [deleting, setDeleting] = useState(false);\n  const [imageDimensions, setImageDimensions] = useState({ width: 0, height: 0 });\n  const [imageLoaded, setImageLoaded] = useState(false);\n  \n  const supabase = createClient();\n  const { permissions } = useReceiptPermissions();\n\n  // 모달이 열릴 때 초기화\n  useEffect(() => {\n    if (isOpen) {\n      setImageScale(1);\n      setImageRotation(0);\n      setImageError(false);\n      setImageLoaded(false);\n    }\n  }, [isOpen]);\n\n  // formatDateTime은 utils/helpers.ts에서 import하여 사용 가능\n\n  // 영수증 이미지 다운로드\n  const handleDownload = async () => {\n    try {\n      // URL에서 파일 경로 추출 (Supabase Storage 경로)\n      const url = new URL(receipt.receipt_image_url);\n      const pathSegments = url.pathname.split('/');\n      const bucketIndex = pathSegments.indexOf('receipt-images');\n      \n      if (bucketIndex === -1) {\n        throw new Error('잘못된 영수증 URL입니다');\n      }\n      \n      const filePath = pathSegments.slice(bucketIndex + 1).join('/');\n\n      // Supabase Storage에서 다운로드\n      const { data, error } = await supabase.storage\n        .from('receipt-images')\n        .download(filePath);\n\n      if (error) throw error;\n\n      // Blob을 다운로드 가능한 URL로 변환\n      const blob = new Blob([data], { type: 'image/jpeg' });\n      const downloadUrl = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = downloadUrl;\n      a.download = receipt.file_name || `영수증_${receipt.id}.jpg`;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      window.URL.revokeObjectURL(downloadUrl);\n      \n      toast.success('영수증 이미지가 다운로드되었습니다.');\n    } catch (error) {\n      logger.error('다운로드 오류', error);\n      toast.error('다운로드에 실패했습니다.');\n    }\n  };\n\n  // 확대/축소\n  const handleZoomIn = () => {\n    setImageScale(prev => Math.min(prev + 0.25, 3));\n  };\n\n  const handleZoomOut = () => {\n    setImageScale(prev => Math.max(prev - 0.25, 0.5));\n  };\n\n  // 회전\n  const handleRotate = () => {\n    setImageRotation(prev => (prev + 90) % 360);\n  };\n\n  // 초기화\n  const handleReset = () => {\n    setImageScale(1);\n    setImageRotation(0);\n  };\n\n  // 이미지 로드 완료 핸들러\n  const handleImageLoad = (e: React.SyntheticEvent<HTMLImageElement>) => {\n    const img = e.currentTarget;\n    setImageDimensions({ width: img.naturalWidth, height: img.naturalHeight });\n    setImageLoaded(true);\n  };\n\n  // 이미지 최적 크기 계산\n  const getOptimalImageStyle = () => {\n    if (!imageLoaded) return { width: '100%', height: '100vh' };\n    \n    const containerWidth = window.innerWidth - 64; // 우측 탭바 제외\n    const containerHeight = window.innerHeight;\n    \n    const widthRatio = containerWidth / imageDimensions.width;\n    const heightRatio = containerHeight / imageDimensions.height;\n    const optimalRatio = Math.min(widthRatio, heightRatio);\n    \n    return {\n      width: `${imageDimensions.width * optimalRatio}px`,\n      height: `${imageDimensions.height * optimalRatio}px`,\n    };\n  };\n\n  // 영수증 인쇄 완료 처리\n  const markAsPrinted = useCallback(async () => {\n    logger.debug('인쇄완료 처리 시작', {\n      receiptId: receipt.id,\n      receiptName: receipt.file_name\n    });\n\n\n    try {\n      // 1. 사용자 인증 정보 확인\n      const { data: { user }, error: authError } = await supabase.auth.getUser();\n      \n      if (authError) {\n        logger.error('인증 오류', authError);\n        toast.error('사용자 인증에 실패했습니다.');\n        return;\n      }\n      \n      if (!user) {\n        logger.error('사용자 정보 없음');\n        toast.error('사용자 정보를 불러올 수 없습니다.');\n        return;\n      }\n\n\n      // 2. 사용자 권한 및 정보 확인\n      const { data: employee, error: empError } = await supabase\n        .from('employees')\n        .select('name, purchase_role')\n        .eq('email', user.email)\n        .single();\n\n      if (empError) {\n        logger.error('직원 정보 조회 실패', empError);\n        toast.error('직원 정보를 불러올 수 없습니다.');\n        return;\n      }\n\n\n      // 3. 권한 검증\n      const role = employee?.purchase_role || '';\n      const hasPermission = role.includes('app_admin') || role.includes('hr') || role.includes('lead buyer');\n      \n\n      if (!hasPermission) {\n        logger.error('권한 부족', { role });\n        toast.error('인쇄완료 처리 권한이 없습니다.');\n        return;\n      }\n\n      // 4. 업데이트 데이터 준비\n      const updateData = {\n        is_printed: true,\n        printed_at: new Date().toISOString(),\n        printed_by: user.id,\n        printed_by_name: employee?.name || user.email\n      };\n\n\n      // 5. 데이터베이스 업데이트 실행\n      const startTime = performance.now();\n      \n      const { data: updateResult, error: updateError } = await supabase\n        .from('purchase_receipts')\n        .update(updateData)\n        .eq('id', receipt.id)\n        .select('*');\n\n      const endTime = performance.now();\n      const executionTime = endTime - startTime;\n\n      if (updateError) {\n        logger.error('업데이트 실패', updateError);\n        \n        \n        // RLS 관련 오류 특별 처리\n        if (updateError.code === '42501' || updateError.message?.includes('policy')) {\n          toast.error('데이터베이스 권한 오류가 발생했습니다. 관리자에게 문의하세요.');\n        } else {\n          toast.error(`업데이트 실패: ${updateError.message}`);\n        }\n        return;\n      }\n\n      const affectedRows = updateResult?.length || 0;\n      \n\n      // affectedRows가 0이어도 성공으로 처리 (이미 인쇄완료 상태인 경우)\n      if (affectedRows === 0) {\n      }\n\n\n      // 6. 성공 처리\n      toast.success('인쇄 완료로 표시되었습니다.');\n      \n      // 7. 목록 새로고침\n      if (onDelete) {\n        onDelete(); // 목록 새로고침을 위해 호출\n      }\n\n      logger.debug('인쇄완료 처리 완료', { receiptId: receipt.id });\n\n    } catch (error) {\n      const errorObj = error as any;\n      logger.error('인쇄완료 처리 예외', errorObj, { receiptId: receipt.id });\n\n      \n      toast.error(`인쇄 완료 처리에 실패했습니다: ${errorObj?.message || '알 수 없는 오류'}`);\n    }\n  }, [supabase, receipt.id, receipt.file_name, onClose, onDelete]);\n\n  // 영수증 인쇄 핸들러\n  const handlePrint = useCallback(() => {\n    const printWindow = window.open('', '_blank');\n    if (printWindow) {\n      printWindow.document.write(`\n        <!DOCTYPE html>\n        <html><head><title></title>\n        <style>@page{margin:0;size:auto;}*{margin:0;padding:0;box-sizing:border-box;}body{display:flex;justify-content:center;align-items:center;min-height:100vh;background:white;margin:0;padding:0;}.receipt-image{max-width:100%;max-height:100vh;object-fit:contain;display:block;}@media print{@page{margin:0;}body{margin:0;padding:0;background:white;}.receipt-image{max-width:100%;max-height:100%;width:auto;height:auto;page-break-inside:avoid;}}</style>\n        </head><body>\n        <img src=\"${receipt.receipt_image_url}\" alt=\"\" class=\"receipt-image\" onload=\"setTimeout(function(){window.print();window.close();},100);\" onerror=\"window.close();\" />\n        </body></html>\n      `);\n      printWindow.document.close();\n\n      // 인쇄 완료 확인 다이얼로그\n      setTimeout(() => {\n        const userConfirmed = confirm('인쇄를 완료하셨습니까?');\n        \n        if (userConfirmed) {\n          logger.debug('모달 닫기 실행 중');\n          // 먼저 모달 닫기\n          onClose();\n          \n          logger.debug('markAsPrinted 함수 호출 시작');\n          // 그 다음 인쇄완료 처리\n          markAsPrinted();\n        } else {\n          logger.debug('사용자가 취소함 - 인쇄완료 처리 안함');\n        }\n      }, 1000);\n    }\n  }, [receipt.receipt_image_url, markAsPrinted, onClose]);\n\n  // 영수증 삭제 - useCallback으로 최적화\n  const handleDelete = useCallback(async () => {\n    if (!permissions.canDelete) {\n      toast.error('삭제 권한이 없습니다.');\n      return;\n    }\n\n    if (!confirm('정말로 이 영수증을 삭제하시겠습니까?')) {\n      return;\n    }\n\n    try {\n      setDeleting(true);\n\n      // URL에서 파일 경로 추출 (Supabase Storage 경로)\n      const url = new URL(receipt.receipt_image_url);\n      const pathSegments = url.pathname.split('/');\n      const bucketIndex = pathSegments.indexOf('receipt-images');\n      \n      if (bucketIndex !== -1) {\n        const filePath = pathSegments.slice(bucketIndex + 1).join('/');\n        \n        // Supabase Storage에서 파일 삭제\n        const { error: storageError } = await supabase.storage\n          .from('receipt-images')\n          .remove([filePath]);\n\n        if (storageError) {\n          logger.warn('스토리지 파일 삭제 실패', { error: storageError });\n        }\n      }\n\n      // DB에서 레코드 삭제\n      const { error: dbError } = await supabase\n        .from('purchase_receipts')\n        .delete()\n        .eq('id', receipt.id);\n\n      if (dbError) throw dbError;\n\n      toast.success('영수증이 삭제되었습니다.');\n      onClose();\n      if (onDelete) {\n        onDelete();\n      }\n    } catch (error) {\n      logger.error('삭제 오류', error);\n      toast.error('삭제에 실패했습니다.');\n    } finally {\n      setDeleting(false);\n    }\n  }, [permissions.canDelete, receipt.id, receipt.receipt_image_url, onClose, onDelete, supabase]);\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent className=\"w-[100vw] max-w-none h-[100vh] p-0 overflow-hidden m-0 border-0 rounded-none\">\n        <div className=\"flex h-full\">\n          {/* 이미지 영역 */}\n          <div className=\"flex-1 bg-white relative overflow-hidden\">\n            <div className=\"absolute inset-0 flex items-center justify-center\">\n              <img\n                src={receipt.receipt_image_url}\n                alt=\"영수증\"\n                className=\"object-contain\"\n                style={{\n                  ...getOptimalImageStyle(),\n                  transform: `scale(${imageScale}) rotate(${imageRotation}deg)`,\n                  transformOrigin: 'center'\n                }}\n                onLoad={handleImageLoad}\n                onError={() => setImageError(true)}\n              />\n            </div>\n            \n            {/* 닫기 버튼 */}\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={onClose}\n              className=\"absolute top-4 left-4 h-10 w-10 p-0 bg-gray-900/80 hover:bg-gray-900 text-white rounded-full\"\n            >\n              <X className=\"h-5 w-5\" />\n            </Button>\n\n            {/* 이미지 컨트롤 */}\n            <div className=\"absolute bottom-4 left-1/2 transform -translate-x-1/2 bg-gray-900/80 rounded-full px-4 py-2\">\n              <div className=\"flex items-center gap-2 text-white\">\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={handleZoomOut}\n                  disabled={imageScale <= 0.5}\n                  className=\"h-7 w-7 p-0 text-white hover:bg-white/20\"\n                >\n                  <ZoomOut className=\"w-4 h-4\" />\n                </Button>\n                <span className=\"modal-subtitle min-w-[40px] text-center\">\n                  {Math.round(imageScale * 100)}%\n                </span>\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={handleZoomIn}\n                  disabled={imageScale >= 3}\n                  className=\"h-7 w-7 p-0 text-white hover:bg-white/20\"\n                >\n                  <ZoomIn className=\"w-4 h-4\" />\n                </Button>\n                <div className=\"w-px h-4 bg-white/30 mx-1\" />\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={handleRotate}\n                  className=\"h-7 w-7 p-0 text-white hover:bg-white/20\"\n                >\n                  <RotateCcw className=\"w-4 h-4\" />\n                </Button>\n              </div>\n            </div>\n          </div>\n\n          {/* 우측 세로 탭바 */}\n          <div className=\"w-16 bg-gray-900 flex flex-col items-center justify-center space-y-4\">\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={handlePrint}\n              className=\"w-10 h-10 p-0 text-white hover:bg-gray-700 rounded-lg\"\n              title=\"인쇄\"\n            >\n              <Printer className=\"w-6 h-6\" />\n            </Button>\n            \n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={handleDownload}\n              className=\"w-10 h-10 p-0 text-white hover:bg-gray-700 rounded-lg\"\n              title=\"다운로드\"\n            >\n              <Download className=\"w-6 h-6\" />\n            </Button>\n\n            {permissions.canDelete && (\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={handleDelete}\n                disabled={deleting}\n                className=\"w-10 h-10 p-0 text-white hover:bg-red-600 rounded-lg\"\n                title=\"삭제\"\n              >\n                {deleting ? (\n                  <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\" />\n                ) : (\n                  <Trash2 className=\"w-6 h-6\" />\n                )}\n              </Button>\n            )}\n          </div>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n}\n","/**\n * 영수증 관리 관련 유틸리티 함수들\n */\n\n// 파일 크기를 읽기 쉬운 형태로 변환\nexport function formatFileSize(bytes: number): string {\n  if (bytes === 0) return '0 B';\n  \n  const k = 1024;\n  const sizes = ['B', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  \n  return `${parseFloat((bytes / Math.pow(k, i)).toFixed(1))} ${sizes[i]}`;\n}\n\n// 날짜를 한국어 형식으로 포맷\nexport function formatDate(dateStr?: string): string {\n  if (!dateStr) return '-';\n  \n  try {\n    const date = new Date(dateStr);\n    if (isNaN(date.getTime())) return '-';\n    \n    return date.toLocaleDateString('ko-KR', {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit',\n    });\n  } catch {\n    return '-';\n  }\n}\n\n// 상대적 시간 표시 (예: \"2시간 전\", \"3일 전\")\nexport function formatRelativeTime(dateStr?: string): string {\n  if (!dateStr) return '-';\n  \n  try {\n    const date = new Date(dateStr);\n    const now = new Date();\n    const diffMs = now.getTime() - date.getTime();\n    \n    const diffMinutes = Math.floor(diffMs / (1000 * 60));\n    const diffHours = Math.floor(diffMs / (1000 * 60 * 60));\n    const diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));\n    \n    if (diffMinutes < 60) {\n      return diffMinutes < 1 ? '방금 전' : `${diffMinutes}분 전`;\n    } else if (diffHours < 24) {\n      return `${diffHours}시간 전`;\n    } else if (diffDays < 7) {\n      return `${diffDays}일 전`;\n    } else {\n      return formatDate(dateStr);\n    }\n  } catch {\n    return '-';\n  }\n}\n\n// 파일 타입 검증\nexport function isValidImageFile(file: File): boolean {\n  const validTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/webp', 'image/heic'];\n  return validTypes.includes(file.type.toLowerCase());\n}\n\n// 파일 크기 검증 (기본 10MB)\nexport function isValidFileSize(file: File, maxSizeMB: number = 10): boolean {\n  const maxSizeBytes = maxSizeMB * 1024 * 1024;\n  return file.size <= maxSizeBytes;\n}\n\n// 영수증 파일명 생성\nexport function generateReceiptFileName(extension: string = 'jpg'): string {\n  const now = new Date();\n  const year = now.getFullYear().toString().substring(2);\n  const month = (now.getMonth() + 1).toString().padStart(2, '0');\n  const day = now.getDate().toString().padStart(2, '0');\n  const hour = now.getHours().toString().padStart(2, '0');\n  const minute = now.getMinutes().toString().padStart(2, '0');\n  \n  return `rec${year}${month}${day}${hour}${minute}.${extension}`;\n}\n\n// Supabase Storage URL에서 파일 경로 추출\nexport function extractStoragePathFromUrl(url: string, bucketName: string = 'receipt-images'): string | null {\n  try {\n    const urlObj = new URL(url);\n    const pathSegments = urlObj.pathname.split('/');\n    const bucketIndex = pathSegments.indexOf(bucketName);\n    \n    if (bucketIndex === -1) return null;\n    \n    return pathSegments.slice(bucketIndex + 1).join('/');\n  } catch {\n    return null;\n  }\n}\n\n// 검색어 하이라이트용 함수\nexport function highlightSearchTerm(text: string, searchTerm: string): string {\n  if (!searchTerm) return text;\n  \n  const regex = new RegExp(`(${searchTerm.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')})`, 'gi');\n  return text.replace(regex, '<mark>$1</mark>');\n}\n\n// 키보드 접근성을 위한 이벤트 핸들러\nexport function handleKeyboardActivation(\n  event: React.KeyboardEvent,\n  callback: () => void\n): void {\n  if (event.key === 'Enter' || event.key === ' ') {\n    event.preventDefault();\n    callback();\n  }\n}","import { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Printer, Download, Calendar, User, FileText, Trash2 } from \"lucide-react\";\nimport type { ReceiptItem } from \"@/types/receipt\";\nimport { formatDate, formatFileSize } from \"@/utils/receipt\";\n\ninterface MobileReceiptCardProps {\n  receipt: ReceiptItem;\n  onView: (receipt: ReceiptItem) => void;\n  onPrint: (receipt: ReceiptItem) => void;\n  onDownload: (receipt: ReceiptItem) => void;\n  onDelete?: (receipt: ReceiptItem) => void;\n}\n\nexport default function MobileReceiptCard({ receipt, onView, onPrint, onDownload, onDelete }: MobileReceiptCardProps) {\n  // formatDate와 formatFileSize는 utils에서 import\n\n  return (\n    <Card className=\"w-full border border-gray-200 hover:shadow-md transition-shadow cursor-pointer\" onClick={() => onView(receipt)}>\n      <CardContent className=\"p-4\">\n        <div className=\"space-y-3\">\n          {/* 상단: 인쇄 상태 + 업로드일 */}\n          <div className=\"flex items-center justify-between\">\n            {receipt.is_printed ? (\n              <Badge className=\"bg-green-100 text-green-700 hover:bg-green-100 badge-text\">\n                ✓ 인쇄완료\n              </Badge>\n            ) : (\n              <Badge variant=\"secondary\" className=\"bg-gray-100 text-gray-600 badge-text\">\n                미완료\n              </Badge>\n            )}\n            <div className=\"flex items-center gap-1 badge-text text-gray-500\">\n              <Calendar className=\"w-3 h-3\" />\n              <span>{formatDate(receipt.uploaded_at)}</span>\n            </div>\n          </div>\n\n          {/* 파일명 */}\n          <div className=\"flex items-center gap-2\">\n            <FileText className=\"w-4 h-4 text-hansl-600\" />\n            <span className=\"card-title text-gray-900\">\n              {receipt.file_name}\n            </span>\n          </div>\n\n          {/* 메모 */}\n          {receipt.memo && (\n            <div className=\"card-subtitle text-gray-900 bg-gray-50 rounded p-2\">\n              {receipt.memo}\n            </div>\n          )}\n\n          {/* 업로드 정보 */}\n          <div className=\"flex items-center justify-between card-subtitle\">\n            <div className=\"flex items-center gap-1 text-gray-600\">\n              <User className=\"w-3 h-3\" />\n              <span>{receipt.uploaded_by_name || receipt.uploaded_by}</span>\n            </div>\n            <span className=\"text-gray-500\">{formatFileSize(receipt.file_size)}</span>\n          </div>\n\n          {/* 액션 버튼 */}\n          <div className={`flex gap-2 pt-2 border-t border-gray-100 ${onDelete ? 'grid grid-cols-3' : 'grid grid-cols-2'}`}>\n            <Button\n              size=\"sm\"\n              variant=\"outline\"\n              onClick={(e) => {\n                e.stopPropagation();\n                onPrint(receipt);\n              }}\n              className=\"flex-1\"\n            >\n              <Printer className=\"w-4 h-4 mr-1\" />\n              인쇄\n            </Button>\n            <Button\n              size=\"sm\"\n              variant=\"outline\"\n              onClick={(e) => {\n                e.stopPropagation();\n                onDownload(receipt);\n              }}\n              className=\"flex-1\"\n            >\n              <Download className=\"w-4 h-4 mr-1\" />\n              다운로드\n            </Button>\n            {onDelete && (\n              <Button\n                size=\"sm\"\n                variant=\"outline\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  onDelete(receipt);\n                }}\n                className=\"flex-1 border-red-200 text-red-600 hover:bg-red-50\"\n              >\n                <Trash2 className=\"w-4 h-4 mr-1\" />\n                삭제\n              </Button>\n            )}\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}","import { useState, useCallback } from \"react\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogDescription,\n} from \"@/components/ui/dialog\";\nimport { Button } from \"@/components/ui/button\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Label } from \"@/components/ui/label\";\nimport { Upload, X, FileImage } from \"lucide-react\";\nimport { toast } from \"sonner\";\nimport { createClient } from \"@/lib/supabase/client\";\nimport { useReceiptPermissions } from \"@/hooks/useReceiptPermissions\";\n\ninterface ReceiptUploadModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onSuccess: () => void;\n}\n\nexport default function ReceiptUploadModal({ isOpen, onClose, onSuccess }: ReceiptUploadModalProps) {\n  const [file, setFile] = useState<File | null>(null);\n  const [memo, setMemo] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n  const [dragOver, setDragOver] = useState(false);\n  \n  const supabase = createClient();\n  const { permissions } = useReceiptPermissions();\n\n  // 파일 선택 핸들러 - useCallback으로 최적화\n  const handleFileSelect = useCallback((selectedFile: File) => {\n    // 이미지 파일만 허용\n    if (!selectedFile.type.startsWith('image/')) {\n      toast.error('이미지 파일만 업로드할 수 있습니다.');\n      return;\n    }\n\n    // 파일 크기 제한 (10MB)\n    if (selectedFile.size > 10 * 1024 * 1024) {\n      toast.error('파일 크기는 10MB 이하여야 합니다.');\n      return;\n    }\n\n    setFile(selectedFile);\n  }, []);\n\n  // 드래그 앤 드롭 핸들러\n  const handleDragOver = (e: React.DragEvent) => {\n    e.preventDefault();\n    setDragOver(true);\n  };\n\n  const handleDragLeave = (e: React.DragEvent) => {\n    e.preventDefault();\n    setDragOver(false);\n  };\n\n  const handleDrop = (e: React.DragEvent) => {\n    e.preventDefault();\n    setDragOver(false);\n    \n    const files = Array.from(e.dataTransfer.files);\n    if (files.length > 0) {\n      handleFileSelect(files[0]);\n    }\n  };\n\n  // 업로드 핸들러 - useCallback으로 최적화\n  const handleUpload = useCallback(async () => {\n    if (!permissions.canUpload) {\n      toast.error('업로드 권한이 없습니다.');\n      return;\n    }\n\n    if (!file) {\n      toast.error('파일을 선택해주세요.');\n      return;\n    }\n\n    try {\n      setUploading(true);\n\n      // 현재 사용자 정보 가져오기\n      const { data: { user }, error: userError } = await supabase.auth.getUser();\n      if (userError || !user) {\n        throw new Error('로그인이 필요합니다.');\n      }\n\n      // 사용자 이름 가져오기\n      const { data: employee, error: employeeError } = await supabase\n        .from('employees')\n        .select('name')\n        .eq('email', user.email)\n        .single();\n\n      const userName = employee?.name || '';\n\n      // 파일명 생성\n      const now = new Date();\n      const fileExtension = file.name.split('.').pop() || 'jpg';\n      const fileName = `rec${now.getFullYear().toString().substring(2)}${(now.getMonth() + 1).toString().padStart(2, '0')}${now.getDate().toString().padStart(2, '0')}${now.getHours().toString().padStart(2, '0')}${now.getMinutes().toString().padStart(2, '0')}.${fileExtension}`;\n      \n      // 파일 경로\n      const filePath = `receipts/web/${now.getTime()}/${fileName}`;\n\n      // Supabase Storage에 업로드\n      const { error: uploadError } = await supabase.storage\n        .from('receipt-images')\n        .upload(filePath, file, {\n          contentType: file.type,\n          upsert: false,\n        });\n\n      if (uploadError) throw uploadError;\n\n      // Public URL 생성\n      const { data: { publicUrl } } = supabase.storage\n        .from('receipt-images')\n        .getPublicUrl(filePath);\n\n      // DB에 저장 - memo 칼럼 포함\n      const { error: dbError } = await supabase\n        .from('purchase_receipts')\n        .insert({\n          receipt_image_url: publicUrl,\n          file_name: fileName,\n          file_size: file.size,\n          uploaded_by: user.email!,\n          uploaded_by_name: userName,\n          memo: memo || null,\n          uploaded_at: new Date().toISOString(),\n        });\n\n      if (dbError) throw dbError;\n\n      toast.success('영수증이 성공적으로 업로드되었습니다.');\n      handleClose();\n      onSuccess();\n    } catch (error) {\n      toast.error(`업로드 실패: ${error instanceof Error ? error.message : error}`);\n    } finally {\n      setUploading(false);\n    }\n  }, [file, memo, permissions.canUpload, onSuccess]);\n\n  // 모달 닫기 - useCallback으로 최적화\n  const handleClose = useCallback(() => {\n    setFile(null);\n    setMemo(\"\");\n    setUploading(false);\n    setDragOver(false);\n    onClose();\n  }, [onClose]);\n\n  return (\n    <Dialog open={isOpen} onOpenChange={handleClose}>\n      <DialogContent className=\"max-w-lg\">\n        <DialogHeader className=\"space-y-3\">\n          <div className=\"flex items-center justify-between\">\n            <DialogTitle className=\"modal-title\">📎 영수증 업로드</DialogTitle>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={handleClose}\n              className=\"h-7 w-7 p-0 hover:bg-gray-100\"\n            >\n              <X className=\"h-4 w-4\" />\n            </Button>\n          </div>\n          <DialogDescription className=\"modal-subtitle\">\n            영수증 이미지를 업로드하고 메모를 추가할 수 있습니다.\n          </DialogDescription>\n        </DialogHeader>\n\n        <div className=\"space-y-6 pt-2\">\n          {/* 파일 업로드 영역 */}\n          <div className=\"space-y-2\">\n            <Label className=\"modal-label\">파일 선택</Label>\n            <div\n              className={`relative border-2 border-dashed rounded-xl p-8 text-center transition-all duration-200 cursor-pointer ${\n                dragOver\n                  ? 'border-hansl-400 bg-hansl-50 scale-[1.02]'\n                  : file\n                  ? 'border-green-400 bg-green-50'\n                  : 'border-gray-300 hover:border-hansl-300 hover:bg-gray-50'\n              }`}\n              onDragOver={handleDragOver}\n              onDragLeave={handleDragLeave}\n              onDrop={handleDrop}\n            >\n              {file ? (\n                <div className=\"space-y-3\">\n                  <div className=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto\">\n                    <FileImage className=\"w-8 h-8 text-green-600\" />\n                  </div>\n                  <div className=\"space-y-1\">\n                    <p className=\"modal-value text-green-800 truncate max-w-[200px] mx-auto\">{file.name}</p>\n                    <p className=\"badge-text text-green-600\">\n                      {(file.size / 1024 / 1024).toFixed(2)}MB\n                    </p>\n                  </div>\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => setFile(null)}\n                    className=\"mt-3 text-red-600 border-red-200 hover:bg-red-50\"\n                  >\n                    <X className=\"w-3 h-3 mr-1\" />\n                    제거\n                  </Button>\n                </div>\n              ) : (\n                <div className=\"space-y-4\">\n                  <div className=\"w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto\">\n                    <Upload className=\"w-8 h-8 text-gray-400\" />\n                  </div>\n                  <div className=\"space-y-2\">\n                    <p className=\"modal-value\">\n                      이미지를 드래그하여 놓거나 클릭하여 선택하세요\n                    </p>\n                    <p className=\"badge-text text-gray-500\">\n                      JPG, PNG, HEIC, WebP • 최대 10MB\n                    </p>\n                  </div>\n                </div>\n              )}\n              \n              {!file && (\n                <input\n                  type=\"file\"\n                  accept=\"image/*\"\n                  onChange={(e) => {\n                    const selectedFile = e.target.files?.[0];\n                    if (selectedFile) {\n                      handleFileSelect(selectedFile);\n                    }\n                  }}\n                  className=\"absolute inset-0 w-full h-full opacity-0 cursor-pointer\"\n                />\n              )}\n            </div>\n          </div>\n\n          {/* 메모 */}\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"memo\" className=\"modal-label\">\n              메모 <span className=\"text-gray-400 badge-text\">(선택사항)</span>\n            </Label>\n            <Textarea\n              id=\"memo\"\n              placeholder=\"영수증에 대한 간단한 메모를 입력하세요\"\n              value={memo}\n              onChange={(e) => setMemo(e.target.value)}\n              className=\"resize-none border-gray-200 focus:border-hansl-400 focus:ring-hansl-400\"\n              rows={3}\n            />\n          </div>\n\n\n          {/* 업로드 버튼 */}\n          <div className=\"flex gap-3 pt-6 border-t border-gray-100\">\n            <Button\n              variant=\"outline\"\n              onClick={handleClose}\n              className=\"flex-1 h-9 border-gray-200 hover:bg-gray-50\"\n              disabled={uploading}\n            >\n              취소\n            </Button>\n            <Button\n              onClick={handleUpload}\n              disabled={!file || uploading}\n              className=\"flex-1 h-9 bg-hansl-600 hover:bg-hansl-700 text-white badge-text shadow-sm\"\n            >\n              {uploading ? (\n                <div className=\"flex items-center gap-2\">\n                  <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\" />\n                  업로드 중...\n                </div>\n              ) : (\n                <>\n                  <Upload className=\"w-4 h-4 mr-2\" />\n                  업로드\n                </>\n              )}\n            </Button>\n          </div>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n}","import { useState, useEffect, useCallback, useMemo } from \"react\";\nimport { createClient } from \"@/lib/supabase/client\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Search, Filter, Receipt, Printer, Download, Calendar, Plus, Trash2 } from \"lucide-react\";\nimport { toast } from \"sonner\";\nimport ReceiptDetailModal from \"./ReceiptDetailModal\";\nimport MobileReceiptCard from \"./MobileReceiptCard\";\nimport ReceiptUploadModal from \"./ReceiptUploadModal\";\nimport { useReceiptPermissions } from \"@/hooks/useReceiptPermissions\";\nimport type { ReceiptItem } from \"@/types/receipt\";\nimport { formatDate, formatFileSize, extractStoragePathFromUrl } from \"@/utils/receipt\";\nimport { logger } from \"@/lib/logger\";\n\n/**\n * 영수증 관리 메인 페이지 컴포넌트\n * \n * 영수증 목록 조회, 검색, 필터링, 업로드, 다운로드, 인쇄, 삭제 기능을 제공합니다.\n * 사용자 권한에 따라 기능이 제한됩니다.\n * \n * @component\n * \n * ### 주요 기능\n * - 영수증 목록 조회 (데스크톱: 테이블, 모바일: 카드)\n * - 파일명, 메모, 날짜 기반 검색\n * - 날짜 필터링\n * - 권한 기반 UI 제어\n * - 영수증 상세보기 모달\n * - 업로드 모달\n * \n * ### 권한 체계\n * - `app_admin`: 모든 기능 + 삭제 + 등록인 정보 조회\n * - `hr`, `lead buyer`: 조회, 업로드, 다운로드, 인쇄\n * - 기타: 접근 불가\n * \n * @example\n * ```tsx\n * // App.tsx에서 라우팅\n * <Route path=\"/receipts\" element={<ReceiptsMain />} />\n * ```\n */\nexport default function ReceiptsMain() {\n  const [receipts, setReceipts] = useState<ReceiptItem[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [dateFilter, setDateFilter] = useState(\"\");\n  const [selectedReceipt, setSelectedReceipt] = useState<ReceiptItem | null>(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isUploadModalOpen, setIsUploadModalOpen] = useState(false);\n\n  const supabase = createClient();\n  const { permissions, loading: permissionsLoading } = useReceiptPermissions();\n\n  // 권한 없는 사용자 접근 차단\n  useEffect(() => {\n    if (!permissionsLoading && !permissions.canView) {\n      toast.error('영수증 관리에 접근할 권한이 없습니다.');\n      // 적절한 페이지로 리다이렉트 가능\n    }\n  }, [permissions.canView, permissionsLoading]);\n\n  // 영수증 데이터 로드 - useCallback으로 최적화\n  const loadReceipts = useCallback(async () => {\n    if (!permissions.canView) return;\n    \n    try {\n      setLoading(true);\n      \n      const { data, error } = await supabase\n        .from('purchase_receipts')\n        .select(`\n          id,\n          receipt_image_url,\n          file_name,\n          file_size,\n          uploaded_by,\n          uploaded_by_name,\n          uploaded_at,\n          memo,\n          is_printed,\n          printed_at,\n          printed_by,\n          printed_by_name\n        `)\n        .order('uploaded_at', { ascending: false });\n\n      if (error) throw error;\n\n      setReceipts(data || []);\n    } catch (error) {\n      toast.error('영수증 데이터를 불러오는데 실패했습니다.');\n    } finally {\n      setLoading(false);\n    }\n  }, [permissions.canView, supabase]);\n\n  // 필터링 로직 - useMemo로 최적화\n  const filteredReceipts = useMemo(() => {\n    let filtered = [...receipts];\n\n    // 검색어 필터\n    if (searchTerm) {\n      const searchLower = searchTerm.toLowerCase();\n      filtered = filtered.filter(receipt => \n        receipt.file_name.toLowerCase().includes(searchLower) ||\n        receipt.memo?.toLowerCase().includes(searchLower) ||\n        formatDate(receipt.uploaded_at).includes(searchTerm) ||\n        receipt.uploaded_at.includes(searchTerm)\n      );\n    }\n\n    // 날짜 필터\n    if (dateFilter) {\n      filtered = filtered.filter(receipt => {\n        if (!receipt.uploaded_at) return false;\n        const uploadDate = new Date(receipt.uploaded_at).toISOString().split('T')[0];\n        return uploadDate === dateFilter;\n      });\n    }\n\n    return filtered;\n  }, [receipts, searchTerm, dateFilter]);\n\n  // 컴포넌트 마운트 시 데이터 로드\n  useEffect(() => {\n    if (!permissionsLoading) {\n      loadReceipts();\n    }\n  }, [loadReceipts, permissionsLoading]);\n\n  // formatDate는 utils에서 import하므로 제거\n\n  // 영수증 상세보기\n  const handleViewReceipt = (receipt: ReceiptItem) => {\n    setSelectedReceipt(receipt);\n    setIsModalOpen(true);\n  };\n\n  // 영수증 인쇄 완료 처리\n  const markAsPrinted = useCallback(async (receiptId: string) => {\n    logger.debug('영수증 인쇄 완료 처리 시작', {\n      receiptId,\n      timestamp: new Date().toISOString(),\n      location: 'ReceiptsMain.tsx'\n    });\n\n    try {\n      // 1. 사용자 인증 정보 확인\n      const { data: { user }, error: authError } = await supabase.auth.getUser();\n      \n      if (authError) {\n        toast.error('사용자 인증에 실패했습니다.');\n        return;\n      }\n      \n      if (!user) {\n        toast.error('사용자 정보를 불러올 수 없습니다.');\n        return;\n      }\n\n      logger.debug('사용자 인증 정보 확인 완료', {\n        userId: user.id,\n        email: user.email,\n        lastSignIn: user.last_sign_in_at\n      });\n\n      // 2. 사용자 권한 및 정보 확인\n      const { data: employee, error: empError } = await supabase\n        .from('employees')\n        .select('name, purchase_role')\n        .eq('email', user.email)\n        .single();\n\n      if (empError) {\n        toast.error('직원 정보를 불러올 수 없습니다.');\n        return;\n      }\n\n      logger.debug('직원 정보 조회 완료', {\n        name: employee?.name,\n        email: user.email,\n        role: employee?.purchase_role\n      });\n\n      // 3. 권한 검증\n      const role = employee?.purchase_role || '';\n      const hasPermission = role.includes('app_admin') || role.includes('hr') || role.includes('lead buyer');\n      \n      logger.debug('권한 검증 결과', {\n        role,\n        hasPermission,\n        isAppAdmin: role.includes('app_admin'),\n        isHr: role.includes('hr'),\n        isLeadBuyer: role.includes('lead buyer')\n      });\n\n      if (!hasPermission) {\n        toast.error('인쇄완료 처리 권한이 없습니다.');\n        return;\n      }\n\n      // 4. 업데이트 데이터 준비\n      const updateData = {\n        is_printed: true,\n        printed_at: new Date().toISOString(),\n        printed_by: user.id,\n        printed_by_name: employee?.name || user.email\n      };\n\n\n      // 5. 데이터베이스 업데이트 실행\n      const startTime = performance.now();\n      \n      const { data: updateResult, error: updateError } = await supabase\n        .from('purchase_receipts')\n        .update(updateData)\n        .eq('id', receiptId)\n        .select('*');\n\n      const endTime = performance.now();\n      const executionTime = endTime - startTime;\n\n      if (updateError) {\n        logger.error('영수증 인쇄완료 업데이트 실패', updateError, {\n          error: updateError,\n          code: updateError.code,\n          message: updateError.message,\n          details: updateError.details,\n          hint: updateError.hint,\n          executionTime: `${executionTime.toFixed(2)}ms`\n        });\n        \n        // RLS 관련 오류 특별 처리\n        if (updateError.code === '42501' || updateError.message?.includes('policy')) {\n          toast.error('데이터베이스 권한 오류가 발생했습니다. 관리자에게 문의하세요.');\n        } else {\n          toast.error(`업데이트 실패: ${updateError.message}`);\n        }\n        return;\n      }\n\n      logger.debug('영수증 인쇄완료 업데이트 성공', {\n        updateResult,\n        executionTime: `${executionTime.toFixed(2)}ms`,\n        affectedRows: updateResult?.length || 0\n      });\n\n      // 6. 성공 처리\n      toast.success('인쇄 완료로 표시되었습니다.');\n      \n      // 7. 목록 새로고침\n      loadReceipts();\n\n      logger.debug('영수증 인쇄완료 처리 성공', {\n        receiptId,\n        success: true,\n        timestamp: new Date().toISOString()\n      });\n\n    } catch (error) {\n      const errorObj = error as any;\n      logger.error('영수증 인쇄완료 처리 중 예외 발생', error, {\n        error,\n        message: errorObj?.message,\n        stack: errorObj?.stack,\n        receiptId,\n        timestamp: new Date().toISOString()\n      });\n      \n      toast.error(`인쇄 완료 처리에 실패했습니다: ${errorObj?.message || '알 수 없는 오류'}`);\n    }\n  }, [supabase, loadReceipts]);\n\n  // 영수증 인쇄\n  const handlePrintReceipt = async (receipt: ReceiptItem) => {\n    if (!receipt.receipt_image_url) {\n      toast.error('영수증 이미지가 없습니다.');\n      return;\n    }\n\n    try {\n      // 새 창에서 인쇄용 페이지 열기\n      const printWindow = window.open('', '_blank');\n      if (!printWindow) {\n        toast.error('팝업이 차단되었습니다. 팝업을 허용해주세요.');\n        return;\n      }\n\n      printWindow.document.write(`\n        <!DOCTYPE html>\n        <html>\n        <head>\n          <title>영수증 인쇄</title>\n          <style>\n            * {\n              margin: 0;\n              padding: 0;\n              box-sizing: border-box;\n            }\n            body {\n              display: flex;\n              justify-content: center;\n              align-items: center;\n              min-height: 100vh;\n              background: white;\n            }\n            .receipt-image {\n              max-width: 100%;\n              max-height: 100vh;\n              object-fit: contain;\n            }\n            @media print {\n              body {\n                margin: 0;\n                padding: 0;\n              }\n              .receipt-image {\n                max-width: 100%;\n                max-height: 100%;\n                width: auto;\n                height: auto;\n              }\n            }\n          </style>\n        </head>\n        <body>\n          <img \n            src=\"${receipt.receipt_image_url}\" \n            alt=\"영수증\" \n            class=\"receipt-image\"\n            onload=\"window.print(); window.close();\"\n            onerror=\"alert('이미지를 불러올 수 없습니다.'); window.close();\"\n          />\n        </body>\n        </html>\n      `);\n      \n      printWindow.document.close();\n\n      // 인쇄 완료 확인 다이얼로그\n      setTimeout(() => {\n        if (confirm('인쇄를 완료하셨습니까?')) {\n          markAsPrinted(receipt.id);\n        }\n      }, 1000);\n    } catch (error) {\n      toast.error('인쇄에 실패했습니다.');\n    }\n  };\n\n  // 영수증 이미지 다운로드\n  const handleDownloadReceipt = async (receipt: ReceiptItem) => {\n    if (!receipt.receipt_image_url) {\n      toast.error('영수증 이미지가 없습니다.');\n      return;\n    }\n\n    try {\n      // URL에서 파일 경로 추출 (Supabase Storage 경로)\n      const url = new URL(receipt.receipt_image_url);\n      const pathSegments = url.pathname.split('/');\n      const bucketIndex = pathSegments.indexOf('receipt-images');\n      \n      if (bucketIndex === -1) {\n        throw new Error('잘못된 영수증 URL입니다');\n      }\n      \n      const filePath = pathSegments.slice(bucketIndex + 1).join('/');\n\n      // Supabase Storage에서 다운로드\n      const { data, error } = await supabase.storage\n        .from('receipt-images')\n        .download(filePath);\n\n      if (error) throw error;\n\n      // Blob을 다운로드 가능한 URL로 변환\n      const blob = new Blob([data], { type: 'image/jpeg' });\n      const downloadUrl = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = downloadUrl;\n      a.download = receipt.file_name || `영수증_${receipt.id}.jpg`;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      window.URL.revokeObjectURL(downloadUrl);\n      \n      toast.success('영수증 이미지가 다운로드되었습니다.');\n    } catch (error) {\n      toast.error('다운로드에 실패했습니다.');\n    }\n  };\n\n  // 영수증 삭제 - useCallback으로 최적화\n  const handleDeleteReceipt = useCallback(async (receipt: ReceiptItem) => {\n    if (!permissions.canDelete) {\n      toast.error('삭제 권한이 없습니다.');\n      return;\n    }\n\n    if (!confirm(`정말로 \"${receipt.file_name}\" 영수증을 삭제하시겠습니까?`)) {\n      return;\n    }\n\n    try {\n      // URL에서 파일 경로 추출 (유틸리티 함수 사용)\n      const filePath = extractStoragePathFromUrl(receipt.receipt_image_url);\n      \n      if (filePath) {\n        logger.debug('Storage 파일 삭제 시작', { filePath });\n        \n        // Supabase Storage에서 파일 삭제\n        const { error: storageError } = await supabase.storage\n          .from('receipt-images')\n          .remove([filePath]);\n\n        if (storageError) {\n          logger.warn('Storage 파일 삭제 실패', storageError, { filePath });\n        }\n      }\n\n      // DB에서 레코드 삭제\n      const { error: dbError } = await supabase\n        .from('purchase_receipts')\n        .delete()\n        .eq('id', receipt.id);\n\n      if (dbError) throw dbError;\n\n      toast.success('영수증이 삭제되었습니다.');\n      loadReceipts(); // 목록 새로고침\n    } catch (error) {\n      toast.error('삭제에 실패했습니다.');\n    }\n  }, [permissions.canDelete, loadReceipts]);\n\n  return (\n    <div className=\"w-full\">\n      {/* Header */}\n      <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between mb-4\">\n        <div>\n          <h1 className=\"page-title\">영수증 관리</h1>\n          <p className=\"page-subtitle\" style={{marginTop:'-2px',marginBottom:'-4px'}}>Receipt Management</p>\n        </div>\n        <div className=\"flex items-center gap-2 mt-4 sm:mt-0\">\n          <Button\n            onClick={() => {\n              setIsUploadModalOpen(true);\n            }}\n            className=\"bg-hansl-600 hover:bg-hansl-700 text-white\"\n          >\n            <Plus className=\"w-4 h-4 mr-2\" />\n            영수증 업로드\n          </Button>\n          <Badge variant=\"secondary\" className=\"modal-subtitle\">\n            총 {filteredReceipts.length}건\n          </Badge>\n        </div>\n      </div>\n\n      {/* 필터 섹션 */}\n      <Card className=\"mb-4 border border-gray-200\">\n        <CardHeader className=\"bg-white border-b border-gray-200 py-3\">\n          <CardTitle className=\"flex items-center text-gray-900 modal-section-title\">\n            <Filter className=\"w-4 h-4 mr-2\" />\n            검색 필터\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"py-3\">\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-2\">\n            <div>\n              <label className=\"block modal-label text-gray-600 mb-1\">검색</label>\n              <div className=\"relative\">\n                <Search className=\"absolute left-2 top-1/2 transform -translate-y-1/2 w-3 h-3 text-gray-400\" />\n                <Input\n                  placeholder=\"파일명, 메모, 업로드일...\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  className=\"pl-7 modal-subtitle h-9\"\n                />\n              </div>\n            </div>\n\n            <div>\n              <label className=\"block modal-label text-gray-600 mb-1\">업로드 날짜</label>\n              <Input\n                type=\"date\"\n                value={dateFilter}\n                onChange={(e) => setDateFilter(e.target.value)}\n                className=\"modal-subtitle h-9\"\n              />\n            </div>\n\n            <div className=\"flex items-end\">\n              <Button\n                variant=\"outline\"\n                onClick={() => {\n                  setSearchTerm(\"\");\n                  setDateFilter(\"\");\n                }}\n                className=\"h-9 modal-subtitle\"\n              >\n                초기화\n              </Button>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* 영수증 목록 */}\n      <Card className=\"overflow-hidden border border-gray-200\">\n        <CardContent className=\"p-0\">\n          {(loading || permissionsLoading) ? (\n            <div className=\"flex items-center justify-center py-12\">\n              <div className=\"w-8 h-8 border-2 border-hansl-500 border-t-transparent rounded-full animate-spin\" />\n              <span className=\"ml-3 text-gray-600\">로딩 중...</span>\n            </div>\n          ) : !permissions.canView ? (\n            <div className=\"text-center py-12\">\n              <div className=\"w-12 h-12 text-red-400 mx-auto mb-4\">🔒</div>\n              <h3 className=\"modal-section-title text-gray-900 mb-2\">접근 권한 없음</h3>\n              <p className=\"text-gray-600\">영수증 관리에 접근할 권한이 없습니다.</p>\n            </div>\n          ) : filteredReceipts.length === 0 ? (\n            <div className=\"text-center py-12\">\n              <Receipt className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\n              <h3 className=\"modal-section-title text-gray-900 mb-2\">영수증이 없습니다</h3>\n              <p className=\"text-gray-600\">업로드된 영수증이 없거나 검색 조건에 맞는 결과가 없습니다.</p>\n            </div>\n          ) : (\n            <>\n              {/* 데스크톱 테이블 뷰 */}\n              <div className=\"hidden md:block overflow-x-auto\">\n                <table className=\"w-full min-w-fit\">\n                <thead className=\"bg-gray-50\">\n                  <tr>\n                    <th className=\"px-4 py-3 text-center header-title text-gray-600 uppercase tracking-wider\">인쇄완료</th>\n                    <th className=\"px-4 py-3 text-center header-title text-gray-600 uppercase tracking-wider\">업로드일</th>\n                    <th className=\"px-4 py-3 text-left header-title text-gray-600 uppercase tracking-wider\">파일명</th>\n                    <th className=\"px-4 py-3 text-left header-title text-gray-600 uppercase tracking-wider\">메모</th>\n                    {permissions.canViewUploaderInfo && (\n                      <th className=\"px-4 py-3 text-left header-title text-gray-600 uppercase tracking-wider\">등록인</th>\n                    )}\n                    <th className=\"px-4 py-3 text-center header-title text-gray-600 uppercase tracking-wider\">크기</th>\n                    <th className=\"px-4 py-3 text-center header-title text-gray-600 uppercase tracking-wider\">액션</th>\n                    {permissions.canDelete && (\n                      <th className=\"px-4 py-3 text-center header-title text-gray-600 uppercase tracking-wider\">삭제</th>\n                    )}\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-200\">\n                  {filteredReceipts.map((receipt) => (\n                    <tr \n                      key={receipt.id} \n                      className=\"hover:bg-gray-50 transition-colors cursor-pointer\"\n                      onClick={() => handleViewReceipt(receipt)}\n                    >\n                      <td className=\"px-4 py-3 modal-subtitle text-center\">\n                        {receipt.is_printed ? (\n                          <Badge className=\"bg-green-100 text-green-700 hover:bg-green-100\">\n                            ✓ 완료\n                          </Badge>\n                        ) : (\n                          <Badge variant=\"secondary\" className=\"bg-gray-100 text-gray-600\">\n                            미완료\n                          </Badge>\n                        )}\n                      </td>\n                      <td className=\"px-4 py-3 modal-subtitle text-center text-gray-600\">\n                        {formatDate(receipt.uploaded_at)}\n                      </td>\n                      <td className=\"px-4 py-3 modal-value text-gray-900\">\n                        {receipt.file_name}\n                      </td>\n                      <td className=\"px-4 py-3 modal-subtitle text-gray-900\">\n                        {receipt.memo || '-'}\n                      </td>\n                      {permissions.canViewUploaderInfo && (\n                        <td className=\"px-4 py-3 modal-subtitle text-gray-600\">\n                          {receipt.uploaded_by_name || receipt.uploaded_by}\n                        </td>\n                      )}\n                      <td className=\"px-4 py-3 modal-subtitle text-center text-gray-600\">\n                        {formatFileSize(receipt.file_size)}\n                      </td>\n                      <td className=\"px-4 py-3 modal-subtitle text-center\">\n                        <div className=\"flex items-center justify-center gap-1\">\n                          <Button\n                            size=\"sm\"\n                            variant=\"ghost\"\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              handlePrintReceipt(receipt);\n                            }}\n                            className=\"h-8 w-8 p-0\"\n                            title=\"인쇄\"\n                          >\n                            <Printer className=\"w-4 h-4\" />\n                          </Button>\n                          <Button\n                            size=\"sm\"\n                            variant=\"ghost\"\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              handleDownloadReceipt(receipt);\n                            }}\n                            className=\"h-8 w-8 p-0\"\n                            title=\"다운로드\"\n                          >\n                            <Download className=\"w-4 h-4\" />\n                          </Button>\n                        </div>\n                      </td>\n                      {permissions.canDelete && (\n                        <td className=\"px-4 py-3 modal-subtitle text-center\">\n                          <Button\n                            size=\"sm\"\n                            variant=\"ghost\"\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              handleDeleteReceipt(receipt);\n                            }}\n                            className=\"h-8 w-8 p-0 text-red-600 hover:bg-red-50\"\n                            title=\"삭제\"\n                          >\n                            <Trash2 className=\"w-4 h-4\" />\n                          </Button>\n                        </td>\n                      )}\n                    </tr>\n                  ))}\n                </tbody>\n                </table>\n              </div>\n\n              {/* 모바일 카드 뷰 */}\n              <div className=\"md:hidden space-y-3 p-4\">\n                {filteredReceipts.map((receipt) => (\n                  <MobileReceiptCard\n                    key={receipt.id}\n                    receipt={receipt}\n                    onView={handleViewReceipt}\n                    onPrint={handlePrintReceipt}\n                    onDownload={handleDownloadReceipt}\n                    onDelete={permissions.canDelete ? handleDeleteReceipt : undefined}\n                  />\n                ))}\n              </div>\n            </>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* 영수증 상세보기 모달 */}\n      {selectedReceipt && (\n        <ReceiptDetailModal\n          receipt={selectedReceipt}\n          isOpen={isModalOpen}\n          onClose={() => {\n            setIsModalOpen(false);\n            setSelectedReceipt(null);\n          }}\n          onDelete={() => {\n            loadReceipts(); // 삭제 후 목록 새로고침\n          }}\n        />\n      )}\n\n      {/* 영수증 업로드 모달 */}\n      <ReceiptUploadModal\n        isOpen={isUploadModalOpen}\n        onClose={() => setIsUploadModalOpen(false)}\n        onSuccess={() => {\n          loadReceipts(); // 업로드 후 목록 새로고침\n        }}\n      />\n    </div>\n  );\n}"],"names":["FileImage","createLucideIcon","d","key","cx","cy","r","Funnel","Printer","x","y","width","height","rx","RotateCcw","Upload","ZoomIn","x1","x2","y1","y2","ZoomOut","useReceiptPermissions","permissions","setPermissions","useState","canView","canUpload","canDownload","canPrint","canDelete","canViewUploaderInfo","userRole","setUserRole","loading","setLoading","supabase","createClient","checkPermissions","async","data","user","auth","getUser","employee","from","select","eq","email","single","role","purchase_role","isAppAdmin","includes","isHr","isLeadBuyer","hasReceiptAccess","error","useEffect","refreshPermissions","ReceiptDetailModal","receipt","isOpen","onClose","onDelete","imageScale","setImageScale","imageRotation","setImageRotation","imageError","setImageError","deleting","setDeleting","imageDimensions","setImageDimensions","imageLoaded","setImageLoaded","markAsPrinted","useCallback","logger","debug","receiptId","id","receiptName","file_name","authError","toast","empError","updateData","is_printed","printed_at","Date","toISOString","printed_by","printed_by_name","name","startTime","performance","now","updateResult","updateError","update","code","message","success","errorObj","handlePrint","printWindow","window","open","document","write","receipt_image_url","close","setTimeout","confirm","handleDelete","pathSegments","URL","pathname","split","bucketIndex","indexOf","filePath","slice","join","storageError","storage","remove","warn","dbError","delete","jsx","Dialog","onOpenChange","children","DialogContent","className","jsxs","src","alt","style","containerWidth","innerWidth","containerHeight","innerHeight","widthRatio","heightRatio","optimalRatio","Math","min","getOptimalImageStyle","transform","transformOrigin","onLoad","e","img","currentTarget","naturalWidth","naturalHeight","onError","Button","variant","size","onClick","X","max","prev","disabled","round","title","Error","download","blob","Blob","type","downloadUrl","createObjectURL","a","createElement","href","body","appendChild","click","removeChild","revokeObjectURL","Download","Trash2","formatFileSize","bytes","i","floor","log","parseFloat","pow","toFixed","formatDate","dateStr","date","isNaN","getTime","toLocaleDateString","year","month","day","MobileReceiptCard","onView","onPrint","onDownload","Card","CardContent","Badge","Calendar","uploaded_at","FileText","memo","User","uploaded_by_name","uploaded_by","file_size","stopPropagation","ReceiptUploadModal","onSuccess","file","setFile","setMemo","uploading","setUploading","dragOver","setDragOver","handleFileSelect","selectedFile","startsWith","handleUpload","userError","employeeError","userName","fileExtension","pop","fileName","getFullYear","toString","substring","getMonth","padStart","getDate","getHours","getMinutes","uploadError","upload","contentType","upsert","publicUrl","getPublicUrl","insert","handleClose","DialogHeader","DialogTitle","DialogDescription","Label","onDragOver","preventDefault","onDragLeave","onDrop","files","Array","dataTransfer","length","accept","onChange","target","htmlFor","Textarea","placeholder","value","rows","Fragment","ReceiptsMain","receipts","setReceipts","searchTerm","setSearchTerm","dateFilter","setDateFilter","selectedReceipt","setSelectedReceipt","isModalOpen","setIsModalOpen","isUploadModalOpen","setIsUploadModalOpen","permissionsLoading","loadReceipts","order","ascending","filteredReceipts","useMemo","filtered","searchLower","toLowerCase","filter","handleViewReceipt","timestamp","location","userId","lastSignIn","last_sign_in_at","hasPermission","executionTime","details","hint","affectedRows","stack","handlePrintReceipt","handleDownloadReceipt","handleDeleteReceipt","url","bucketName","extractStoragePathFromUrl","marginTop","marginBottom","Plus","CardHeader","CardTitle","Filter","Search","Input","Receipt","map"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6]}