{"version":3,"file":"PurchaseItemsModal-DUMD-p2P.js","sources":["../../node_modules/lucide-react/dist/esm/icons/file-x.js","../../src/components/purchase/ReceiptDownloadButton.tsx","../../src/components/purchase/PurchaseItemsModal.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z\", key: \"1rqfz7\" }],\n  [\"path\", { d: \"M14 2v4a2 2 0 0 0 2 2h4\", key: \"tnqrlb\" }],\n  [\"path\", { d: \"m14.5 12.5-5 5\", key: \"b62r18\" }],\n  [\"path\", { d: \"m9.5 12.5 5 5\", key: \"1rk7el\" }]\n];\nconst FileX = createLucideIcon(\"file-x\", __iconNode);\n\nexport { __iconNode, FileX as default };\n//# sourceMappingURL=file-x.js.map\n","import React from 'react';\nimport { Download, Eye, FileX } from 'lucide-react';\nimport { createClient } from '@/lib/supabase/client';\n\ninterface ReceiptDownloadButtonProps {\n  itemId: number;\n  receiptUrl?: string | null;\n  itemName: string;\n  paymentCategory?: string | null; // 현장결제 여부 확인용\n  onUpdate?: () => void;\n}\n\n/**\n * 웹앱용 영수증 다운로드 버튼\n * 구매 담당자가 모바일 앱에서 업로드한 영수증을 확인/다운로드할 수 있습니다\n */\nexport const ReceiptDownloadButton: React.FC<ReceiptDownloadButtonProps> = ({\n  itemId,\n  receiptUrl,\n  itemName,\n  paymentCategory,\n  onUpdate,\n}) => {\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  // 현장결제가 아니면 표시 안함\n  if (paymentCategory !== '현장 결제' && paymentCategory !== '현장결제') {\n    return null;\n  }\n\n  /**\n   * 영수증 다운로드 핸들러\n   */\n  const handleDownload = async () => {\n    if (!receiptUrl) return;\n\n    setIsLoading(true);\n\n    try {\n      // URL에서 파일 경로 추출\n      const url = new URL(receiptUrl);\n      const pathSegments = url.pathname.split('/');\n      const bucketIndex = pathSegments.indexOf('receipt-images');\n      \n      if (bucketIndex === -1) {\n        throw new Error('잘못된 영수증 URL입니다');\n      }\n      \n      const filePath = pathSegments.slice(bucketIndex + 1).join('/');\n\n      console.log('📥 영수증 다운로드 시작:', filePath);\n\n      // Supabase Storage에서 다운로드\n      const supabase = createClient();\n      const { data, error } = await supabase.storage\n        .from('receipt-images')\n        .download(filePath);\n\n      if (error) throw error;\n\n      // Blob을 다운로드 가능한 URL로 변환\n      const blob = new Blob([data], { type: 'image/jpeg' });\n      const downloadUrl = window.URL.createObjectURL(blob);\n\n      // 다운로드 트리거\n      const link = document.createElement('a');\n      link.href = downloadUrl;\n      link.download = `영수증_${itemName}_${itemId}_${Date.now()}.jpg`;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n\n      // 메모리 해제\n      window.URL.revokeObjectURL(downloadUrl);\n\n      console.log('✅ 영수증 다운로드 완료');\n      \n      // 성공 메시지 (선택적)\n      if (typeof window !== 'undefined' && window.alert) {\n        alert('✅ 영수증이 다운로드되었습니다.');\n      }\n    } catch (error) {\n      console.error('❌ 영수증 다운로드 오류:', error);\n      alert(`❌ 다운로드 실패: ${error instanceof Error ? error.message : error}`);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  /**\n   * 영수증 새 탭에서 보기\n   */\n  const handleViewInNewTab = () => {\n    if (!receiptUrl) return;\n    window.open(receiptUrl, '_blank', 'noopener,noreferrer');\n  };\n\n  /**\n   * 영수증 미리보기 모달\n   */\n  const handlePreview = () => {\n    if (!receiptUrl) return;\n\n    // 간단한 모달로 이미지 표시\n    const modal = document.createElement('div');\n    modal.style.cssText = `\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background: rgba(0, 0, 0, 0.9);\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      z-index: 9999;\n      cursor: pointer;\n    `;\n\n    const img = document.createElement('img');\n    img.src = receiptUrl;\n    img.style.cssText = `\n      max-width: 90%;\n      max-height: 90%;\n      object-fit: contain;\n      border-radius: 8px;\n    `;\n\n    modal.appendChild(img);\n    modal.onclick = () => document.body.removeChild(modal);\n    document.body.appendChild(modal);\n  };\n\n  // 영수증이 없는 경우\n  if (!receiptUrl) {\n    return (\n      <div className=\"flex items-center gap-2 text-gray-400\">\n        <FileX className=\"w-4 h-4\" />\n        <span className=\"text-sm\">영수증 없음</span>\n      </div>\n    );\n  }\n\n  // 영수증이 있는 경우\n  return (\n    <div className=\"flex items-center gap-2\">\n      {/* 미리보기 버튼 */}\n      <button\n        onClick={handlePreview}\n        className=\"inline-flex items-center gap-1.5 px-3 py-1.5 text-sm font-semibold text-white bg-blue-500 hover:bg-blue-600 rounded-md transition-colors\"\n        title=\"영수증 미리보기\"\n      >\n        <Eye className=\"w-4 h-4\" />\n        <span>보기</span>\n      </button>\n\n      {/* 다운로드 버튼 */}\n      <button\n        onClick={handleDownload}\n        disabled={isLoading}\n        className=\"inline-flex items-center gap-1.5 px-3 py-1.5 text-sm font-semibold text-white bg-green-500 hover:bg-green-600 disabled:bg-gray-400 disabled:cursor-not-allowed rounded-md transition-colors\"\n        title=\"영수증 다운로드\"\n      >\n        <Download className=\"w-4 h-4\" />\n        <span>{isLoading ? '다운로드 중...' : '다운로드'}</span>\n      </button>\n    </div>\n  );\n};\n\n/**\n * 사용 예시 (발주 상세 모달 - 현장결제만):\n * \n * import { ReceiptDownloadButton } from '@/components/purchase/ReceiptDownloadButton';\n * \n * // 현장결제인 경우에만 테이블 컬럼 추가:\n * {purchase.payment_category === '현장 결제' && <TableHead>영수증</TableHead>}\n * \n * {purchase.payment_category === '현장 결제' && (\n *   <TableCell>\n *     <ReceiptDownloadButton\n *       itemId={item.id}\n *       receiptUrl={item.receipt_image_url}\n *       itemName={item.item_name}\n *       paymentCategory={purchase.payment_category}\n *       onUpdate={() => refetch()}\n *     />\n *   </TableCell>\n * )}\n */\n\n","\nimport { useState } from \"react\";\nimport { X, Edit2, Save, Plus, Trash2 } from \"lucide-react\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from \"@/components/ui/dialog\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { format } from \"date-fns\";\nimport { createClient } from \"@/lib/supabase/client\";\nimport { toast } from \"sonner\";\nimport { ReceiptDownloadButton } from \"./ReceiptDownloadButton\";\n\ninterface PurchaseItem {\n  id?: number | string;\n  line_number?: number;\n  item_name: string;\n  specification?: string;\n  quantity: number;\n  unit_price_value?: number;\n  amount_value?: number;\n  remark?: string;\n  link?: string;\n  is_received?: boolean;\n  delivery_status?: string;\n  receipt_image_url?: string | null;\n  receipt_uploaded_at?: string | null;\n  receipt_uploaded_by?: string | null;\n}\n\ninterface PurchaseItemsModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  purchase: {\n    id: number;\n    purchase_order_number?: string;\n    vendor_name: string;\n    requester_name: string;\n    project_vendor: string;\n    sales_order_number: string;\n    project_item: string;\n    request_date: string;\n    delivery_request_date?: string;\n    currency: string;\n    items?: PurchaseItem[];\n    total_amount: number;\n  };\n  isAdmin: boolean;\n  onUpdate: () => void;\n}\n\nexport default function PurchaseItemsModal({ isOpen, onClose, purchase, isAdmin, onUpdate }: PurchaseItemsModalProps) {\n  const [editingItems, setEditingItems] = useState<PurchaseItem[]>(purchase.items || []);\n  const [isEditing, setIsEditing] = useState(false);\n  const supabase = createClient();\n  \n  // 품목 수정 시작\n  const handleEditStart = () => {\n    setIsEditing(true);\n    setEditingItems([...purchase.items || []]);\n  };\n\n  // 품목 수정 취소\n  const handleEditCancel = () => {\n    setIsEditing(false);\n    setEditingItems(purchase.items || []);\n  };\n\n  // 품목 값 변경\n  const handleItemChange = (index: number, field: keyof PurchaseItem, value: any) => {\n    const newItems = [...editingItems];\n    newItems[index] = {\n      ...newItems[index],\n      [field]: field === 'quantity' || field === 'unit_price_value' || field === 'amount_value' ? Number(value) : value\n    };\n    \n    // 금액 자동 계산 (amount_value를 직접 수정하는 경우가 아닐 때만)\n    if (field === 'quantity' || field === 'unit_price_value') {\n      newItems[index].amount_value = newItems[index].quantity * (newItems[index].unit_price_value || 0);\n    }\n    \n    setEditingItems(newItems);\n  };\n\n  // 새 품목 추가\n  const handleAddItem = () => {\n    const newItem: PurchaseItem = {\n      line_number: editingItems.length + 1,\n      item_name: '',\n      specification: '',\n      quantity: 0,\n      unit_price_value: 0,\n      amount_value: 0,\n      remark: '',\n      is_received: false\n    };\n    setEditingItems([...editingItems, newItem]);\n  };\n\n  // 품목 삭제\n  const handleDeleteItem = (index: number) => {\n    const newItems = editingItems.filter((_, i) => i !== index);\n    // line_number 재정렬\n    newItems.forEach((item, i) => {\n      item.line_number = i + 1;\n    });\n    setEditingItems(newItems);\n  };\n\n  // 품목 저장\n  const handleSave = async () => {\n    try {\n      // 기존 품목 삭제\n      await supabase\n        .from('purchase_request_items')\n        .delete()\n        .eq('purchase_request_id', purchase.id);\n\n      // 새 품목 추가\n      const itemsToInsert = editingItems.map(item => ({\n        purchase_request_id: purchase.id,\n        purchase_order_number: purchase.purchase_order_number,\n        line_number: item.line_number,\n        item_name: item.item_name,\n        specification: item.specification,\n        quantity: item.quantity,\n        unit_price_value: item.unit_price_value,\n        amount_value: item.amount_value,\n        remark: item.remark,\n        link: item.link,\n        is_received: item.is_received || false,\n        delivery_status: item.delivery_status || 'pending'\n      }));\n\n      const { error } = await supabase\n        .from('purchase_request_items')\n        .insert(itemsToInsert);\n\n      if (error) throw error;\n\n      // 총금액 업데이트\n      const totalAmount = editingItems.reduce((sum, item) => sum + (item.amount_value || 0), 0);\n      await supabase\n        .from('purchase_requests')\n        .update({ total_amount: totalAmount })\n        .eq('id', purchase.id);\n\n      toast.success('품목이 수정되었습니다.');\n      setIsEditing(false);\n      onUpdate();\n      onClose();\n    } catch (error) {\n      toast.error('저장 중 오류가 발생했습니다.');\n    }\n  };\n  \n  const items = isEditing ? editingItems : (purchase.items || []);\n  const totalAmount = items.reduce((sum, item) => sum + (item.amount_value || 0), 0);\n  \n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent className=\"w-full max-w-[95vw] sm:max-w-6xl max-h-[80vh] overflow-hidden flex flex-col bg-white\">\n        <DialogHeader className=\"flex-shrink-0\">\n          <div className=\"flex items-center justify-between\">\n            <DialogTitle className=\"text-xl font-bold\">\n              발주 상세 항목 - {purchase.purchase_order_number}\n            </DialogTitle>\n            <div className=\"flex items-center gap-2\">\n              {isAdmin && !isEditing && (\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={handleEditStart}\n                >\n                  <Edit2 className=\"h-4 w-4 mr-1\" />\n                  편집\n                </Button>\n              )}\n              {isEditing && (\n                <>\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={handleAddItem}\n                  >\n                    <Plus className=\"h-4 w-4 mr-1\" />\n                    품목 추가\n                  </Button>\n                  <Button\n                    variant=\"default\"\n                    size=\"sm\"\n                    onClick={handleSave}\n                  >\n                    <Save className=\"h-4 w-4 mr-1\" />\n                    저장\n                  </Button>\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    onClick={handleEditCancel}\n                  >\n                    취소\n                  </Button>\n                </>\n              )}\n              <Button\n                variant=\"ghost\"\n                size=\"icon\"\n                onClick={onClose}\n                className=\"h-6 w-6\"\n              >\n                <X className=\"h-4 w-4\" />\n              </Button>\n            </div>\n          </div>\n        </DialogHeader>\n        \n        <div className=\"flex-shrink-0 grid grid-cols-2 md:grid-cols-4 gap-4 py-4 border-b\">\n          <div>\n            <p className=\"text-sm text-gray-500\">업체명</p>\n            <p className=\"font-medium\">{purchase.vendor_name}</p>\n          </div>\n          <div>\n            <p className=\"text-sm text-gray-500\">요청자</p>\n            <p className=\"font-medium\">{purchase.requester_name}</p>\n          </div>\n          <div>\n            <p className=\"text-sm text-gray-500\">프로젝트</p>\n            <p className=\"font-medium truncate\" title={purchase.project_vendor}>\n              {purchase.project_vendor}\n            </p>\n          </div>\n          <div>\n            <p className=\"text-sm text-gray-500\">납기일</p>\n            <p className=\"font-medium\">\n              {purchase.delivery_request_date && \n                format(new Date(purchase.delivery_request_date), 'yyyy-MM-dd')}\n            </p>\n          </div>\n        </div>\n        \n        <div className=\"flex-1 overflow-auto\">\n          <Table>\n            <TableHeader className=\"sticky top-0 bg-white z-10\">\n              <TableRow>\n                <TableHead className=\"w-12\">No.</TableHead>\n                <TableHead>품목</TableHead>\n                <TableHead>규격</TableHead>\n                <TableHead className=\"text-right\">수량</TableHead>\n                <TableHead className=\"text-right\">단가</TableHead>\n                <TableHead className=\"text-right\">금액</TableHead>\n                <TableHead>입고상태</TableHead>\n                <TableHead>영수증</TableHead>\n                <TableHead>비고</TableHead>\n                {isEditing && <TableHead className=\"w-20\">삭제</TableHead>}\n              </TableRow>\n            </TableHeader>\n            <TableBody>\n              {items.map((item, index) => (\n                <TableRow key={item.id || index}>\n                  <TableCell className=\"font-medium\">{item.line_number || index + 1}</TableCell>\n                  <TableCell>\n                    {isEditing ? (\n                      <Input\n                        value={item.item_name}\n                        onChange={(e) => handleItemChange(index, 'item_name', e.target.value)}\n                        className=\"h-8 text-sm\"\n                      />\n                    ) : (\n                      <div className=\"sm:max-w-[200px]\">\n                        <p className=\"font-medium truncate\" title={item.item_name}>\n                          {item.item_name}\n                        </p>\n                      </div>\n                    )}\n                  </TableCell>\n                  <TableCell>\n                    {isEditing ? (\n                      <Input\n                        value={item.specification}\n                        onChange={(e) => handleItemChange(index, 'specification', e.target.value)}\n                        className=\"h-8 text-sm\"\n                      />\n                    ) : (\n                      <div className=\"sm:max-w-[150px] truncate\" title={item.specification}>\n                        {item.specification}\n                      </div>\n                    )}\n                  </TableCell>\n                  <TableCell className=\"text-right\">\n                    {isEditing ? (\n                      <Input\n                        type=\"number\"\n                        value={item.quantity}\n                        onChange={(e) => handleItemChange(index, 'quantity', e.target.value)}\n                        className=\"h-8 text-sm text-right\"\n                      />\n                    ) : (\n                      <span className=\"font-medium\">{item.quantity.toLocaleString()}</span>\n                    )}\n                  </TableCell>\n                  <TableCell className=\"text-right\">\n                    {isEditing ? (\n                      <Input\n                        type=\"number\"\n                        value={item.unit_price_value}\n                        onChange={(e) => handleItemChange(index, 'unit_price_value', e.target.value)}\n                        className=\"h-8 text-sm text-right\"\n                      />\n                    ) : (\n                      <span>{(item.unit_price_value || 0).toLocaleString()} {purchase.currency}</span>\n                    )}\n                  </TableCell>\n                  <TableCell className=\"text-right\">\n                    {isEditing ? (\n                      <Input\n                        type=\"number\"\n                        value={item.amount_value}\n                        onChange={(e) => handleItemChange(index, 'amount_value', e.target.value)}\n                        className=\"h-8 text-sm text-right font-medium\"\n                      />\n                    ) : (\n                      <span className=\"font-medium\">{(item.amount_value || 0).toLocaleString()} {purchase.currency}</span>\n                    )}\n                  </TableCell>\n                  <TableCell>\n                    {item.is_received ? (\n                      <Badge className=\"bg-green-100 text-green-800\">입고완료</Badge>\n                    ) : (\n                      <Badge variant=\"outline\">대기</Badge>\n                    )}\n                  </TableCell>\n                  <TableCell>\n                    {/* 영수증 다운로드 버튼 */}\n                    <ReceiptDownloadButton\n                      itemId={Number(item.id)}\n                      receiptUrl={item.receipt_image_url}\n                      itemName={item.item_name}\n                      onUpdate={onUpdate}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    {isEditing ? (\n                      <Input\n                        value={item.remark || ''}\n                        onChange={(e) => handleItemChange(index, 'remark', e.target.value)}\n                        className=\"h-8 text-sm\"\n                        placeholder=\"비고\"\n                      />\n                    ) : (\n                      <div className=\"sm:max-w-[150px]\">\n                        <span className=\"text-sm text-gray-500 truncate block\" title={item.remark}>\n                          {item.remark || '-'}\n                        </span>\n                      </div>\n                    )}\n                  </TableCell>\n                  {isEditing && (\n                    <TableCell>\n                      <Button\n                        variant=\"ghost\"\n                        size=\"icon\"\n                        onClick={() => handleDeleteItem(index)}\n                        className=\"h-8 w-8 text-red-500 hover:text-red-700\"\n                      >\n                        <Trash2 className=\"h-4 w-4\" />\n                      </Button>\n                    </TableCell>\n                  )}\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </div>\n        \n        <div className=\"flex-shrink-0 border-t pt-4 flex justify-between items-center\">\n          <div className=\"text-sm text-gray-500\">\n            총 {items.length}개 품목\n          </div>\n          <div className=\"text-lg font-bold\">\n            총 금액: {totalAmount.toLocaleString()} {purchase.currency}\n          </div>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n}"],"names":["__iconNode","FileX","createLucideIcon","ReceiptDownloadButton","itemId","receiptUrl","itemName","paymentCategory","onUpdate","isLoading","setIsLoading","React","handleDownload","pathSegments","bucketIndex","filePath","supabase","createClient","data","error","blob","downloadUrl","link","handlePreview","modal","img","jsxs","jsx","Eye","Download","PurchaseItemsModal","isOpen","onClose","purchase","isAdmin","editingItems","setEditingItems","useState","isEditing","setIsEditing","handleEditStart","handleEditCancel","handleItemChange","index","field","value","newItems","handleAddItem","newItem","handleDeleteItem","_","i","item","handleSave","itemsToInsert","totalAmount","sum","toast","items","Dialog","DialogContent","DialogHeader","DialogTitle","Button","Edit2","Fragment","Plus","Save","X","format","Table","TableHeader","TableRow","TableHead","TableBody","TableCell","Input","e","Badge","Trash2"],"mappings":"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","x_google_ignoreList":[0]}