{"version":3,"file":"DashboardMain-DDbm5xte.js","sources":["../../node_modules/lucide-react/dist/esm/icons/arrow-right.js","../../node_modules/lucide-react/dist/esm/icons/clock.js","../../node_modules/lucide-react/dist/esm/icons/thumbs-up.js","../../node_modules/lucide-react/dist/esm/icons/triangle-alert.js","../../src/services/dashboardService.ts","../../src/components/dashboard/PurchaseStatusModal.tsx","../../src/components/dashboard/DashboardMain.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M5 12h14\", key: \"1ays0h\" }],\n  [\"path\", { d: \"m12 5 7 7-7 7\", key: \"xquz4c\" }]\n];\nconst ArrowRight = createLucideIcon(\"arrow-right\", __iconNode);\n\nexport { __iconNode, ArrowRight as default };\n//# sourceMappingURL=arrow-right.js.map\n","/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M12 6v6l4 2\", key: \"mmk7yg\" }],\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }]\n];\nconst Clock = createLucideIcon(\"clock\", __iconNode);\n\nexport { __iconNode, Clock as default };\n//# sourceMappingURL=clock.js.map\n","/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M7 10v12\", key: \"1qc93n\" }],\n  [\n    \"path\",\n    {\n      d: \"M15 5.88 14 10h5.83a2 2 0 0 1 1.92 2.56l-2.33 8A2 2 0 0 1 17.5 22H4a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h2.76a2 2 0 0 0 1.79-1.11L12 2a3.13 3.13 0 0 1 3 3.88Z\",\n      key: \"emmmcr\"\n    }\n  ]\n];\nconst ThumbsUp = createLucideIcon(\"thumbs-up\", __iconNode);\n\nexport { __iconNode, ThumbsUp as default };\n//# sourceMappingURL=thumbs-up.js.map\n","/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3\",\n      key: \"wmoenq\"\n    }\n  ],\n  [\"path\", { d: \"M12 9v4\", key: \"juzpu7\" }],\n  [\"path\", { d: \"M12 17h.01\", key: \"p32p05\" }]\n];\nconst TriangleAlert = createLucideIcon(\"triangle-alert\", __iconNode);\n\nexport { __iconNode, TriangleAlert as default };\n//# sourceMappingURL=triangle-alert.js.map\n","import { createClient } from '@/lib/supabase/client'\nimport type { \n  DashboardData, \n  DashboardStats, \n  UrgentRequest, \n  MyRequestStatus, \n  QuickAction,\n  Employee,\n  PurchaseRequestWithDetails \n} from '@/types/purchase'\n\nexport class DashboardService {\n  private supabase = createClient()\n\n  // 역할 파싱 유틸: 배열/CSV 문자열/단일 문자열을 모두 배열로 정규화\n  // usePurchaseData.ts와 동일한 로직 사용\n  private parseRoles(purchaseRole: string | string[] | null | undefined): string[] {\n    let roles: string[] = []\n    \n    if (purchaseRole) {\n      if (Array.isArray(purchaseRole)) {\n        // 배열인 경우\n        roles = purchaseRole.map((r: any) => String(r).trim())\n      } else {\n        // 문자열인 경우 (일반적)\n        const roleString = String(purchaseRole)\n        // 쉼표로 분할하고 공백 제거\n        roles = roleString\n          .split(',')\n          .map((r: string) => r.trim())\n          .filter((r: string) => r.length > 0)\n      }\n    }\n    \n    return roles\n  }\n\n  // 메인 대시보드 데이터 로드\n  async getDashboardData(employee: Employee): Promise<DashboardData> {\n    const [\n      stats,\n      urgentRequests,\n      myRecentRequests,\n      pendingApprovals,\n      quickActions,\n      todaySummary,\n      myPurchaseStatus\n    ] = await Promise.all([\n      this.getDashboardStats(employee),\n      this.getUrgentRequests(employee),\n      this.getMyRecentRequests(employee),\n      this.getPendingApprovals(employee),\n      this.getQuickActions(employee),\n      this.getTodaySummary(employee),\n      this.getMyPurchaseStatus(employee)\n    ])\n\n    return {\n      employee,\n      stats,\n      urgentRequests,\n      myRecentRequests,\n      pendingApprovals,\n      quickActions,\n      todaySummary,\n      myPurchaseStatus\n    }\n  }\n\n  // 통계 정보 (우선순위 재정렬)\n  async getDashboardStats(employee: Employee): Promise<DashboardStats> {\n    const today = new Date().toISOString().split('T')[0]\n    const roles = this.parseRoles(employee.purchase_role)\n\n\n    // 병렬 쿼리로 성능 최적화\n    const [\n      totalResult,\n      myRequestsResult,\n      pendingResult,\n      completedResult,\n      urgentResult,\n      todayActionsResult\n    ] = await Promise.all([\n      // 전체 요청 수\n      this.supabase\n        .from('purchase_requests')\n        .select('id', { count: 'exact', head: true }),\n\n      // 내 요청 수\n      this.supabase\n        .from('purchase_requests')\n        .select('id', { count: 'exact', head: true })\n        .eq('requester_name', employee.name),\n\n      // 내가 처리해야 할 승인 대기\n      this.getPendingCount(employee, roles),\n\n      // 이번 달 완료된 요청 수  \n      this.supabase\n        .from('purchase_requests')\n        .select('id', { count: 'exact', head: true })\n        .eq('is_received', true)\n        .gte('received_at', new Date(new Date().getFullYear(), new Date().getMonth(), 1).toISOString()),\n\n      // 긴급 요청 수 (3일 이상 대기)\n      this.getUrgentCount(employee, roles),\n\n      // 오늘 처리한 액션 수\n      this.getTodayActionsCount(employee, today)\n    ])\n\n    const stats = {\n      total: totalResult.count || 0,\n      myRequests: myRequestsResult.count || 0,\n      pending: pendingResult,\n      completed: completedResult.count || 0,\n      urgent: urgentResult,\n      todayActions: todayActionsResult\n    }\n\n    return stats\n  }\n\n  // 긴급 요청 목록 (우선순위 최상위)\n  async getUrgentRequests(employee: Employee): Promise<UrgentRequest[]> {\n    const threeDaysAgo = new Date(Date.now() - 3 * 24 * 60 * 60 * 1000).toISOString()\n    const roles = this.parseRoles(employee.purchase_role)\n\n    // 역할이 없으면 긴급 요청도 없음\n    if (roles.length === 0) {\n      return []\n    }\n\n    let query = this.supabase\n      .from('purchase_requests')\n      .select('*,vendors(vendor_name),purchase_request_items(id)')\n      .lt('created_at', threeDaysAgo)\n\n    // 역할별 긴급 요청 필터링\n    if (roles.includes('app_admin')) {\n      query = query.or('middle_manager_status.eq.pending,final_manager_status.eq.pending,purchase_status.eq.pending')\n    } else if (roles.includes('middle_manager')) {\n      query = query.eq('middle_manager_status', 'pending')\n    } else if (roles.includes('final_approver') || roles.includes('ceo')) {\n      query = query\n        .eq('middle_manager_status', 'approved')\n        .eq('final_manager_status', 'pending')\n    } else if (roles.includes('lead buyer')) {\n      query = query\n        .eq('final_manager_status', 'approved')\n        .eq('purchase_status', 'pending')\n    } else {\n      // 다른 역할은 긴급 요청 없음\n      return []\n    }\n\n    const { data } = await query\n      .order('created_at', { ascending: true })\n      .limit(5)\n\n    return (data || []).map(item => ({\n      ...item,\n      vendor_name: item.vendors?.vendor_name,\n      total_items: item.purchase_request_items?.length || 0,\n      daysOverdue: Math.floor((Date.now() - new Date(item.created_at).getTime()) / (1000 * 60 * 60 * 24)),\n      priority: this.calculatePriority(item),\n      urgentReason: this.getUrgentReason(item, roles)\n    })) as UrgentRequest[]\n  }\n\n  // 내 최근 요청 상태 (승인 진행중인 항목만 - 승인 대기는 제외)\n  async getMyRecentRequests(employee: Employee): Promise<MyRequestStatus[]> {\n    const { data } = await this.supabase\n      .from('purchase_requests')\n      .select('*,vendors(vendor_name),purchase_request_items(id)')\n      .eq('requester_name', employee.name)\n      // 승인이 진행중인 항목만 (1차 승인됨 + 최종 대기중 OR 모든 승인 완료 + 구매 대기중)\n      .or('and(middle_manager_status.eq.approved,final_manager_status.eq.pending),and(final_manager_status.eq.approved,purchase_status.eq.pending)')\n      .order('created_at', { ascending: false })\n      .limit(5)\n\n    return (data || []).map(item => ({\n      ...item,\n      vendor_name: item.vendors?.vendor_name,\n      total_items: item.purchase_request_items?.length || 0,\n      progress_percentage: this.calculateProgress(item),\n      current_step: this.getCurrentStep(item),\n      next_action: this.getNextAction(item),\n      estimated_completion: this.estimateCompletion(item)\n    })) as MyRequestStatus[]\n  }\n\n  // 승인 대기 항목 (전체 조회) - 발주 리스트와 동일한 방식\n  async getPendingApprovals(employee: Employee): Promise<PurchaseRequestWithDetails[]> {\n    const roles = this.parseRoles(employee.purchase_role)\n\n    // 먼저 모든 발주요청을 가져옴 (발주 리스트와 동일)\n    // 스키마에 맞춰 item 단가/금액 컬럼 수정 (unit_price_value, amount_value)\n    let allRequests: any[] | null = null\n    let baseError: any = null\n\n\n    const firstTry = await this.supabase\n      .from('purchase_requests')\n      .select('*')\n      .order('request_date', { ascending: false })\n      .limit(100) // 최적화: 100개로 제한\n\n\n    if (firstTry.error) {\n      // 관계 조회 실패 시 최소 컬럼으로 재시도하여 리스트 자체는 표시되도록 함\n      baseError = firstTry.error\n      const fallback = await this.supabase\n        .from('purchase_requests')\n        .select('*')\n        .order('request_date', { ascending: false })\n        .limit(100) // 최적화: 100개로 제한\n      if (fallback.error) {\n        // Fallback query also failed - will return empty array\n        return []\n      }\n      allRequests = fallback.data || []\n    } else {\n      allRequests = firstTry.data || []\n    }\n\n    // 클라이언트 사이드에서 역할별 필터링\n    let filteredData = allRequests || []\n\n    // 발주 리스트와 동일한 필터링 로직 사용 - final_manager_status가 승인 대기인 항목만\n    // pending, 대기, 빈문자열, null 모두 대기로 처리\n    const isPending = (status: any) => (\n      status === 'pending' || status === '대기' || status === '' || status === null || status === undefined\n    )\n\n    // 발주 리스트의 pending 탭과 동일한 조건: final_manager_status가 승인 대기인 것만\n    filteredData = filteredData.filter(item => isPending(item.final_manager_status))\n    \n\n    // 역할이 있는 사용자만 승인 대기 항목을 볼 수 있음\n    if (roles.length === 0) {\n      return []\n    }\n\n    // 품목 정보를 별도로 조회하여 추가\n    const enhancedData = await Promise.all(\n      filteredData.map(async (item) => {\n        // 각 발주요청에 대해 품목 정보 조회\n        const { data: items } = await this.supabase\n          .from('purchase_request_items')\n          .select('*')\n          .eq('purchase_request_id', item.id)\n\n        // 업체 정보 조회\n        let vendor_name = item.vendor_name\n        if (!vendor_name && item.vendor_id) {\n          const { data: vendor } = await this.supabase\n            .from('vendors')\n            .select('vendor_name')\n            .eq('id', item.vendor_id)\n            .single()\n          vendor_name = vendor?.vendor_name\n        }\n\n        const purchase_request_items = items || []\n        const total_amount = purchase_request_items.reduce((sum: number, i: any) => {\n          const amount = Number(i?.amount_value) || (Number(i?.quantity) || 0) * (Number(i?.unit_price_value) || 0)\n          return sum + amount\n        }, 0)\n\n        return {\n          ...item,\n          vendor_name,\n          purchase_request_items,\n          total_amount\n        }\n      })\n    )\n\n    return enhancedData\n  }\n\n  // 빠른 액션 버튼 데이터\n  async getQuickActions(employee: Employee): Promise<QuickAction[]> {\n    const roles = this.parseRoles(employee.purchase_role)\n\n    const actions: QuickAction[] = []\n\n    // 승인 권한이 있는 경우\n    if (roles.includes('app_admin') || roles.includes('middle_manager') || roles.includes('final_approver') || roles.includes('ceo')) {\n      const pendingCount = await this.getPendingCount(employee, roles)\n      if (pendingCount > 0) {\n        actions.push({\n          id: 'approve',\n          type: 'approve',\n          label: '승인 대기',\n          description: `${pendingCount}건의 승인 대기 중`,\n          count: pendingCount,\n          color: 'red'\n        })\n      }\n    }\n\n    // 구매 권한이 있는 경우\n    if (roles.includes('lead buyer') || roles.includes('lead buyer')) {\n      const { count: purchaseCount } = await this.supabase\n        .from('purchase_requests')\n        .select('id', { count: 'exact', head: true })\n        .eq('final_manager_status', 'approved')\n        .eq('purchase_status', 'pending')\n\n      if (purchaseCount && purchaseCount > 0) {\n        actions.push({\n          id: 'purchase',\n          type: 'purchase',\n          label: '구매 처리',\n          description: `${purchaseCount}건의 구매 대기 중`,\n          count: purchaseCount,\n          color: 'yellow'\n        })\n      }\n    }\n\n    return actions\n  }\n\n  // 오늘 요약 정보\n  async getTodaySummary(employee: Employee) {\n    const today = new Date().toISOString().split('T')[0]\n    const tomorrow = new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString().split('T')[0]\n\n    const [approvedResult, requestedResult, receivedResult] = await Promise.all([\n      // 오늘 내가 승인한 건수\n      this.supabase\n        .from('purchase_requests')\n        .select('id', { count: 'exact', head: true })\n        .gte('updated_at', today)\n        .lt('updated_at', tomorrow)\n        .or('middle_manager_status.eq.approved,final_manager_status.eq.approved'),\n\n      // 오늘 내가 요청한 건수\n      this.supabase\n        .from('purchase_requests')\n        .select('id', { count: 'exact', head: true })\n        .eq('requester_name', employee.name)\n        .gte('created_at', today)\n        .lt('created_at', tomorrow),\n\n      // 오늘 입고 처리한 건수\n      this.supabase\n        .from('purchase_requests')\n        .select('id', { count: 'exact', head: true })\n        .eq('is_received', true)\n        .gte('received_at', today)\n        .lt('received_at', tomorrow)\n    ])\n\n    return {\n      approved: approvedResult.count || 0,\n      requested: requestedResult.count || 0,\n      received: receivedResult.count || 0\n    }\n  }\n\n  // 내 구매/입고 상태 확인\n  async getMyPurchaseStatus(employee: Employee): Promise<{ waitingPurchase: PurchaseRequestWithDetails[], waitingDelivery: PurchaseRequestWithDetails[], recentCompleted: PurchaseRequestWithDetails[] }> {\n    \n    // name이 없으면 email 사용\n    const requesterName = employee.name || employee.email\n    \n    const sevenDaysAgo = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString()\n\n    // 먼저 모든 내 요청을 가져온 다음 클라이언트에서 필터링\n    const myRequests = await this.supabase\n      .from('purchase_requests')\n      .select('*,vendors(vendor_name),purchase_request_items(item_name,quantity,specification,amount_value)')\n      .eq('requester_name', requesterName)\n      .order('created_at', { ascending: false })\n      .limit(100)\n\n    if (myRequests.error) {\n      console.error('getMyPurchaseStatus 에러:', myRequests.error)\n      return {\n        waitingPurchase: [],\n        waitingDelivery: [],\n        recentCompleted: []\n      }\n    }\n\n    const allMyRequests = myRequests.data || []\n    \n\n    // 클라이언트 사이드 필터링 (PurchaseListMain 구매/입고 탭과 동일한 로직)\n    \n    const waitingPurchase = allMyRequests.filter(item => {\n      // 구매 대기: 구매/발주 요청 카테고리 + 결제 미완료 + 선진행(승인무관) OR 일반&최종승인\n      // payment_category를 trim()하여 공백 처리 및 대소문자 무시\n      const categoryNormalized = (item.payment_category || '').trim().replace(/\\s+/g, '')\n      const isPurchaseRequest = ['구매요청', '발주요청'].includes(categoryNormalized)\n      const notPaid = !item.is_payment_completed\n      const isSeonJin = (item.progress_type || '').includes('선진행')\n      \n      \n      // 선진행은 승인 상태와 무관하게 구매 대기\n      if (isPurchaseRequest && notPaid && isSeonJin) {\n        return true\n      }\n      \n      // 일반은 최종 승인 완료되어야 구매 대기\n      const isIlban = (item.progress_type || '').includes('일반') || !item.progress_type || item.progress_type === ''\n      const finalApproved = item.final_manager_status === 'approved'\n      \n      return isPurchaseRequest && notPaid && isIlban && finalApproved\n    }).slice(0, 10)\n\n\n    const waitingDelivery = allMyRequests.filter(item => {\n      // 입고 탭 로직: 입고 미완료 + 선진행(승인무관) OR 최종승인\n      const notReceived = !item.is_received\n      const isSeonJin = (item.progress_type || '').includes('선진행')\n      \n      // 선진행은 승인 상태와 무관하게 입고 대기\n      if (notReceived && isSeonJin) {\n        return true\n      }\n      \n      // 일반은 최종 승인 완료되어야 입고 대기\n      const finalApproved = item.final_manager_status === 'approved'\n      \n      return notReceived && finalApproved\n    }).slice(0, 10)\n\n\n    const recentCompleted = allMyRequests.filter(item => {\n      // 입고 완료 && 7일 이내\n      if (item.is_received !== true) return false\n      if (!item.received_at) return false\n      const receivedDate = new Date(item.received_at)\n      const sevenDaysAgoDate = new Date(sevenDaysAgo)\n      return receivedDate >= sevenDaysAgoDate\n    }).slice(0, 10)\n\n\n    return {\n      waitingPurchase: waitingPurchase,\n      waitingDelivery: waitingDelivery,\n      recentCompleted: recentCompleted\n    }\n  }\n\n  // 원클릭 승인 API\n  async quickApprove(requestId: string, employee: Employee): Promise<{success: boolean, error?: string}> {\n    \n    try {\n      const roles = this.parseRoles(employee.purchase_role)\n\n      // 먼저 현재 요청의 상태를 확인\n      const { data: request } = await this.supabase\n        .from('purchase_requests')\n        .select('middle_manager_status, final_manager_status')\n        .eq('id', requestId)\n        .single()\n\n      if (!request) {\n        return { success: false, error: '요청을 찾을 수 없습니다.' }\n      }\n      \n\n      let updateData: any = {}\n\n      // pending, 대기, null, 빈 문자열 모두 대기 상태로 간주\n      const isPending = (status: any) => (\n        status === 'pending' || status === '대기' || status === '' || status === null || status === undefined\n      )\n\n      // app_admin은 현재 필요한 승인 단계를 처리\n      if (roles.includes('app_admin')) {\n        if (isPending(request.middle_manager_status)) {\n          updateData = {\n            middle_manager_status: 'approved'\n          }\n        } else if (request.middle_manager_status === 'approved' && isPending(request.final_manager_status)) {\n          updateData = {\n            final_manager_status: 'approved'\n          }\n        }\n      } else if (roles.includes('middle_manager')) {\n        if (isPending(request.middle_manager_status)) {\n          updateData = {\n            middle_manager_status: 'approved'\n          }\n        }\n      } else if (roles.includes('final_approver') || roles.includes('ceo')) {\n        if (request.middle_manager_status === 'approved' && isPending(request.final_manager_status)) {\n          updateData = {\n            final_manager_status: 'approved'\n          }\n        }\n      } else if (roles.includes('raw_material_manager') || roles.includes('consumable_manager')) {\n        // raw_material_manager와 consumable_manager도 최종 승인 권한이 있음\n        if (request.middle_manager_status === 'approved' && isPending(request.final_manager_status)) {\n          updateData = {\n            final_manager_status: 'approved'\n          }\n        }\n      }\n\n      // updateData가 비어있으면 승인할 단계가 없음\n      if (Object.keys(updateData).length === 0) {\n        return { success: false, error: '승인할 수 있는 상태가 아닙니다.' }\n      }\n      \n\n      const { data: updatedData, error } = await this.supabase\n        .from('purchase_requests')\n        .update(updateData)\n        .eq('id', requestId)\n        .select()\n        .single()\n\n      if (error) {\n        // Error details are handled by the caller\n        throw error\n      }\n\n      return { success: true }\n    } catch (error) {\n      return { success: false, error: (error as Error).message }\n    }\n  }\n\n  // Helper methods\n  private async getPendingCount(employee: Employee, roles: string[]): Promise<number> {\n    // 공통: '대기', null, 빈 문자열도 대기 상태로 간주\n    const pendingClause = (col: string) => (\n      `${col}.in.(pending,대기),${col}.is.null`\n    )\n\n    // 역할별 카운트 쿼리 구성\n    if (roles.includes('app_admin')) {\n      // 1) 중간 승인 대기 + 2) 최종 승인 대기(중간 승인 완료) + 3) 구매 대기(최종 승인 완료)\n      const [mid, fin, pur] = await Promise.all([\n        this.supabase\n          .from('purchase_requests')\n          .select('id', { count: 'exact', head: true })\n          .or(`middle_manager_status.in.(pending,대기),middle_manager_status.is.null`),\n        this.supabase\n          .from('purchase_requests')\n          .select('id', { count: 'exact', head: true })\n          .eq('middle_manager_status', 'approved')\n          .or(`final_manager_status.in.(pending,대기),final_manager_status.is.null`),\n        this.supabase\n          .from('purchase_requests')\n          .select('id', { count: 'exact', head: true })\n          .eq('final_manager_status', 'approved')\n          .or(`purchase_status.in.(pending,대기),purchase_status.is.null`)\n      ])\n\n      const total = (mid.count || 0) + (fin.count || 0) + (pur.count || 0)\n      return total\n    }\n\n    if (roles.includes('middle_manager')) {\n      const { count, error } = await this.supabase\n        .from('purchase_requests')\n        .select('id', { count: 'exact', head: true })\n        .or(`middle_manager_status.in.(pending,대기),middle_manager_status.is.null`)\n\n      if (error) {\n        // Count error for middle_manager - will use 0\n        return 0\n      }\n      return count || 0\n    }\n\n    if (roles.includes('final_approver') || roles.includes('ceo')) {\n      const { count, error } = await this.supabase\n        .from('purchase_requests')\n        .select('id', { count: 'exact', head: true })\n        .eq('middle_manager_status', 'approved')\n        .or(`final_manager_status.in.(pending,대기),final_manager_status.is.null`)\n\n      if (error) {\n        // Count error for final_approver/ceo - will use 0\n        return 0\n      }\n      return count || 0\n    }\n\n    if (roles.includes('lead buyer')) {\n      const { count, error } = await this.supabase\n        .from('purchase_requests')\n        .select('id', { count: 'exact', head: true })\n        .eq('final_manager_status', 'approved')\n        .or(`purchase_status.in.(pending,대기),purchase_status.is.null`)\n\n      if (error) {\n        // Count error for lead buyer - will use 0\n        return 0\n      }\n      return count || 0\n    }\n\n    return 0\n  }\n\n  private async getUrgentCount(employee: Employee, roles: string[]): Promise<number> {\n    // 역할이 없으면 긴급 요청 카운트도 0\n    if (roles.length === 0) {\n      return 0\n    }\n\n    const threeDaysAgo = new Date(Date.now() - 3 * 24 * 60 * 60 * 1000).toISOString()\n    \n    let query = this.supabase\n      .from('purchase_requests')\n      .select('id', { count: 'exact', head: true })\n      .lt('created_at', threeDaysAgo)\n\n    if (roles.includes('app_admin')) {\n      query = query.or('middle_manager_status.eq.pending,final_manager_status.eq.pending,purchase_status.eq.pending')\n    } else if (roles.includes('middle_manager')) {\n      query = query.eq('middle_manager_status', 'pending')\n    } else if (roles.includes('final_approver') || roles.includes('ceo')) {\n      query = query\n        .eq('middle_manager_status', 'approved')\n        .eq('final_manager_status', 'pending')\n    } else if (roles.includes('lead buyer')) {\n      query = query\n        .eq('final_manager_status', 'approved')\n        .eq('purchase_status', 'pending')\n    } else {\n      return 0\n    }\n\n    const { count } = await query\n    return count || 0\n  }\n\n  private async getTodayActionsCount(employee: Employee, today: string): Promise<number> {\n    const tomorrow = new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString().split('T')[0]\n    \n    const { count } = await this.supabase\n      .from('purchase_requests')\n      .select('id', { count: 'exact', head: true })\n      .gte('updated_at', today)\n      .lt('updated_at', tomorrow)\n      .or(`middle_manager_id.eq.${employee.id},final_manager_id.eq.${employee.id}`)\n\n    return count || 0\n  }\n\n  // 전체 입고대기 건수 조회 (권한에 관계없이 전체 조회)\n  async getTotalDeliveryWaitingCount(): Promise<number> {\n    const { count } = await this.supabase\n      .from('purchase_requests')\n      .select('id', { count: 'exact', head: true })\n      .eq('is_received', false)\n      .or('is_payment_completed.eq.true,progress_type.ilike.%선진행%')\n\n    return count || 0\n  }\n\n  private calculatePriority(request: any): 'high' | 'medium' | 'low' {\n    const daysPending = Math.floor((Date.now() - new Date(request.created_at).getTime()) / (1000 * 60 * 60 * 24))\n    \n    if (daysPending >= 7) return 'high'\n    if (daysPending >= 5) return 'medium'\n    return 'low'\n  }\n\n  private getUrgentReason(request: any, roles: string[]): 'overdue_approval' | 'delivery_delay' | 'payment_pending' {\n    if (roles.includes('middle_manager') && request.middle_manager_status === 'pending') {\n      return 'overdue_approval'\n    }\n    if ((roles.includes('final_approver') || roles.includes('ceo')) && request.final_manager_status === 'pending') {\n      return 'overdue_approval'\n    }\n    if (!request.is_received) {\n      return 'delivery_delay'\n    }\n    return 'payment_pending'\n  }\n\n  private calculateProgress(request: any): number {\n    let progress = 0\n    \n    if (request.middle_manager_status === 'approved') progress += 25\n    if (request.final_manager_status === 'approved') progress += 25\n    if (request.is_payment_completed) progress += 25\n    if (request.is_received) progress += 25\n    \n    return progress\n  }\n\n  private getCurrentStep(request: any): 'approval' | 'purchase' | 'delivery' | 'payment' | 'completed' {\n    if (request.is_received) return 'completed'\n    if (request.is_payment_completed) return 'delivery'\n    if (request.final_manager_status === 'approved') return 'purchase'\n    return 'approval'\n  }\n\n  private getNextAction(request: any): string {\n    if (request.middle_manager_status === 'pending') return '중간 승인 대기 중'\n    if (request.final_manager_status === 'pending') return '최종 승인 대기 중'\n    if (!request.is_payment_completed) return '구매 처리 대기 중'\n    if (!request.is_received) return '입고 대기 중'\n    return '완료'\n  }\n\n  private estimateCompletion(request: any): string {\n    const created = new Date(request.created_at)\n    const today = new Date()\n    const daysPassed = Math.floor((today.getTime() - created.getTime()) / (1000 * 60 * 60 * 24))\n    \n    // 평균 처리 시간을 기반으로 예상 완료일 계산\n    let estimatedDays = 7 // 기본 7일\n    if (request.progress_type === '긴급') estimatedDays = 3\n    \n    const estimatedCompletion = new Date(created.getTime() + estimatedDays * 24 * 60 * 60 * 1000)\n    return estimatedCompletion.toLocaleDateString('ko-KR')\n  }\n\n  // lead buyer를 위한 미다운로드 발주서 목록 조회\n  async getUndownloadedOrders(employee: Employee): Promise<PurchaseRequestWithDetails[]> {\n    const roles = this.parseRoles(employee.purchase_role)\n    \n    // lead buyer 또는 \"lead buyer\" (공백 포함) 권한 체크\n    if (!roles.includes('lead buyer') && !roles.includes('lead buyer')) {\n      return []\n    }\n\n    // 먼저 모든 발주서를 가져온 다음 클라이언트에서 필터링\n    const { data, error } = await this.supabase\n      .from('purchase_requests')\n      .select('*,purchase_request_items(id,item_name,specification,quantity,unit_price_value,amount_value)')\n      .order('created_at', { ascending: false })\n      .limit(100)\n\n    if (error) {\n      console.error('Failed to fetch undownloaded orders:', error)\n      return []\n    }\n\n    // 클라이언트 사이드 필터링\n    // 조건: (선진행이거나 최종승인 완료) AND (is_po_download가 false 또는 null)\n    const filteredData = (data || []).filter(item => {\n      // 다운로드 가능 조건 체크\n      const isDownloadable = item.progress_type === '선진행' || \n        (item.middle_manager_status === 'approved' && item.final_manager_status === 'approved')\n      \n      // 아직 다운로드 안 된 것만\n      const notDownloaded = !item.is_po_download || item.is_po_download === false || item.is_po_download === null\n      \n      return isDownloadable && notDownloaded\n    })\n\n    // 오래된 순으로 정렬 (created_at 기준 오름차순)\n    filteredData.sort((a, b) => new Date(a.created_at).getTime() - new Date(b.created_at).getTime())\n\n    return filteredData.slice(0, 10) // 상위 10개만 반환\n  }\n}\n\nexport const dashboardService = new DashboardService()","import React, { useState, useEffect } from 'react'\nimport { \n  Dialog, \n  DialogContent, \n  DialogHeader, \n  DialogTitle,\n  DialogDescription\n} from '@/components/ui/dialog'\nimport { Badge } from '@/components/ui/badge'\nimport { Button } from '@/components/ui/button'\nimport { Card, CardContent } from '@/components/ui/card'\nimport { Separator } from '@/components/ui/separator'\nimport { \n  ShoppingCart, \n  Truck, \n  Package, \n  CheckCircle,\n  Building2,\n  Calendar,\n  FileText,\n  ArrowRight,\n  User,\n  CreditCard,\n  MapPin,\n  DollarSign\n} from 'lucide-react'\nimport { useNavigate } from 'react-router-dom'\nimport { createClient } from '@/lib/supabase/client'\nimport { toast } from 'sonner'\n\ninterface PurchaseStatusModalProps {\n  isOpen: boolean\n  onClose: () => void\n  item: any\n  type: 'purchase' | 'delivery' | 'completed'\n  onRefresh?: () => void\n}\n\nexport default function PurchaseStatusModal({ \n  isOpen, \n  onClose, \n  item, \n  type,\n  onRefresh\n}: PurchaseStatusModalProps) {\n  const navigate = useNavigate()\n  const supabase = createClient()\n  const [currentUserRoles, setCurrentUserRoles] = useState<string[]>([])\n  const [processing, setProcessing] = useState(false)\n\n  // Get current user roles\n  useEffect(() => {\n    const fetchUserRoles = async () => {\n      const { data: { user } } = await supabase.auth.getUser()\n      console.log('Fetching roles for user:', user?.email)\n      \n      if (user?.email) {\n        const { data: employee } = await supabase\n          .from('employees')\n          .select('purchase_role')\n          .eq('email', user.email)\n          .single()\n        \n        console.log('Employee data:', employee)\n        \n        if (employee?.purchase_role) {\n          // purchase_role이 이미 배열이면 그대로 사용, 문자열이면 split\n          const roles = Array.isArray(employee.purchase_role) \n            ? employee.purchase_role \n            : employee.purchase_role.split(',').map((r: string) => r.trim())\n          console.log('Parsed roles:', roles)\n          setCurrentUserRoles(roles)\n        } else {\n          console.log('No purchase_role found for employee')\n        }\n      }\n    }\n    fetchUserRoles()\n  }, [type])\n\n  if (!item) return null\n\n  const items = item.purchase_request_items || []\n  const totalAmount = items.reduce((sum: number, i: any) => {\n    return sum + (Number(i.amount_value) || 0)\n  }, 0)\n  const totalQuantity = items.reduce((sum: number, i: any) => {\n    return sum + (Number(i.quantity) || 0)\n  }, 0)\n  \n  // 디버깅\n  console.log('PurchaseStatusModal Debug:', {\n    type,\n    currentUserRoles,\n    item: item.purchase_order_number,\n    showPurchaseButton: type === 'purchase',\n    hasPermission: currentUserRoles.includes('app_admin') || \n                   currentUserRoles.includes('lead buyer')\n  })\n\n  const getTypeInfo = () => {\n    switch (type) {\n      case 'purchase':\n        return {\n          icon: <ShoppingCart className=\"w-6 h-6 text-yellow-600\" />,\n          title: '구매 대기',\n          status: '구매 처리 대기중',\n          color: 'bg-yellow-50 text-yellow-700 border-yellow-200'\n        }\n      case 'delivery':\n        return {\n          icon: <Truck className=\"w-6 h-6 text-blue-600\" />,\n          title: '입고 대기',\n          status: '입고 처리 대기중',\n          color: 'bg-blue-50 text-blue-700 border-blue-200'\n        }\n      case 'completed':\n        return {\n          icon: <CheckCircle className=\"w-6 h-6 text-green-600\" />,\n          title: '처리 완료',\n          status: '모든 처리 완료',\n          color: 'bg-green-50 text-green-700 border-green-200'\n        }\n    }\n  }\n\n  const typeInfo = getTypeInfo()\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-y-auto\">\n        <DialogHeader>\n          <DialogTitle className=\"text-xl font-bold\">\n            {item.purchase_order_number || 'PO번호 없음'} 상세보기\n          </DialogTitle>\n          <DialogDescription>\n            {item.vendor_name || '업체명 없음'}\n          </DialogDescription>\n        </DialogHeader>\n\n        <div className=\"space-y-6\">\n          {/* 기본 정보 */}\n          <div className=\"bg-gray-50 rounded-lg p-6\">\n            <h3 className=\"font-semibold mb-4 flex items-center text-gray-900\">\n              <FileText className=\"w-5 h-5 mr-2 text-gray-700\" />\n              기본 정보\n            </h3>\n            <div className=\"grid grid-cols-2 md:grid-cols-3 gap-6\">\n              <div>\n                <p className=\"text-sm text-gray-500 mb-1\">요청자</p>\n                <p className=\"font-medium text-gray-900\">{item.requester_name}</p>\n              </div>\n              <div>\n                <p className=\"text-sm text-gray-500 mb-1\">요청일</p>\n                <p className=\"font-medium text-gray-900\">\n                  {new Date(item.request_date || item.created_at).toLocaleDateString('ko-KR')}\n                </p>\n              </div>\n              <div>\n                <p className=\"text-sm text-gray-500 mb-1\">납기요청일</p>\n                <p className=\"font-medium text-gray-900\">\n                  {item.delivery_request_date \n                    ? new Date(item.delivery_request_date).toLocaleDateString('ko-KR')\n                    : '-'}\n                </p>\n              </div>\n              <div>\n                <p className=\"text-sm text-gray-500 mb-1\">결제유형</p>\n                <p className=\"font-medium text-gray-900\">{item.payment_category || '-'}</p>\n              </div>\n              <div>\n                <p className=\"text-sm text-gray-500 mb-1\">진행구분</p>\n                <p className=\"font-medium text-gray-900\">{item.progress_type || '일반'}</p>\n              </div>\n              <div>\n                <p className=\"text-sm text-gray-500 mb-1\">상태</p>\n                <p className=\"font-medium\">\n                  <Badge className={typeInfo.color}>\n                    {typeInfo.title}\n                  </Badge>\n                </p>\n              </div>\n            </div>\n          </div>\n\n          {/* 업체 정보 */}\n          <div className=\"bg-gray-50 rounded-lg p-6\">\n            <h3 className=\"font-semibold mb-4 flex items-center text-gray-900\">\n              <Building2 className=\"w-5 h-5 mr-2 text-gray-700\" />\n              업체 정보\n            </h3>\n            <div className=\"grid grid-cols-2 md:grid-cols-3 gap-6\">\n              <div>\n                <p className=\"text-sm text-gray-500 mb-1\">업체명</p>\n                <p className=\"font-medium text-gray-900\">{item.vendor_name || '-'}</p>\n              </div>\n              <div>\n                <p className=\"text-sm text-gray-500 mb-1\">프로젝트 업체</p>\n                <p className=\"font-medium text-gray-900\">{item.project_vendor || '-'}</p>\n              </div>\n              <div>\n                <p className=\"text-sm text-gray-500 mb-1\">판매주문번호</p>\n                <p className=\"font-medium text-gray-900\">{item.sales_order_number || '-'}</p>\n              </div>\n              <div>\n                <p className=\"text-sm text-gray-500 mb-1\">프로젝트 품목</p>\n                <p className=\"font-medium text-gray-900\">{item.project_item || '-'}</p>\n              </div>\n              <div>\n                <p className=\"text-sm text-gray-500 mb-1\">발주서 템플릿</p>\n                <p className=\"font-medium text-gray-900\">{item.po_template_type || '일반'}</p>\n              </div>\n              <div>\n                <p className=\"text-sm text-gray-500 mb-1\">통화</p>\n                <p className=\"font-medium text-gray-900\">{item.currency || 'KRW'}</p>\n              </div>\n            </div>\n          </div>\n\n          {/* 품목 리스트 */}\n          <div className=\"bg-gray-50 rounded-lg p-6\">\n            <h3 className=\"font-semibold mb-4 flex items-center text-gray-900\">\n              <Package className=\"w-5 h-5 mr-2 text-gray-700\" />\n              품목 리스트\n            </h3>\n            <div className=\"overflow-x-auto\">\n              <table className=\"min-w-full bg-white rounded-lg overflow-hidden shadow-sm\">\n                <thead className=\"bg-gray-100\">\n                  <tr>\n                    {type === 'delivery' && (\n                      <th className=\"px-4 py-3 text-center text-xs font-semibold text-gray-600 uppercase tracking-wider\">입고</th>\n                    )}\n                    <th className=\"px-4 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">품명</th>\n                    <th className=\"px-4 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">규격</th>\n                    <th className=\"px-4 py-3 text-center text-xs font-semibold text-gray-600 uppercase tracking-wider\">수량</th>\n                    <th className=\"px-4 py-3 text-right text-xs font-semibold text-gray-600 uppercase tracking-wider\">단가</th>\n                    <th className=\"px-4 py-3 text-right text-xs font-semibold text-gray-600 uppercase tracking-wider\">금액</th>\n                    <th className=\"px-4 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">비고</th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-200\">\n                  {items.map((pItem: any, index: number) => {\n                    const unitPrice = pItem.quantity > 0 ? (Number(pItem.amount_value) || 0) / pItem.quantity : 0\n                    return (\n                      <tr key={index} className=\"hover:bg-gray-50 transition-colors\">\n                        {type === 'delivery' && (\n                          <td className=\"px-4 py-3 text-center\">\n                            <div className=\"flex items-center justify-center\">\n                              {pItem.is_received ? (\n                                <Badge className=\"bg-green-100 text-green-800 text-xs\">\n                                  입고완료\n                                </Badge>\n                              ) : (\n                                <Badge variant=\"outline\" className=\"text-gray-600 text-xs\">\n                                  미입고\n                                </Badge>\n                              )}\n                            </div>\n                          </td>\n                        )}\n                        <td className=\"px-4 py-3\">\n                          <span className=\"text-sm font-medium text-gray-900\">{pItem.item_name || '품목명 없음'}</span>\n                        </td>\n                        <td className=\"px-4 py-3\">\n                          <span className=\"text-sm text-gray-600\">{pItem.specification || '-'}</span>\n                        </td>\n                        <td className=\"px-4 py-3 text-center\">\n                          <span className=\"text-sm font-medium text-gray-900\">{pItem.quantity || 0}</span>\n                        </td>\n                        <td className=\"px-4 py-3 text-right\">\n                          <span className=\"text-sm text-gray-900\">₩{unitPrice.toLocaleString()}</span>\n                        </td>\n                        <td className=\"px-4 py-3 text-right\">\n                          <span className=\"text-sm font-semibold text-gray-900\">₩{(Number(pItem.amount_value) || 0).toLocaleString()}</span>\n                        </td>\n                        <td className=\"px-4 py-3\">\n                          <span className=\"text-sm text-gray-600\">{pItem.remark || '-'}</span>\n                        </td>\n                      </tr>\n                    )\n                  })}\n                </tbody>\n              </table>\n            </div>\n\n            {/* 총액 */}\n            <div className=\"mt-6 bg-white rounded-lg p-4 shadow-sm\">\n              <div className=\"flex justify-between items-center\">\n                <div>\n                  <span className=\"text-sm text-gray-600\">총</span>\n                  <span className=\"ml-1 font-semibold text-gray-900\">{totalQuantity}개</span>\n                  <span className=\"text-sm text-gray-600 ml-1\">항목</span>\n                </div>\n                <div className=\"text-right\">\n                  <span className=\"text-sm text-gray-600 block\">총액</span>\n                  <span className=\"font-bold text-xl text-gray-900\">₩{totalAmount.toLocaleString()}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* 입고 진행률 (입고 대기인 경우) */}\n          {type === 'delivery' && items.length > 1 && (\n            <div className=\"bg-blue-50 rounded-lg p-4\">\n              <h4 className=\"text-sm font-medium text-gray-900 mb-3\">입고 진행 현황</h4>\n              {(() => {\n                const receivedCount = items.filter((i: any) => i.is_received).length\n                const totalCount = items.length\n                const percentage = (receivedCount / totalCount) * 100\n                \n                return (\n                  <div className=\"space-y-2\">\n                    <div className=\"flex justify-between text-sm\">\n                      <span className=\"text-gray-600\">입고 완료</span>\n                      <span className=\"font-medium text-gray-900\">{receivedCount}/{totalCount}개 ({percentage.toFixed(0)}%)</span>\n                    </div>\n                    <div className=\"w-full bg-blue-200 rounded-full h-2 overflow-hidden\">\n                      <div \n                        className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\n                        style={{ width: `${percentage}%` }}\n                      />\n                    </div>\n                  </div>\n                )\n              })()}\n            </div>\n          )}\n\n          {/* 버튼 영역 */}\n          <div className=\"flex justify-between gap-3 mt-6\">\n            <div className=\"flex gap-2\">\n              {/* 입고 완료 버튼 - 입고 대기 상태이고 권한 있을 때 */}\n            {type === 'delivery' && \n             (currentUserRoles.includes('app_admin') || \n              currentUserRoles.includes('lead buyer') ||\n              currentUserRoles.includes('receiver')) && (\n              <Button\n                onClick={async () => {\n                  setProcessing(true)\n                  try {\n                    const { error } = await supabase\n                      .from('purchase_requests')\n                      .update({ \n                        is_received: true,\n                        received_at: new Date().toISOString()\n                      })\n                      .eq('id', item.id)\n\n                    if (error) throw error\n                    \n                    // 개별 품목도 모두 입고완료 처리\n                    await supabase\n                      .from('purchase_request_items')\n                      .update({ \n                        is_received: true,\n                        delivery_status: 'received'\n                      })\n                      .eq('purchase_request_id', item.id)\n                    \n                    toast.success('입고완료 처리되었습니다.')\n                    onClose()\n                    // 모달이 닫힌 후에 새로고침\n                    setTimeout(() => {\n                      onRefresh?.()\n                    }, 100)\n                  } catch (error) {\n                    toast.error('처리 중 오류가 발생했습니다.')\n                  } finally {\n                    setProcessing(false)\n                  }\n                }}\n                disabled={processing}\n                className=\"bg-blue-600 hover:bg-blue-700\"\n                size=\"sm\"\n              >\n                {processing ? (\n                  <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin mr-2\" />\n                ) : (\n                  <CheckCircle className=\"w-4 h-4 mr-2\" />\n                )}\n                입고 완료 처리\n              </Button>\n            )}\n\n            {/* 구매 완료 버튼 - 구매 대기 상태이고 권한 있을 때 */}\n            {type === 'purchase' && \n             (currentUserRoles.includes('app_admin') || \n              currentUserRoles.includes('lead buyer')) && (\n              <Button\n                onClick={async () => {\n                  setProcessing(true)\n                  try {\n                    const { error } = await supabase\n                      .from('purchase_requests')\n                      .update({ \n                        is_payment_completed: true,\n                        payment_completed_at: new Date().toISOString()\n                      })\n                      .eq('id', item.id)\n\n                    if (error) throw error\n                    \n                    toast.success('구매완료 처리되었습니다.')\n                    onClose()\n                    // 모달이 닫힌 후에 새로고침\n                    setTimeout(() => {\n                      onRefresh?.()\n                    }, 100)\n                  } catch (error) {\n                    toast.error('처리 중 오류가 발생했습니다.')\n                  } finally {\n                    setProcessing(false)\n                  }\n                }}\n                disabled={processing}\n                className=\"bg-yellow-600 hover:bg-yellow-700\"\n                size=\"sm\"\n              >\n                {processing ? (\n                  <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin mr-2\" />\n                ) : (\n                  <CreditCard className=\"w-4 h-4 mr-2\" />\n                )}\n                구매 완료 처리\n              </Button>\n            )}\n            </div>\n\n            <div className=\"flex gap-2\">\n              <Button\n                variant=\"outline\"\n                onClick={() => {\n                  navigate(`/purchase?highlight=${item.id}`)\n                  onClose()\n                }}\n                size=\"sm\"\n              >\n                발주 목록에서 보기\n                <ArrowRight className=\"w-4 h-4 ml-2\" />\n              </Button>\n              <Button variant=\"ghost\" onClick={onClose} size=\"sm\">\n                닫기\n              </Button>\n            </div>\n          </div>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}","\nimport { useState, useEffect, useCallback } from 'react'\nimport { createClient } from '@/lib/supabase/client'\nimport { dashboardService } from '@/services/dashboardService'\nimport { Button } from '@/components/ui/button'\nimport { Badge } from '@/components/ui/badge'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription } from '@/components/ui/dialog'\nimport { AlertTriangle, Clock, CheckCircle, Calendar, ArrowRight, Eye, ThumbsUp, X, Package, Truck, ShoppingCart, FileText, Building2, Download } from 'lucide-react'\nimport ExcelJS from 'exceljs'\n\n// Import modals\nimport PurchaseDetailModal from '@/components/purchase/PurchaseDetailModal'\nimport PurchaseStatusModal from '@/components/dashboard/PurchaseStatusModal'\nimport { toast } from 'sonner'\nimport type { DashboardData, UrgentRequest, MyRequestStatus } from '@/types/purchase'\nimport { useNavigate } from 'react-router-dom'\n\nexport default function DashboardMain() {\n  const [data, setData] = useState<DashboardData | null>(null)\n  const [loading, setLoading] = useState(true)\n  const [actionLoading, setActionLoading] = useState<string | null>(null)\n  const [selectedApprovalId, setSelectedApprovalId] = useState<number | null>(null)\n  const [isModalOpen, setIsModalOpen] = useState(false)\n  const [currentUserRoles, setCurrentUserRoles] = useState<string[]>([])\n  const [undownloadedOrders, setUndownloadedOrders] = useState<any[]>([])\n  const [downloadingIds, setDownloadingIds] = useState<Set<string>>(new Set())\n  const [selectedOrder, setSelectedOrder] = useState<any>(null)\n  const [isOrderModalOpen, setIsOrderModalOpen] = useState(false)\n  \n  // 구매/입고 상세 모달 상태\n  const [selectedStatusItem, setSelectedStatusItem] = useState<any>(null)\n  const [statusModalType, setStatusModalType] = useState<'purchase' | 'delivery' | 'completed' | null>(null)\n  const [isStatusModalOpen, setIsStatusModalOpen] = useState(false)\n  \n  const navigate = useNavigate()\n  const supabase = createClient()\n\n  const loadDashboardData = useCallback(async (showLoading = true) => {\n    try {\n      if (showLoading) {\n        setLoading(true)\n      } else {\n        // 로딩 표시 없이 새로고침할 때는 기존 data를 유지\n        // data가 null이 되는 것을 방지\n      }\n      \n      const supabase = createClient()\n      \n      const { data: { user }, error: authError } = await supabase.auth.getUser()\n      \n      if (authError) {\n        console.error('Auth error:', authError)\n        toast.error('인증 정보를 불러올 수 없습니다.')\n        return\n      }\n      \n      if (!user) {\n        console.error('No user found in auth')\n        toast.error('로그인이 필요합니다.')\n        return\n      }\n\n      const { data: employee, error: employeeError } = await supabase\n        .from('employees')\n        .select('*')\n        .eq('email', user.email)\n        .single()\n\n      if (employeeError || !employee) {\n        console.error('Employee fetch error:', employeeError)\n        // employee가 없어도 기본값으로 대시보드 표시\n        const defaultEmployee = {\n          id: user.id,\n          name: user.email?.split('@')[0] || 'Guest User',  // 이메일에서 이름 추출\n          email: user.email || '',\n          purchase_role: null\n        }\n        \n        try {\n          const dashboardData = await dashboardService.getDashboardData(defaultEmployee as any)\n          setData(dashboardData)\n        } catch (err) {\n          console.error('❌ 대시보드 데이터 로딩 에러:', err)\n        }\n        \n        setLoading(false)\n        return\n      }\n\n      console.log('🔍 조회된 Employee 데이터:', {\n        id: employee.id,\n        name: employee.name,\n        email: employee.email,\n        employee_number: employee.employee_number,\n        employeeID: employee.employeeID,\n        purchase_role: employee.purchase_role\n      })\n\n      console.log('========== 대시보드 데이터 로딩 시작 ==========')\n      console.log('1️⃣ 현재 사용자:', employee.name, '/ Email:', employee.email)\n      console.log('2️⃣ Purchase Role:', employee.purchase_role)\n      \n      try {\n        const dashboardData = await dashboardService.getDashboardData(employee)\n        \n        // 전체 입고대기 건수 조회 추가\n        const totalDeliveryWaiting = await dashboardService.getTotalDeliveryWaitingCount()\n        \n        \n        setData(dashboardData)\n      } catch (err) {\n        console.error('❌ 대시보드 데이터 로딩 에러:', err)\n        toast.error('대시보드 데이터를 불러오는데 실패했습니다.')\n      }\n      \n      // 사용자 role 설정\n      if (employee.purchase_role) {\n        const roles = Array.isArray(employee.purchase_role)\n          ? employee.purchase_role.map((r: any) => String(r).trim())\n          : String(employee.purchase_role)\n              .split(',')\n              .map((r: string) => r.trim())\n              .filter((r: string) => r.length > 0)\n        setCurrentUserRoles(roles)\n        \n        // lead buyer 또는 \"lead buyer\" (공백 포함)인 경우 미다운로드 항목 조회\n        if (roles.includes('lead buyer') || roles.includes('lead buyer')) {\n          const undownloaded = await dashboardService.getUndownloadedOrders(employee)\n          setUndownloadedOrders(undownloaded)\n        }\n      }\n    } catch (error) {\n    } finally {\n      if (showLoading) {\n        setLoading(false)\n      }\n    }\n  }, [])\n\n  useEffect(() => {\n    loadDashboardData()\n  }, [loadDashboardData])\n\n  const handleQuickApprove = async (requestId: string) => {\n    console.log('handleQuickApprove 호출:', {\n      requestId: requestId,\n      hasData: !!data,\n      hasEmployee: !!data?.employee,\n      employee: data?.employee\n    })\n    \n    if (!data?.employee) {\n      console.error('handleQuickApprove 에러: data.employee가 없음', {\n        data: data\n      })\n      toast.error('사용자 정보를 찾을 수 없습니다.')\n      return\n    }\n\n    // 승인 확인 메시지\n    if (!confirm('정말로 승인하시겠습니까?')) {\n      return\n    }\n\n    setActionLoading(requestId)\n    \n    // Optimistic Update: 즉시 UI에서 제거\n    const originalData = data\n    setData(prev => {\n      if (!prev) return prev\n      return {\n        ...prev,\n        pendingApprovals: prev.pendingApprovals.filter(item => item.id !== requestId),\n        stats: {\n          ...prev.stats,\n          pending: Math.max(0, prev.stats.pending - 1)\n        }\n      }\n    })\n\n    try {\n      const result = await dashboardService.quickApprove(requestId, data.employee)\n      \n      if (result.success) {\n        toast.success('승인이 완료되었습니다.')\n        // 성공 시 백그라운드에서 데이터 동기화 (UI 깜빡임 없이)\n        setTimeout(() => {\n          loadDashboardData(false)  // false를 전달하여 로딩 화면 표시 안 함\n        }, 1000)\n      } else {\n        // 실패 시 원래 데이터로 롤백\n        setData(originalData)\n        toast.error(result.error || '승인 처리 중 오류가 발생했습니다.')\n      }\n    } catch (error) {\n      // 에러 시 원래 데이터로 롤백\n      setData(originalData)\n      toast.error('승인 처리 중 오류가 발생했습니다.')\n    } finally {\n      setActionLoading(null)\n    }\n  }\n\n  const handleStatusClick = (item: any, type: 'purchase' | 'delivery' | 'completed') => {\n    setSelectedStatusItem(item)\n    setStatusModalType(type)\n    setIsStatusModalOpen(true)\n  }\n\n  const handleDownloadExcel = async (purchase: any) => {\n    try {\n      setDownloadingIds(prev => new Set(prev).add(purchase.id))\n      \n      // Excel 파일 생성 (FastPurchaseTable과 동일한 로직)\n      const workbook = new ExcelJS.Workbook()\n      const worksheet = workbook.addWorksheet('발주서')\n      \n      // 헤더 설정\n      worksheet.columns = [\n        { header: '발주번호', key: 'purchase_order_number', width: 20 },\n        { header: '업체명', key: 'vendor_name', width: 30 },\n        { header: '품목명', key: 'item_name', width: 40 },\n        { header: '규격', key: 'specification', width: 30 },\n        { header: '수량', key: 'quantity', width: 15 },\n        { header: '단가', key: 'unit_price', width: 20 },\n        { header: '금액', key: 'amount', width: 20 },\n        { header: '요청일', key: 'request_date', width: 15 },\n        { header: '진행상태', key: 'progress_type', width: 15 }\n      ]\n      \n      // 데이터 추가\n      const items = purchase.purchase_request_items || []\n      items.forEach((item: any) => {\n        worksheet.addRow({\n          purchase_order_number: purchase.purchase_order_number,\n          vendor_name: purchase.vendor_name || purchase.vendors?.vendor_name || '',\n          item_name: item.item_name || '',\n          specification: item.specification || '',\n          quantity: item.quantity || 0,\n          unit_price: item.unit_price_value || 0,\n          amount: item.amount_value || 0,\n          request_date: purchase.request_date || '',\n          progress_type: purchase.progress_type || ''\n        })\n      })\n      \n      // 스타일 적용\n      worksheet.getRow(1).font = { bold: true }\n      worksheet.getRow(1).fill = {\n        type: 'pattern',\n        pattern: 'solid',\n        fgColor: { argb: 'FFE0E0E0' }\n      }\n      \n      // 파일 다운로드\n      const buffer = await workbook.xlsx.writeBuffer()\n      const blob = new Blob([buffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' })\n      const url = window.URL.createObjectURL(blob)\n      const link = document.createElement('a')\n      link.href = url\n      link.download = `발주서_${purchase.purchase_order_number}_${new Date().toISOString().slice(0, 10)}.xlsx`\n      link.click()\n      window.URL.revokeObjectURL(url)\n      \n      // lead buyer인 경우 is_po_download를 true로 업데이트\n      if (currentUserRoles.includes('lead buyer') || currentUserRoles.includes('lead buyer')) {\n        await supabase\n          .from('purchase_requests')\n          .update({ is_po_download: true })\n          .eq('id', purchase.id)\n        \n        // UI에서 제거\n        setUndownloadedOrders(prev => prev.filter(item => item.id !== purchase.id))\n      }\n      \n      toast.success('발주서가 다운로드되었습니다.')\n    } catch (error) {\n      console.error('Excel download error:', error)\n      toast.error('다운로드 중 오류가 발생했습니다.')\n    } finally {\n      setDownloadingIds(prev => {\n        const newSet = new Set(prev)\n        newSet.delete(purchase.id)\n        return newSet\n      })\n    }\n  }\n\n  const getPriorityColor = (priority: 'high' | 'medium' | 'low') => {\n    switch (priority) {\n      case 'high': return 'bg-red-100 text-red-800 border-red-200'\n      case 'medium': return 'bg-yellow-100 text-yellow-800 border-yellow-200'\n      case 'low': return 'bg-green-100 text-green-800 border-green-200'\n      default: return 'bg-gray-100 text-gray-800 border-gray-200'\n    }\n  }\n\n  const getStepColor = (step: string) => {\n    switch (step) {\n      case 'approval': return 'bg-yellow-100 text-yellow-800'\n      case 'purchase': return 'bg-blue-100 text-blue-800'\n      case 'delivery': return 'bg-purple-100 text-purple-800'\n      case 'completed': return 'bg-green-100 text-green-800'\n      default: return 'bg-gray-100 text-gray-800'\n    }\n  }\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-screen bg-gray-50\">\n        <div className=\"text-center\">\n          <div className=\"w-12 h-12 border-3 border-hansl-500 border-t-transparent rounded-full animate-spin mx-auto\" />\n          <p className=\"mt-4 text-sm text-gray-600\">대시보드를 불러오고 있습니다...</p>\n        </div>\n      </div>\n    )\n  }\n\n  if (!data?.employee) {\n    return (\n      <div className=\"flex items-center justify-center h-screen bg-gray-50\">\n        <div className=\"text-center bg-white p-8 rounded-lg border border-gray-200\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">사용자 정보를 찾을 수 없습니다</h3>\n          <p className=\"text-sm text-gray-600\">로그인을 다시 시도해주세요.</p>\n        </div>\n      </div>\n    )\n  }\n\n  // 권한 파싱 및 표시 여부 결정\n  const roles = Array.isArray(data.employee.purchase_role)\n    ? (data.employee.purchase_role as any[]).map((r: any) => String(r).trim())\n    : (data.employee.purchase_role\n        ? String(data.employee.purchase_role)\n            .split(',')\n            .map((r: string) => r.trim())\n            .filter((r: string) => r.length > 0)\n        : [])\n\n  const canSeeApprovalBox = roles.some((r: string) => ['middle_manager', 'final_approver', 'app_admin', 'raw_material_manager', 'consumable_manager'].includes(r))\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <div className=\"w-full px-4 lg:px-6\">\n        {/* 헤더 */}\n        <div className=\"mb-3\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h1 className=\"text-xl font-bold text-gray-900\">대시보드</h1>\n              <p className=\"text-xs text-gray-600 mt-0.5\">\n                {data.employee.name}님, 환영합니다. 📊\n              </p>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <Badge variant=\"outline\" className=\"text-xs\">\n                {new Date().toLocaleDateString('ko-KR', { \n                  month: 'long', \n                  day: 'numeric',\n                  weekday: 'short'\n                })}\n              </Badge>\n            </div>\n          </div>\n        </div>\n\n        {/* 긴급 알림 섹션 */}\n        {data.urgentRequests.length > 0 && (\n          <Card className=\"mb-3 border-red-200 bg-red-50\">\n            <CardHeader className=\"pb-2 pt-3\">\n              <CardTitle className=\"flex items-center gap-2 text-red-800 text-sm\">\n                <AlertTriangle className=\"w-4 h-4\" />\n                긴급 처리 필요 ({data.urgentRequests.length}건)\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"p-3\">\n              <div className=\"flex gap-2 overflow-x-auto pb-2\">\n              {data.urgentRequests.slice(0, 5).map((request) => (\n                <div key={request.id} className=\"bg-white rounded-lg p-2 border border-red-200 min-w-[280px] flex-shrink-0\">\n                  <div className=\"flex items-center justify-between gap-2\">\n                    <div className=\"flex-1 min-w-0\">\n                      <div className=\"flex flex-wrap items-center gap-1 mb-1\">\n                        <Badge className={`${getPriorityColor(request.priority)} text-[10px] h-4 px-1`}>\n                          {request.priority === 'high' ? '높음' : request.priority === 'medium' ? '보통' : '낮음'}\n                        </Badge>\n                        <span className=\"text-xs font-medium text-gray-900 truncate max-w-[120px]\">\n                          {request.vendor_name || '업체명 없음'}\n                        </span>\n                        <span className=\"text-[10px] text-gray-500\">\n                          {request.daysOverdue}일 지연\n                        </span>\n                      </div>\n                      <div className=\"text-[10px] text-gray-600\">\n                        <span>발주: {request.purchase_order_number || request.id.slice(0, 8)}</span>\n                        <span className=\"ml-1\">• {request.total_items}개</span>\n                      </div>\n                    </div>\n                    <div className=\"flex gap-1 shrink-0\">\n                      <Button\n                        size=\"sm\"\n                        variant=\"outline\"\n                        onClick={() => navigate(`/purchase?highlight=${request.id}`)}\n                        className=\"h-6 px-2 text-[10px]\"\n                      >\n                        <Eye className=\"w-3 h-3 mr-0.5\" />\n                        보기\n                      </Button>\n                      <Button\n                        size=\"sm\"\n                        onClick={() => handleQuickApprove(request.id)}\n                        disabled={actionLoading === request.id}\n                        className=\"bg-red-600 hover:bg-red-700 h-6 px-2 text-[10px]\"\n                      >\n                        <ThumbsUp className=\"w-3 h-3 mr-0.5\" />\n                        {actionLoading === request.id ? '처리중' : '승인'}\n                      </Button>\n                    </div>\n                  </div>\n                </div>\n              ))}\n              </div>\n            </CardContent>\n          </Card>\n        )}\n\n\n\n        {/* 통합 대시보드 그리드 */}\n        <div className=\"mb-2\">\n          <h2 className=\"text-sm font-semibold text-gray-900 mb-2 flex items-center gap-1.5\">\n            <Package className=\"w-3.5 h-3.5 text-gray-600\" />\n            전체 현황\n          </h2>\n        </div>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-3\">\n          {/* Lead Buyer - 미다운로드 발주서 */}\n          {(currentUserRoles.includes('lead buyer') || currentUserRoles.includes('lead buyer')) && undownloadedOrders.length > 0 && (\n            <Card className=\"w-full col-span-1 row-span-2 border-gray-200 shadow-sm hover:shadow-md transition-shadow\">\n              <CardHeader className=\"py-3 px-4 bg-gray-50 border-b\">\n                <CardTitle className=\"text-sm font-semibold flex items-center justify-between\">\n                  <div className=\"flex items-center gap-2\">\n                    <Download className=\"w-4 h-4 text-orange-600\" />\n                    <span className=\"text-gray-900\">미다운로드 발주서</span>\n                  </div>\n                  <Badge className=\"bg-orange-100 text-orange-700 border-orange-200 px-2 py-0.5\">\n                    {undownloadedOrders.length}\n                  </Badge>\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"p-4\">\n                <div className=\"space-y-2\">\n                  {undownloadedOrders.slice(0, 5).map((item) => {\n                    const items = item.purchase_request_items || []\n                    const firstItem = items[0] || {}\n                    const totalAmount = items.reduce((sum: number, i: any) => {\n                      return sum + (Number(i.amount_value) || 0)\n                    }, 0)\n                    const totalQty = items.reduce((sum: number, i: any) => {\n                      return sum + (Number(i.quantity) || 0)\n                    }, 0)\n                    const daysSince = Math.floor((Date.now() - new Date(item.created_at).getTime()) / (1000 * 60 * 60 * 24))\n                    const isAdvance = item.progress_type === '선진행'\n                    \n                    return (\n                      <div \n                        key={item.id} \n                        className={`border rounded-lg p-3 transition-all cursor-pointer hover:shadow-sm ${\n                          isAdvance ? 'bg-red-50 hover:bg-red-100 border-red-200' : 'bg-white hover:bg-gray-50 border-gray-200'\n                        }`}\n                        onClick={() => {\n                          setSelectedOrder(item)\n                          setIsOrderModalOpen(true)\n                        }}\n                      >\n                        <div className=\"flex items-start justify-between gap-3\">\n                          <div className=\"flex-1 min-w-0\">\n                            <div className=\"flex items-center gap-2 mb-1\">\n                              <span className=\"font-semibold text-sm text-gray-900\">\n                                {item.purchase_order_number || `PO-${item.id.slice(0, 8)}`}\n                              </span>\n                              {isAdvance && (\n                                <Badge className=\"text-[10px] bg-red-100 text-red-700 border-red-200 px-1.5 py-0\">\n                                  선진행\n                                </Badge>\n                              )}\n                              {daysSince > 3 && (\n                                <Badge variant=\"outline\" className=\"text-[10px] px-1.5 py-0\">\n                                  {daysSince}일 경과\n                                </Badge>\n                              )}\n                            </div>\n                            <div className=\"space-y-1\">\n                              <div className=\"text-xs text-gray-600\">\n                                {item.vendor_name || '업체명 없음'}\n                              </div>\n                              <div className=\"text-xs text-gray-500\">\n                                {firstItem.item_name || '품목'} \n                                {items.length > 1 && (\n                                  <span className=\"text-gray-400\"> 외 {items.length - 1}건</span>\n                                )}\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"text-right space-y-1\">\n                            <div className=\"text-sm font-bold text-gray-900\">\n                              ₩{totalAmount.toLocaleString()}\n                            </div>\n                            <Button\n                              size=\"sm\"\n                              variant=\"outline\"\n                              className=\"h-7 px-2 text-[10px] border-orange-200 hover:bg-orange-50\"\n                              onClick={(e) => {\n                                e.stopPropagation()\n                                handleDownloadExcel(item)\n                              }}\n                              disabled={downloadingIds.has(item.id)}\n                            >\n                              {downloadingIds.has(item.id) ? (\n                                <div className=\"w-3 h-3 border border-orange-600 border-t-transparent rounded-full animate-spin\" />\n                              ) : (\n                                <>\n                                  <Download className=\"w-3 h-3 mr-1\" />\n                                  다운로드\n                                </>\n                              )}\n                            </Button>\n                          </div>\n                        </div>\n                      </div>\n                    )\n                  })}\n                  {undownloadedOrders.length > 5 && (\n                    <Button \n                      variant=\"outline\" \n                      size=\"sm\" \n                      className=\"w-full text-xs h-8 border-gray-200 hover:bg-gray-50\"\n                      onClick={() => navigate('/purchase/list?tab=purchase')}\n                    >\n                      전체보기 ({undownloadedOrders.length}건) →\n                    </Button>\n                  )}\n                </div>\n              </CardContent>\n            </Card>\n          )}\n\n          {/* 내 승인 진행중 */}\n          <Card className=\"w-full col-span-1 border-gray-200 shadow-sm hover:shadow-md transition-shadow\">\n            <CardHeader className=\"py-3 px-4 bg-gray-50 border-b\">\n              <CardTitle className=\"text-sm font-semibold flex items-center justify-between\">\n                <div className=\"flex items-center gap-2\">\n                  <Clock className=\"w-4 h-4 text-purple-600\" />\n                  <span className=\"text-gray-900\">내 승인 진행중</span>\n                </div>\n                {data.myRecentRequests.length > 0 && (\n                  <Badge className=\"bg-purple-100 text-purple-700 border-purple-200 px-2 py-0.5\">\n                    {data.myRecentRequests.length}\n                  </Badge>\n                )}\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"p-4\">\n              {data.myRecentRequests.length === 0 ? (\n                <div className=\"text-center py-12 text-gray-400\">\n                  <Clock className=\"w-10 h-10 mx-auto mb-3 text-gray-300\" />\n                  <p className=\"text-sm font-medium\">승인 진행중인 항목이 없습니다</p>\n                  <Button \n                    size=\"sm\" \n                    variant=\"outline\"\n                    className=\"mt-3 h-8 text-xs px-4 border-gray-200\"\n                    onClick={() => navigate('/purchase/new')}\n                  >\n                    새 요청 작성\n                  </Button>\n                </div>\n              ) : (\n                <div className=\"space-y-2\">\n                  {data.myRecentRequests.slice(0, 3).map((request) => {\n                    const progress = request.middle_manager_status === 'pending' ? 25 : 50\n                    \n                    return (\n                      <div \n                        key={request.id} \n                        className=\"border border-gray-200 rounded-lg p-3 bg-white hover:bg-gray-50 transition-all cursor-pointer hover:shadow-sm\"\n                        onClick={() => navigate(`/purchase?highlight=${request.id}`)}\n                      >\n                        <div className=\"flex items-start justify-between gap-3\">\n                          <div className=\"flex-1 min-w-0\">\n                            <div className=\"flex items-center gap-2 mb-1\">\n                              <span className=\"font-semibold text-sm text-gray-900\">\n                                {request.purchase_order_number || `PO-${request.id.slice(0, 8)}`}\n                              </span>\n                              <Badge className=\"text-[10px] bg-purple-100 text-purple-700 border-purple-200 px-1.5 py-0\">\n                                {progress}% 진행\n                              </Badge>\n                            </div>\n                            <div className=\"space-y-1\">\n                              <div className=\"text-xs text-gray-600\">\n                                {request.vendor_name || '업체명 없음'}\n                              </div>\n                              <div className=\"text-xs text-gray-500\">\n                                {request.total_items}개 품목\n                              </div>\n                              <div className=\"flex items-center gap-2 mt-2\">\n                                <div className=\"flex-1 bg-gray-200 rounded-full h-2\">\n                                  <div \n                                    className=\"bg-purple-600 h-2 rounded-full transition-all\"\n                                    style={{ width: `${progress}%` }}\n                                  />\n                                </div>\n                                <span className=\"text-[10px] text-gray-600\">{progress}%</span>\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"text-right space-y-1\">\n                            <div className=\"text-sm font-bold text-gray-900\">\n                              ₩{(request.total_amount || 0).toLocaleString()}\n                            </div>\n                            <div className=\"text-[10px] text-gray-500\">\n                              {request.current_step === 'approval' ? '승인 대기' : request.current_step === 'purchase' ? '구매 대기' : '진행중'}\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    )\n                  })}\n                  {data.myRecentRequests.length > 3 && (\n                    <Button \n                      variant=\"outline\" \n                      size=\"sm\" \n                      className=\"w-full text-xs h-8 border-gray-200 hover:bg-gray-50\"\n                      onClick={() => navigate('/purchase')}\n                    >\n                      전체보기 ({data.myRecentRequests.length}건) →\n                    </Button>\n                  )}\n                </div>\n              )}\n            </CardContent>\n          </Card>\n\n          {/* 승인 대기 (승인 권한자만 표시) */}\n          {canSeeApprovalBox && (\n            <Card className=\"w-full col-span-1 row-span-2\">\n              <CardHeader className=\"pb-2 pt-3\">\n                <div className=\"flex items-center justify-between\">\n                  <CardTitle className=\"text-xs sm:text-sm font-semibold flex items-center gap-1.5\">\n                    <Clock className=\"w-3.5 h-3.5 text-orange-500\" />\n                    승인 대기\n                    {data.pendingApprovals.length > 0 && (\n                      <Badge variant=\"destructive\" className=\"text-[10px] h-4 px-1\">\n                        {data.pendingApprovals.length}\n                      </Badge>\n                    )}\n                  </CardTitle>\n                  {data.pendingApprovals.length > 0 && (\n                    <Button\n                      size=\"sm\"\n                      variant=\"ghost\"\n                      onClick={() => navigate('/purchase')}\n                      className=\"h-6 px-2\"\n                    >\n                      <ArrowRight className=\"w-3 h-3\" />\n                    </Button>\n                  )}\n                </div>\n              </CardHeader>\n              <CardContent className=\"p-3\">\n                {data.pendingApprovals.length === 0 ? (\n                  <div className=\"text-center py-4 text-gray-400\">\n                    <CheckCircle className=\"w-6 h-6 mx-auto mb-1\" />\n                    <p className=\"text-xs\">대기 항목 없음</p>\n                  </div>\n                  ) : (\n                  <div className=\"space-y-1.5\">\n                    {data.pendingApprovals.slice(0, 5).map((approval) => {\n                      const items = approval.purchase_request_items || []\n                      const firstItem = items[0] || {}\n                      const totalAmount = approval.total_amount || items.reduce((sum: number, i: any) => sum + (Number(i.amount_value) || 0), 0)\n                      const isAdvance = approval.progress_type === '선진행'\n                      \n                      return (\n                        <div \n                          key={approval.id} \n                          className={`border rounded-lg p-2 hover:shadow-sm transition-all cursor-pointer ${\n                            isAdvance ? 'bg-red-50 border-red-200' : 'hover:bg-orange-50/30'\n                          }`}\n                          onClick={(e) => {\n                            if ((e.target as HTMLElement).closest('button')) return\n                            setSelectedApprovalId(Number(approval.id))\n                            setIsModalOpen(true)\n                          }}\n                        >\n                          <div className=\"flex items-start justify-between gap-2\">\n                            <div className=\"flex-1 min-w-0\">\n                              <div className=\"flex items-center gap-1 mb-1\">\n                                <span className=\"font-medium text-[11px]\">\n                                  {approval.purchase_order_number}\n                                </span>\n                                {isAdvance && (\n                                  <Badge className=\"text-[8px] bg-red-100 text-red-800 px-1 h-3.5\">\n                                    선진행\n                                  </Badge>\n                                )}\n                              </div>\n                              <div className=\"text-[10px] text-gray-600 space-y-0.5\">\n                                <div className=\"truncate\">\n                                  {firstItem.item_name || '품목'} {items.length > 1 && `외 ${items.length - 1}건`}\n                                </div>\n                                <div className=\"flex items-center justify-between text-[10px]\">\n                                  <span className=\"truncate max-w-[100px]\">{approval.vendor_name || '업체'}</span>\n                                  <span className=\"font-semibold text-gray-900\">₩{(totalAmount/1000000).toFixed(1)}M</span>\n                                </div>\n                              </div>\n                            </div>\n                            <Button\n                              size=\"sm\"\n                              onClick={(e) => {\n                                e.stopPropagation()\n                                handleQuickApprove(approval.id)\n                              }}\n                              disabled={actionLoading === approval.id}\n                              className={`h-7 px-2 text-white text-[10px] shrink-0 ${\n                                approval.middle_manager_status === 'approved' \n                                  ? 'bg-blue-600 hover:bg-blue-700' \n                                  : 'bg-green-600 hover:bg-green-700'\n                              }`}\n                            >\n                              {actionLoading === approval.id ? (\n                                <div className=\"w-3 h-3 border border-white border-t-transparent rounded-full animate-spin\" />\n                              ) : (\n                                <>\n                                  {approval.middle_manager_status === 'approved' ? '최종' : '1차'} 승인\n                                </>\n                              )}\n                            </Button>\n                          </div>\n                        </div>\n                      )\n                    })}\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          )}\n          \n          {/* 구매 대기중 - 모든 사용자에게 표시 (본인 것만) */}\n          <Card className=\"w-full col-span-1 border-gray-200 shadow-sm hover:shadow-md transition-shadow\">\n              <CardHeader className=\"py-3 px-4 bg-gray-50 border-b\">\n                <CardTitle className=\"text-sm font-semibold flex items-center justify-between\">\n                  <div className=\"flex items-center gap-2\">\n                    <ShoppingCart className=\"w-4 h-4 text-yellow-600\" />\n                    <span className=\"text-gray-900\">구매 대기</span>\n                  </div>\n                  {data.myPurchaseStatus && data.myPurchaseStatus.waitingPurchase && data.myPurchaseStatus.waitingPurchase.length > 0 && (\n                    <Badge className=\"bg-yellow-100 text-yellow-700 border-yellow-200 px-2 py-0.5\">\n                      {data.myPurchaseStatus.waitingPurchase.length}\n                    </Badge>\n                  )}\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"p-4\">\n                {!data.myPurchaseStatus || !data.myPurchaseStatus.waitingPurchase || data.myPurchaseStatus.waitingPurchase.length === 0 ? (\n                  <div className=\"text-center py-12 text-gray-400\">\n                    <ShoppingCart className=\"w-10 h-10 mx-auto mb-3 text-gray-300\" />\n                    <p className=\"text-sm font-medium\">구매 대기 항목이 없습니다</p>\n                  </div>\n                ) : (\n                  <div className=\"space-y-2\">\n                    {data.myPurchaseStatus.waitingPurchase.slice(0, 3).map((item) => {\n                      const items = item.purchase_request_items || []\n                      const firstItem = items[0]\n                      const totalAmount = items.reduce((sum: number, i: any) => sum + (Number(i.amount_value) || 0), 0)\n                      const isSeonJin = (item.progress_type || '').includes('선진행')\n                      \n                      return (\n                        <div \n                          key={item.id} \n                          className={`border rounded-lg p-3 transition-all cursor-pointer hover:shadow-sm ${\n                            isSeonJin ? 'bg-red-50 hover:bg-red-100 border-red-200' : 'bg-white hover:bg-gray-50 border-gray-200'\n                          }`}\n                          onClick={() => handleStatusClick(item, 'purchase')}\n                        >\n                          <div className=\"flex items-start justify-between gap-3\">\n                            <div className=\"flex-1 min-w-0\">\n                              <div className=\"flex items-center gap-2 mb-1\">\n                                <span className=\"font-semibold text-sm text-gray-900\">\n                                  {item.purchase_order_number || `PO-${item.id.slice(0, 8)}`}\n                                </span>\n                                {isSeonJin && (\n                                  <Badge className=\"text-[10px] bg-red-100 text-red-700 border-red-200 px-1.5 py-0\">\n                                    선진행\n                                  </Badge>\n                                )}\n                              </div>\n                              <div className=\"space-y-1\">\n                                <div className=\"text-xs text-gray-600\">\n                                  {item.vendor_name || '업체명 없음'}\n                                </div>\n                                <div className=\"text-xs text-gray-500\">\n                                  {firstItem?.item_name || '품목'} \n                                  {items.length > 1 && (\n                                    <span className=\"text-gray-400\"> 외 {items.length - 1}건</span>\n                                  )}\n                                </div>\n                              </div>\n                            </div>\n                            <div className=\"text-right space-y-1\">\n                              <div className=\"text-sm font-bold text-gray-900\">\n                                ₩{totalAmount.toLocaleString()}\n                              </div>\n                              <div className=\"text-[10px] text-gray-500\">\n                                {new Date(item.request_date).toLocaleDateString('ko-KR')}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      )\n                    })}\n                    {/* Lead Buyer인 경우 구매 처리하기 버튼 표시 */}\n                    {(currentUserRoles.includes('lead_buyer') || currentUserRoles.includes('lead buyer')) && (\n                      <Button \n                        className=\"w-full bg-yellow-600 hover:bg-yellow-700 text-xs h-8\"\n                        onClick={() => navigate('/purchase/list')}\n                      >\n                        구매 처리하기\n                      </Button>\n                    )}\n                    \n                    {/* 일반 사용자 또는 3개 이상인 경우 전체보기 버튼 */}\n                    {data.myPurchaseStatus.waitingPurchase.length > 3 && (\n                      <Button \n                        variant=\"outline\" \n                        size=\"sm\" \n                        className=\"w-full text-xs h-8 border-gray-200 hover:bg-gray-50\"\n                        onClick={() => navigate('/purchase?tab=purchase')}\n                      >\n                        전체보기 ({data.myPurchaseStatus.waitingPurchase.length}건) →\n                      </Button>\n                    )}\n                  </div>\n                )}\n              </CardContent>\n          </Card>\n\n          {/* 입고 대기중 */}\n          <Card className=\"w-full col-span-1 border-gray-200 shadow-sm hover:shadow-md transition-shadow\">\n              <CardHeader className=\"py-3 px-4 bg-gray-50 border-b\">\n                <CardTitle className=\"text-sm font-semibold flex items-center justify-between\">\n                  <div className=\"flex items-center gap-2\">\n                    <Truck className=\"w-4 h-4 text-blue-600\" />\n                    <span className=\"text-gray-900\">입고 대기</span>\n                  </div>\n                  {data.myPurchaseStatus.waitingDelivery.length > 0 && (\n                    <Badge className=\"bg-blue-100 text-blue-700 border-blue-200 px-2 py-0.5\">\n                      {data.myPurchaseStatus.waitingDelivery.length}\n                    </Badge>\n                  )}\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"p-4\">\n                {data.myPurchaseStatus.waitingDelivery.length === 0 ? (\n                  <div className=\"text-center py-12 text-gray-400\">\n                    <Truck className=\"w-10 h-10 mx-auto mb-3 text-gray-300\" />\n                    <p className=\"text-sm font-medium\">입고 대기 항목이 없습니다</p>\n                  </div>\n                ) : (\n                  <div className=\"space-y-2\">\n                    {data.myPurchaseStatus.waitingDelivery.slice(0, 3).map((item) => {\n                      const items = item.purchase_request_items || []\n                      const firstItem = items[0]\n                      const totalItems = items.length\n                      const receivedItems = items.filter((i: any) => i.is_received).length\n                      const progress = totalItems > 0 ? Math.round((receivedItems / totalItems) * 100) : 0\n                      const totalAmount = items.reduce((sum: number, i: any) => sum + (Number(i.amount_value) || 0), 0)\n                      const isSeonJin = (item.progress_type || '').includes('선진행')\n                      \n                      return (\n                        <div \n                          key={item.id} \n                          className={`border rounded-lg p-3 transition-all cursor-pointer hover:shadow-sm ${\n                            isSeonJin ? 'bg-red-50 hover:bg-red-100 border-red-200' : 'bg-white hover:bg-gray-50 border-gray-200'\n                          }`}\n                          onClick={() => handleStatusClick(item, 'delivery')}\n                        >\n                          <div className=\"flex items-start justify-between gap-3\">\n                            <div className=\"flex-1 min-w-0\">\n                              <div className=\"flex items-center gap-2 mb-1\">\n                                <span className=\"font-semibold text-sm text-gray-900\">\n                                  {item.purchase_order_number || `PO-${item.id.slice(0, 8)}`}\n                                </span>\n                                {isSeonJin && (\n                                  <Badge className=\"text-[10px] bg-red-100 text-red-700 border-red-200 px-1.5 py-0\">\n                                    선진행\n                                  </Badge>\n                                )}\n                              </div>\n                              <div className=\"space-y-1\">\n                                <div className=\"text-xs text-gray-600\">\n                                  {item.vendor_name || '업체명 없음'}\n                                </div>\n                                <div className=\"text-xs text-gray-500\">\n                                  {firstItem?.item_name || '품목'} \n                                  {totalItems > 1 && (\n                                    <span className=\"text-gray-400\"> 외 {totalItems - 1}건</span>\n                                  )}\n                                </div>\n                                {item.delivery_request_date && (\n                                  <div className=\"text-xs text-blue-600 font-medium\">\n                                    납기: {new Date(item.delivery_request_date).toLocaleDateString('ko-KR')}\n                                  </div>\n                                )}\n                              </div>\n                            </div>\n                            <div className=\"text-right space-y-1\">\n                              <div className=\"text-sm font-bold text-gray-900\">\n                                ₩{totalAmount.toLocaleString()}\n                              </div>\n                              {progress > 0 && (\n                                <div className=\"space-y-1\">\n                                  <div className=\"text-[10px] text-gray-600\">\n                                    {receivedItems}/{totalItems} 입고 ({progress}%)\n                                  </div>\n                                  <div className=\"w-16 bg-gray-200 rounded-full h-1.5\">\n                                    <div \n                                      className=\"bg-blue-600 h-1.5 rounded-full\"\n                                      style={{ width: `${progress}%` }}\n                                    />\n                                  </div>\n                                </div>\n                              )}\n                            </div>\n                          </div>\n                        </div>\n                      )\n                    })}\n                    {data.myPurchaseStatus.waitingDelivery.length > 3 && (\n                      <Button \n                        variant=\"outline\" \n                        size=\"sm\" \n                        className=\"w-full text-xs h-8 border-gray-200 hover:bg-gray-50\"\n                        onClick={() => navigate('/purchase?tab=receipt')}\n                      >\n                        전체보기 ({data.myPurchaseStatus.waitingDelivery.length}건) →\n                      </Button>\n                    )}\n                  </div>\n                )}\n              </CardContent>\n          </Card>\n\n          {/* 최근 완료 */}\n          <Card className=\"w-full col-span-1 border-gray-200 shadow-sm hover:shadow-md transition-shadow\">\n              <CardHeader className=\"py-3 px-4 bg-gray-50 border-b\">\n                <CardTitle className=\"text-sm font-semibold flex items-center justify-between\">\n                  <div className=\"flex items-center gap-2\">\n                    <CheckCircle className=\"w-4 h-4 text-green-600\" />\n                    <span className=\"text-gray-900\">최근 완료</span>\n                  </div>\n                  {data.myPurchaseStatus.recentCompleted.length > 0 && (\n                    <Badge className=\"bg-green-100 text-green-700 border-green-200 px-2 py-0.5\">\n                      {data.myPurchaseStatus.recentCompleted.length}\n                    </Badge>\n                  )}\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"p-4\">\n                {data.myPurchaseStatus.recentCompleted.length === 0 ? (\n                  <div className=\"text-center py-12 text-gray-400\">\n                    <CheckCircle className=\"w-10 h-10 mx-auto mb-3 text-gray-300\" />\n                    <p className=\"text-sm font-medium\">최근 완료 항목이 없습니다</p>\n                  </div>\n                ) : (\n                  <div className=\"space-y-2\">\n                    {data.myPurchaseStatus.recentCompleted.slice(0, 3).map((item) => {\n                      const items = item.purchase_request_items || []\n                      const firstItem = items[0]\n                      const totalAmount = items.reduce((sum: number, i: any) => sum + (Number(i.amount_value) || 0), 0)\n                      \n                      return (\n                        <div \n                          key={item.id} \n                          className=\"border border-green-200 rounded-lg p-3 bg-green-50 hover:bg-green-100 transition-all cursor-pointer hover:shadow-sm\"\n                          onClick={() => handleStatusClick(item, 'completed')}\n                        >\n                          <div className=\"flex items-start justify-between gap-3\">\n                            <div className=\"flex-1 min-w-0\">\n                              <div className=\"flex items-center gap-2 mb-1\">\n                                <span className=\"font-semibold text-sm text-gray-900\">\n                                  {item.purchase_order_number || `PO-${item.id.slice(0, 8)}`}\n                                </span>\n                                <Badge className=\"text-[10px] bg-green-100 text-green-700 border-green-200 px-1.5 py-0\">\n                                  완료\n                                </Badge>\n                              </div>\n                              <div className=\"space-y-1\">\n                                <div className=\"text-xs text-gray-600\">\n                                  {item.vendor_name || '업체명 없음'}\n                                </div>\n                                <div className=\"text-xs text-gray-500\">\n                                  {firstItem?.item_name || '품목'} \n                                  {items.length > 1 && (\n                                    <span className=\"text-gray-400\"> 외 {items.length - 1}건</span>\n                                  )}\n                                </div>\n                                {item.received_at && (\n                                  <div className=\"text-xs text-green-600 font-medium\">\n                                    입고완료: {new Date(item.received_at).toLocaleDateString('ko-KR')}\n                                  </div>\n                                )}\n                              </div>\n                            </div>\n                            <div className=\"text-right space-y-1\">\n                              <div className=\"text-sm font-bold text-gray-900\">\n                                ₩{totalAmount.toLocaleString()}\n                              </div>\n                              <div className=\"text-[10px] text-gray-500\">\n                                {new Date(item.received_at || item.created_at).toLocaleDateString('ko-KR')}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      )\n                    })}\n                    {data.myPurchaseStatus.recentCompleted.length > 3 && (\n                      <Button \n                        variant=\"outline\" \n                        size=\"sm\" \n                        className=\"w-full text-xs h-8 border-gray-200 hover:bg-gray-50\"\n                        onClick={() => navigate('/purchase?tab=done')}\n                      >\n                        전체보기 ({data.myPurchaseStatus.recentCompleted.length}건) →\n                      </Button>\n                    )}\n                  </div>\n                )}\n              </CardContent>\n          </Card>\n        </div>\n\n        {/* 오늘의 요약 - 상단 통계에 통합 */}\n      </div>\n      \n      {/* 승인 상세보기 모달 */}\n      <PurchaseDetailModal\n        purchaseId={selectedApprovalId}\n        isOpen={isModalOpen}\n        onClose={() => {\n          setIsModalOpen(false)\n          setSelectedApprovalId(null)\n        }}\n        currentUserRoles={currentUserRoles}\n        onRefresh={() => {\n          loadDashboardData()\n          setIsModalOpen(false)\n          setSelectedApprovalId(null)\n          }}\n      />\n      \n      {/* 구매/입고 상태 상세보기 모달 */}\n      <PurchaseStatusModal\n          isOpen={isStatusModalOpen}\n          onClose={() => {\n            setIsStatusModalOpen(false)\n            setSelectedStatusItem(null)\n            setStatusModalType(null)\n          }}\n          item={selectedStatusItem}\n          type={statusModalType as any}\n          onRefresh={() => loadDashboardData(false)}\n      />\n\n      {/* Order Detail Modal - PurchaseStatusModal과 동일한 디자인 */}\n      {isOrderModalOpen && selectedOrder && (\n        <Dialog open={isOrderModalOpen} onOpenChange={() => {\n          setIsOrderModalOpen(false)\n          setSelectedOrder(null)\n        }}>\n          <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-y-auto\">\n            <DialogHeader>\n              <DialogTitle className=\"text-xl font-bold\">\n                {selectedOrder.purchase_order_number} 상세보기\n              </DialogTitle>\n              <DialogDescription>\n                {selectedOrder.vendor_name || '업체명 없음'}\n              </DialogDescription>\n            </DialogHeader>\n\n            <div className=\"space-y-6\">\n              {/* 기본 정보 */}\n              <div className=\"bg-gray-50 rounded-lg p-6\">\n                <h3 className=\"font-semibold mb-4 flex items-center text-gray-900\">\n                  <FileText className=\"w-5 h-5 mr-2 text-gray-700\" />\n                  기본 정보\n                </h3>\n                <div className=\"grid grid-cols-2 md:grid-cols-3 gap-6\">\n                  <div>\n                    <p className=\"text-sm text-gray-500 mb-1\">요청자</p>\n                    <p className=\"font-medium text-gray-900\">{selectedOrder.requester_name}</p>\n                  </div>\n                  <div>\n                    <p className=\"text-sm text-gray-500 mb-1\">요청일</p>\n                    <p className=\"font-medium text-gray-900\">\n                      {new Date(selectedOrder.request_date || selectedOrder.created_at).toLocaleDateString('ko-KR')}\n                    </p>\n                  </div>\n                  <div>\n                    <p className=\"text-sm text-gray-500 mb-1\">납기요청일</p>\n                    <p className=\"font-medium text-gray-900\">\n                      {selectedOrder.delivery_request_date \n                        ? new Date(selectedOrder.delivery_request_date).toLocaleDateString('ko-KR')\n                        : '-'}\n                    </p>\n                  </div>\n                  <div>\n                    <p className=\"text-sm text-gray-500 mb-1\">결제유형</p>\n                    <p className=\"font-medium text-gray-900\">{selectedOrder.payment_category || '-'}</p>\n                  </div>\n                  <div>\n                    <p className=\"text-sm text-gray-500 mb-1\">진행구분</p>\n                    <p className=\"font-medium text-gray-900\">{selectedOrder.progress_type || '일반'}</p>\n                  </div>\n                  <div>\n                    <p className=\"text-sm text-gray-500 mb-1\">상태</p>\n                    <p className=\"font-medium\">\n                      <Badge className=\"bg-orange-50 text-orange-700 border-orange-200\">\n                        미다운로드\n                      </Badge>\n                    </p>\n                  </div>\n                </div>\n              </div>\n\n              {/* 업체 정보 */}\n              <div className=\"bg-gray-50 rounded-lg p-6\">\n                <h3 className=\"font-semibold mb-4 flex items-center text-gray-900\">\n                  <Building2 className=\"w-5 h-5 mr-2 text-gray-700\" />\n                  업체 정보\n                </h3>\n                <div className=\"grid grid-cols-2 md:grid-cols-3 gap-6\">\n                  <div>\n                    <p className=\"text-sm text-gray-500 mb-1\">업체명</p>\n                    <p className=\"font-medium text-gray-900\">{selectedOrder.vendor_name || '-'}</p>\n                  </div>\n                  <div>\n                    <p className=\"text-sm text-gray-500 mb-1\">프로젝트 업체</p>\n                    <p className=\"font-medium text-gray-900\">{selectedOrder.project_vendor || '-'}</p>\n                  </div>\n                  <div>\n                    <p className=\"text-sm text-gray-500 mb-1\">판매주문번호</p>\n                    <p className=\"font-medium text-gray-900\">{selectedOrder.sales_order_number || '-'}</p>\n                  </div>\n                  <div>\n                    <p className=\"text-sm text-gray-500 mb-1\">프로젝트 품목</p>\n                    <p className=\"font-medium text-gray-900\">{selectedOrder.project_item || '-'}</p>\n                  </div>\n                  <div>\n                    <p className=\"text-sm text-gray-500 mb-1\">발주서 템플릿</p>\n                    <p className=\"font-medium text-gray-900\">{selectedOrder.po_template_type || '일반'}</p>\n                  </div>\n                  <div>\n                    <p className=\"text-sm text-gray-500 mb-1\">통화</p>\n                    <p className=\"font-medium text-gray-900\">{selectedOrder.currency || 'KRW'}</p>\n                  </div>\n                </div>\n              </div>\n\n              {/* 품목 리스트 */}\n              <div className=\"bg-gray-50 rounded-lg p-6\">\n                <h3 className=\"font-semibold mb-4 flex items-center text-gray-900\">\n                  <Package className=\"w-5 h-5 mr-2 text-gray-700\" />\n                  품목 리스트\n                </h3>\n                <div className=\"overflow-x-auto\">\n                  <table className=\"min-w-full bg-white rounded-lg overflow-hidden shadow-sm\">\n                    <thead className=\"bg-gray-100\">\n                      <tr>\n                        <th className=\"px-4 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">품명</th>\n                        <th className=\"px-4 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">규격</th>\n                        <th className=\"px-4 py-3 text-center text-xs font-semibold text-gray-600 uppercase tracking-wider\">수량</th>\n                        <th className=\"px-4 py-3 text-right text-xs font-semibold text-gray-600 uppercase tracking-wider\">단가</th>\n                        <th className=\"px-4 py-3 text-right text-xs font-semibold text-gray-600 uppercase tracking-wider\">금액</th>\n                        <th className=\"px-4 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">비고</th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"bg-white divide-y divide-gray-200\">\n                      {(selectedOrder.purchase_request_items || []).map((pItem: any, index: number) => {\n                        const unitPrice = pItem.quantity > 0 ? (Number(pItem.amount_value) || 0) / pItem.quantity : 0\n                        return (\n                          <tr key={index} className=\"hover:bg-gray-50 transition-colors\">\n                            <td className=\"px-4 py-3\">\n                              <span className=\"text-sm font-medium text-gray-900\">{pItem.item_name || '품목명 없음'}</span>\n                            </td>\n                            <td className=\"px-4 py-3\">\n                              <span className=\"text-sm text-gray-600\">{pItem.specification || '-'}</span>\n                            </td>\n                            <td className=\"px-4 py-3 text-center\">\n                              <span className=\"text-sm font-medium text-gray-900\">{pItem.quantity || 0}</span>\n                            </td>\n                            <td className=\"px-4 py-3 text-right\">\n                              <span className=\"text-sm text-gray-900\">₩{unitPrice.toLocaleString()}</span>\n                            </td>\n                            <td className=\"px-4 py-3 text-right\">\n                              <span className=\"text-sm font-semibold text-gray-900\">₩{(Number(pItem.amount_value) || 0).toLocaleString()}</span>\n                            </td>\n                            <td className=\"px-4 py-3\">\n                              <span className=\"text-sm text-gray-600\">{pItem.remark || '-'}</span>\n                            </td>\n                          </tr>\n                        )\n                      })}\n                    </tbody>\n                  </table>\n                </div>\n\n                {/* 총액 */}\n                <div className=\"mt-6 bg-white rounded-lg p-4 shadow-sm\">\n                  <div className=\"flex justify-between items-center\">\n                    <div>\n                      <span className=\"text-sm text-gray-600\">총</span>\n                      <span className=\"ml-1 font-semibold text-gray-900\">\n                        {(selectedOrder.purchase_request_items || []).reduce((sum: number, i: any) => sum + (Number(i.quantity) || 0), 0)}개\n                      </span>\n                      <span className=\"text-sm text-gray-600 ml-1\">항목</span>\n                    </div>\n                    <div className=\"text-right\">\n                      <span className=\"text-sm text-gray-600 block\">총액</span>\n                      <span className=\"font-bold text-xl text-gray-900\">\n                        ₩{(selectedOrder.purchase_request_items || []).reduce((sum: number, i: any) => {\n                          return sum + (Number(i.amount_value) || 0)\n                        }, 0).toLocaleString()}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {/* 버튼 영역 */}\n              <div className=\"flex justify-between gap-3 mt-6\">\n                <div className=\"flex gap-2\">\n                  <Button\n                    onClick={() => handleDownloadExcel(selectedOrder)}\n                    disabled={downloadingIds.has(selectedOrder.id)}\n                    className=\"bg-orange-600 hover:bg-orange-700\"\n                    size=\"sm\"\n                  >\n                    {downloadingIds.has(selectedOrder.id) ? (\n                      <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin mr-2\" />\n                    ) : (\n                      <Download className=\"w-4 h-4 mr-2\" />\n                    )}\n                    Excel 다운로드\n                  </Button>\n                </div>\n\n                <div className=\"flex gap-2\">\n                  <Button\n                    variant=\"outline\"\n                    onClick={() => navigate(`/purchase/list?tab=purchase`)}\n                    size=\"sm\"\n                  >\n                    발주 목록에서 보기\n                    <ArrowRight className=\"w-4 h-4 ml-2\" />\n                  </Button>\n                  <Button\n                    variant=\"ghost\"\n                    onClick={() => {\n                      setIsOrderModalOpen(false)\n                      setSelectedOrder(null)\n                    }}\n                    size=\"sm\"\n                  >\n                    닫기\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n      )}\n    </div>\n  )\n}"],"names":["__iconNode","ArrowRight","createLucideIcon","Clock","ThumbsUp","TriangleAlert","DashboardService","createClient","purchaseRole","roles","r","employee","stats","urgentRequests","myRecentRequests","pendingApprovals","quickActions","todaySummary","myPurchaseStatus","today","totalResult","myRequestsResult","pendingResult","completedResult","urgentResult","todayActionsResult","threeDaysAgo","query","data","item","allRequests","firstTry","fallback","filteredData","isPending","status","items","vendor_name","vendor","purchase_request_items","total_amount","sum","i","amount","actions","pendingCount","purchaseCount","tomorrow","approvedResult","requestedResult","receivedResult","requesterName","sevenDaysAgo","myRequests","allMyRequests","waitingPurchase","categoryNormalized","isPurchaseRequest","notPaid","isSeonJin","isIlban","finalApproved","waitingDelivery","notReceived","recentCompleted","receivedDate","sevenDaysAgoDate","requestId","request","updateData","updatedData","error","mid","fin","pur","count","daysPending","progress","created","estimatedDays","isDownloadable","notDownloaded","a","b","dashboardService","PurchaseStatusModal","isOpen","onClose","type","onRefresh","navigate","useNavigate","supabase","currentUserRoles","setCurrentUserRoles","useState","processing","setProcessing","useEffect","user","totalAmount","totalQuantity","typeInfo","jsx","ShoppingCart","Truck","CheckCircle","Dialog","jsxs","DialogContent","DialogHeader","DialogTitle","DialogDescription","FileText","Badge","Building2","Package","pItem","index","unitPrice","receivedCount","totalCount","percentage","Button","toast","CreditCard","DashboardMain","setData","loading","setLoading","actionLoading","setActionLoading","selectedApprovalId","setSelectedApprovalId","isModalOpen","setIsModalOpen","undownloadedOrders","setUndownloadedOrders","downloadingIds","setDownloadingIds","selectedOrder","setSelectedOrder","isOrderModalOpen","setIsOrderModalOpen","selectedStatusItem","setSelectedStatusItem","statusModalType","setStatusModalType","isStatusModalOpen","setIsStatusModalOpen","loadDashboardData","useCallback","showLoading","authError","employeeError","defaultEmployee","dashboardData","err","totalDeliveryWaiting","undownloaded","handleQuickApprove","originalData","prev","result","handleStatusClick","handleDownloadExcel","purchase","workbook","ExcelJS","worksheet","buffer","blob","url","link","newSet","getPriorityColor","priority","canSeeApprovalBox","Card","CardHeader","CardTitle","AlertTriangle","CardContent","Eye","Download","firstItem","daysSince","isAdvance","e","Fragment","approval","totalItems","receivedItems","PurchaseDetailModal"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}