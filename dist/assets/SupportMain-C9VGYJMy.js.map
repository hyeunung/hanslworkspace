{"version":3,"file":"SupportMain-C9VGYJMy.js","sources":["../../node_modules/lucide-react/dist/esm/icons/send.js","../../src/services/supportService.ts","../../src/components/support/SupportMain.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M14.536 21.686a.5.5 0 0 0 .937-.024l6.5-19a.496.496 0 0 0-.635-.635l-19 6.5a.5.5 0 0 0-.024.937l7.93 3.18a2 2 0 0 1 1.112 1.11z\",\n      key: \"1ffxy3\"\n    }\n  ],\n  [\"path\", { d: \"m21.854 2.147-10.94 10.939\", key: \"12cjpa\" }]\n];\nconst Send = createLucideIcon(\"send\", __iconNode);\n\nexport { __iconNode, Send as default };\n//# sourceMappingURL=send.js.map\n","import { createClient } from '@/lib/supabase/client'\nimport { logger } from '@/lib/logger'\n\nexport interface SupportInquiry {\n  id?: number\n  created_at?: string\n  updated_at?: string\n  user_id?: string\n  user_email?: string\n  user_name?: string\n  inquiry_type: 'bug' | 'modify' | 'delete' | 'other' | 'annual_leave' | 'attendance'\n  subject: string\n  message: string\n  status?: 'open' | 'in_progress' | 'resolved' | 'closed'\n  handled_by?: string\n  resolution_note?: string\n  purchase_request_id?: number | null\n  purchase_info?: string\n  purchase_order_number?: string\n  processed_at?: string\n  requester_id?: string\n  purchase_requests?: any\n}\n\nexport interface CreateSupportInquiryPayload {\n  inquiry_type: 'bug' | 'modify' | 'delete' | 'other' | 'annual_leave' | 'attendance'\n  subject: string\n  message: string\n  purchase_request_id?: number\n  purchase_info?: string\n  purchase_order_number?: string\n}\n\nclass SupportService {\n  private supabase = createClient()\n\n  // 문의 생성\n  async createInquiry(payload: CreateSupportInquiryPayload): Promise<{ success: boolean; error?: string }> {\n    try {\n      const { data: { user }, error: authError } = await this.supabase.auth.getUser()\n      if (authError || !user) return { success: false, error: '로그인이 필요합니다.' }\n\n      const { data: employee } = await this.supabase\n        .from('employees')\n        .select('id, name, email')\n        .eq('email', user.email)\n        .maybeSingle()\n\n      const { error } = await this.supabase\n        .from('support_inquires')\n        .insert({\n          user_id: user.id,\n          user_email: employee?.email || user.email,\n          user_name: employee?.name || '',\n          requester_id: employee?.id,\n          inquiry_type: payload.inquiry_type,\n          subject: payload.subject,\n          message: payload.message,\n          purchase_info: payload.purchase_info,\n          purchase_order_number: payload.purchase_order_number,\n          status: 'open'\n        })\n\n      if (error) {\n        logger.error('문의 등록 에러', error, {\n          code: error.code,\n          details: error.details,\n          hint: error.hint\n        })\n        return { success: false, error: error.message }\n      }\n      return { success: true }\n    } catch (e) {\n      return { success: false, error: e instanceof Error ? e.message : '문의 접수 실패' }\n    }\n  }\n\n  // 내 문의 목록 조회\n  async getMyInquiries(): Promise<{ success: boolean; data: SupportInquiry[]; error?: string }> {\n    try {\n      const { data: { user }, error: authError } = await this.supabase.auth.getUser()\n      if (authError || !user) {\n        return { success: false, data: [], error: '로그인이 필요합니다.' }\n      }\n\n\n      const { data, error } = await this.supabase\n        .from('support_inquires')\n        .select('*')\n        .eq('user_id', user.id)\n        .order('created_at', { ascending: false })\n\n\n      if (error) {\n        throw error\n      }\n\n      return { success: true, data: data || [] }\n    } catch (e) {\n      return { success: false, data: [], error: e instanceof Error ? e.message : '문의 조회 실패' }\n    }\n  }\n\n  // 모든 문의 목록 조회 (관리자용)\n  async getAllInquiries(): Promise<{ success: boolean; data: SupportInquiry[]; error?: string }> {\n    try {\n      const { data, error } = await this.supabase\n        .from('support_inquires')\n        .select('*')\n        .order('created_at', { ascending: false })\n\n\n      if (error) {\n        throw error\n      }\n\n      return { success: true, data: data || [] }\n    } catch (e) {\n      return { success: false, data: [], error: e instanceof Error ? e.message : '문의 조회 실패' }\n    }\n  }\n\n  // 문의 상태 업데이트 (관리자용)\n  async updateInquiryStatus(\n    inquiryId: number, \n    status: 'open' | 'in_progress' | 'resolved' | 'closed',\n    resolution_note?: string\n  ): Promise<{ success: boolean; error?: string }> {\n    try {\n      const { data: { user }, error: authError } = await this.supabase.auth.getUser()\n      if (authError || !user) return { success: false, error: '로그인이 필요합니다.' }\n\n      const { data: employee } = await this.supabase\n        .from('employees')\n        .select('name')\n        .eq('email', user.email)\n        .single()\n\n      const updateData: any = {\n        status,\n        handled_by: employee?.name || user.email,\n        updated_at: new Date().toISOString()\n      }\n\n      // resolved나 closed 상태로 변경 시 처리 시간 기록\n      if (status === 'resolved' || status === 'closed') {\n        updateData.processed_at = new Date().toISOString()\n      }\n\n      // resolution_note가 있으면 추가\n      if (resolution_note) {\n        updateData.resolution_note = resolution_note\n      }\n\n      const { error } = await this.supabase\n        .from('support_inquires')\n        .update(updateData)\n        .eq('id', inquiryId)\n\n      if (error) throw error\n\n      return { success: true }\n    } catch (e) {\n      return { success: false, error: e instanceof Error ? e.message : '상태 업데이트 실패' }\n    }\n  }\n\n  // 내가 요청한 발주 목록 조회 (수정/삭제 요청용)\n  async getMyPurchaseRequests(startDate?: string, endDate?: string) {\n    try {\n      const { data: { user }, error: authError } = await this.supabase.auth.getUser()\n      if (authError || !user) return { success: false, data: [], error: '로그인이 필요합니다.' }\n\n      const { data: employee } = await this.supabase\n        .from('employees')\n        .select('name')\n        .eq('email', user.email)\n        .single()\n\n      if (!employee) {\n        return { success: false, data: [], error: '사용자 정보를 찾을 수 없습니다.' }\n      }\n\n      let query = this.supabase\n        .from('purchase_requests')\n        .select('id,purchase_order_number,vendor_name,request_date,requester_name,purchase_request_items(item_name,specification,quantity)')\n        .eq('requester_name', employee.name)\n        .order('request_date', { ascending: false })\n\n      // 날짜 필터 적용\n      if (startDate) {\n        query = query.gte('request_date', startDate)\n      }\n      if (endDate) {\n        query = query.lte('request_date', endDate)\n      }\n\n      const { data, error } = await query.limit(100)\n\n      if (error) throw error\n\n      return { success: true, data: data || [] }\n    } catch (e) {\n      return { success: false, data: [], error: e instanceof Error ? e.message : '발주요청 조회 실패' }\n    }\n  }\n\n  // 실시간 구독 설정\n  subscribeToInquiries(callback: (payload: any) => void) {\n    return this.supabase\n      .channel('support_inquires_changes')\n      .on(\n        'postgres_changes',\n        {\n          event: '*',\n          schema: 'public',\n          table: 'support_inquires'\n        },\n        callback\n      )\n      .subscribe()\n  }\n\n  // 발주요청 품목 수정\n  async updatePurchaseRequestItem(\n    itemId: string,\n    updates: {\n      item_name?: string\n      specification?: string\n      quantity?: number\n      unit_price_value?: number\n      amount_value?: number\n      remark?: string\n    }\n  ): Promise<{ success: boolean; error?: string }> {\n    try {\n      const updateData: any = {}\n      \n      if (updates.item_name !== undefined) updateData.item_name = updates.item_name\n      if (updates.specification !== undefined) updateData.specification = updates.specification\n      if (updates.quantity !== undefined) updateData.quantity = updates.quantity\n      if (updates.remark !== undefined) updateData.remark = updates.remark\n      if (updates.unit_price_value !== undefined) {\n        updateData.unit_price_value = updates.unit_price_value\n        updateData.unit_price_currency = 'KRW'\n      }\n      if (updates.amount_value !== undefined) {\n        updateData.amount_value = updates.amount_value\n        updateData.amount_currency = 'KRW'\n      }\n      \n      const { error } = await this.supabase\n        .from('purchase_request_items')\n        .update(updateData)\n        .eq('id', itemId)\n\n      if (error) throw error\n      return { success: true }\n    } catch (e) {\n      return { success: false, error: e instanceof Error ? e.message : '품목 수정 실패' }\n    }\n  }\n\n  // 발주요청 품목 삭제\n  async deletePurchaseRequestItem(itemId: string): Promise<{ success: boolean; error?: string }> {\n    try {\n      const { error } = await this.supabase\n        .from('purchase_request_items')\n        .delete()\n        .eq('id', itemId)\n\n      if (error) throw error\n      return { success: true }\n    } catch (e) {\n      return { success: false, error: e instanceof Error ? e.message : '품목 삭제 실패' }\n    }\n  }\n\n  // 발주요청 전체 삭제\n  async deletePurchaseRequest(requestId: string): Promise<{ success: boolean; error?: string }> {\n    try {\n      // 먼저 관련 품목들 삭제\n      const { error: itemsError } = await this.supabase\n        .from('purchase_request_items')\n        .delete()\n        .eq('purchase_request_id', requestId)\n\n      if (itemsError) throw itemsError\n\n      // 발주요청 삭제\n      const { error } = await this.supabase\n        .from('purchase_requests')\n        .delete()\n        .eq('id', requestId)\n\n      if (error) throw error\n      return { success: true }\n    } catch (e) {\n      return { success: false, error: e instanceof Error ? e.message : '발주요청 삭제 실패' }\n    }\n  }\n\n  // 발주요청 상세 조회\n  async getPurchaseRequestDetail(requestId: string): Promise<{ success: boolean; data?: any; error?: string }> {\n    try {\n      const { data, error } = await this.supabase\n        .from('purchase_requests')\n        .select('*,purchase_request_items(id,line_number,item_name,specification,quantity,unit_price_value,amount_value,remark,link)')\n        .eq('id', requestId)\n        .single()\n\n      if (error) throw error\n\n      return { success: true, data }\n    } catch (e) {\n      return { success: false, error: e instanceof Error ? e.message : '발주요청 조회 실패' }\n    }\n  }\n\n  // 문의 삭제\n  async deleteInquiry(inquiryId: number): Promise<{ success: boolean; error?: string }> {\n    try {\n      const { data: { user }, error: authError } = await this.supabase.auth.getUser()\n      if (authError || !user) return { success: false, error: '로그인이 필요합니다.' }\n\n      // 관리자 권한 확인\n      const { data: employee } = await this.supabase\n        .from('employees')\n        .select('purchase_role')\n        .eq('email', user.email)\n        .single()\n\n      const isAdmin = employee?.purchase_role?.includes('app_admin')\n\n      // 관리자가 아닌 경우에만 본인 문의 확인\n      if (!isAdmin) {\n        // 문의 정보 확인 (본인 것인지)\n        const { data: inquiry, error: fetchError } = await this.supabase\n          .from('support_inquires')\n          .select('user_id, status, resolution_note')\n          .eq('id', inquiryId)\n          .single()\n\n        if (fetchError || !inquiry) {\n          return { success: false, error: '문의를 찾을 수 없습니다.' }\n        }\n\n        // 본인 문의가 아니면 삭제 불가\n        if (inquiry.user_id !== user.id) {\n          return { success: false, error: '본인의 문의만 삭제할 수 있습니다.' }\n        }\n\n        // 일반 사용자는 답변이 있거나 처리중인 문의는 삭제 불가\n        if (inquiry.resolution_note) {\n          return { success: false, error: '답변이 완료된 문의는 삭제할 수 없습니다.' }\n        }\n\n        if (inquiry.status !== 'open') {\n          return { success: false, error: '처리가 진행된 문의는 삭제할 수 없습니다.' }\n        }\n      }\n      // 관리자는 모든 문의 삭제 가능 (제한 없음)\n\n      // 삭제 실행\n      const { error } = await this.supabase\n        .from('support_inquires')\n        .delete()\n        .eq('id', inquiryId)\n\n      if (error) throw error\n      return { success: true }\n    } catch (e) {\n      return { success: false, error: e instanceof Error ? e.message : '문의 삭제 실패' }\n    }\n  }\n}\n\nexport const supportService = new SupportService()","import { useState, useEffect } from 'react'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { Textarea } from '@/components/ui/textarea'\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select'\nimport { Badge } from '@/components/ui/badge'\nimport { MessageCircle, Send, Calendar, Search, CheckCircle, Clock, AlertCircle, ChevronRight, ChevronLeft, ChevronDown, ChevronUp, Eye, X, Edit2, Trash2, Save } from 'lucide-react'\nimport { supportService, type SupportInquiry } from '@/services/supportService'\nimport { createClient } from '@/lib/supabase/client'\nimport { toast } from 'sonner'\nimport { format } from 'date-fns'\nimport { ko } from 'date-fns/locale'\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog'\n\nexport default function SupportMain() {\n  const [inquiryType, setInquiryType] = useState('')\n  const [subject, setSubject] = useState('')\n  const [message, setMessage] = useState('')\n  const [loading, setLoading] = useState(false)\n  \n  // 발주요청 선택 관련\n  const [showPurchaseSelect, setShowPurchaseSelect] = useState(false)\n  const [startDate, setStartDate] = useState('')\n  const [endDate, setEndDate] = useState('')\n  const [purchaseRequests, setPurchaseRequests] = useState<any[]>([])\n  const [selectedPurchase, setSelectedPurchase] = useState<any>(null)\n  const [searchingPurchase, setSearchingPurchase] = useState(false)\n  const [currentPage, setCurrentPage] = useState(1)\n  const [expandedPurchase, setExpandedPurchase] = useState<string | null>(null)\n  const itemsPerPage = 5\n  \n  // 문의 목록 관련\n  const [inquiries, setInquiries] = useState<SupportInquiry[]>([])\n  const [isAdmin, setIsAdmin] = useState<boolean | null>(null)\n  const [currentUserEmail, setCurrentUserEmail] = useState('')\n  const [loadingInquiries, setLoadingInquiries] = useState(true)\n  const [expandedInquiry, setExpandedInquiry] = useState<number | null>(null)\n  \n  // 모달 관련\n  const [showDetailModal, setShowDetailModal] = useState(false)\n  const [selectedInquiryDetail, setSelectedInquiryDetail] = useState<any>(null)\n  const [loadingDetail, setLoadingDetail] = useState(false)\n  const [editingItemId, setEditingItemId] = useState<string | null>(null)\n  const [editingItem, setEditingItem] = useState<any>(null)\n\n  // 초기 데이터 로드\n  useEffect(() => {\n    const init = async () => {\n      await checkUserRole()\n    }\n    init()\n    \n    // 실시간 구독 설정\n    const subscription = supportService.subscribeToInquiries((payload) => {\n      // 권한 상태 확인 후 적절한 목록 로드\n      checkUserRole()\n    })\n    \n    return () => {\n      subscription.unsubscribe()\n    }\n  }, [])\n\n  // 사용자 권한 확인\n  const checkUserRole = async () => {\n    const supabase = createClient()\n    const { data: { user } } = await supabase.auth.getUser()\n    if (!user) return\n\n    setCurrentUserEmail(user.email || '')\n\n    const { data: employee } = await supabase\n      .from('employees')\n      .select('purchase_role')\n      .eq('email', user.email)\n      .single()\n\n    if (employee) {\n      const roles = Array.isArray(employee.purchase_role)\n        ? employee.purchase_role\n        : employee.purchase_role?.split(',').map((r: string) => r.trim()) || []\n      \n      const adminStatus = roles.includes('app_admin')\n      setIsAdmin(adminStatus)\n      \n      // 권한 확인 후 바로 목록 로드\n      loadInquiriesWithRole(adminStatus)\n    }\n  }\n  \n  // 역할에 따라 문의 목록 로드 (내부 함수)\n  const loadInquiriesWithRole = async (adminStatus: boolean) => {\n    setLoadingInquiries(true)\n    \n    const result = adminStatus \n      ? await supportService.getAllInquiries()\n      : await supportService.getMyInquiries()\n    \n    \n    if (result.success) {\n      setInquiries(result.data)\n    } else {\n    }\n    \n    setLoadingInquiries(false)\n  }\n\n  // 문의 목록 로드\n  const loadInquiries = async () => {\n    // 권한 확인이 완료되지 않았으면 대기\n    if (isAdmin === null) {\n      return;\n    }\n    \n    setLoadingInquiries(true)\n    \n    // 관리자면 모든 문의, 아니면 내 문의만\n    const result = isAdmin \n      ? await supportService.getAllInquiries()\n      : await supportService.getMyInquiries()\n    \n    \n    if (result.success) {\n      setInquiries(result.data)\n    } else {\n    }\n    \n    setLoadingInquiries(false)\n  }\n\n  // 문의 유형 변경 시\n  useEffect(() => {\n    if (inquiryType === 'modify' || inquiryType === 'delete') {\n      setShowPurchaseSelect(true)\n    } else {\n      setShowPurchaseSelect(false)\n      setSelectedPurchase(null)\n    }\n  }, [inquiryType])\n\n  // 발주요청 검색\n  const searchPurchaseRequests = async () => {\n    setSearchingPurchase(true)\n    setCurrentPage(1) // 검색 시 첫 페이지로 리셋\n    \n    const result = await supportService.getMyPurchaseRequests(startDate, endDate)\n    \n    if (result.success) {\n      setPurchaseRequests(result.data)\n    } else {\n      toast.error(result.error || '발주요청 조회 실패')\n    }\n    \n    setSearchingPurchase(false)\n  }\n\n  // 페이지네이션 계산\n  const totalPages = Math.ceil(purchaseRequests.length / itemsPerPage)\n  const startIndex = (currentPage - 1) * itemsPerPage\n  const endIndex = startIndex + itemsPerPage\n  const currentPurchaseRequests = purchaseRequests.slice(startIndex, endIndex)\n\n  // 문의 제출\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    \n    if (!inquiryType || !subject || !message) {\n      toast.error('모든 필드를 입력해주세요.')\n      return\n    }\n    \n    // 수정/삭제 요청인데 발주를 선택하지 않은 경우\n    if ((inquiryType === 'modify' || inquiryType === 'delete') && !selectedPurchase) {\n      toast.error('수정/삭제할 발주요청을 선택해주세요.')\n      return\n    }\n\n    setLoading(true)\n    \n    // 발주 정보를 텍스트로 구성\n    let finalMessage = message;\n    let purchaseInfo = '';\n    \n    if (selectedPurchase) {\n      const items = selectedPurchase.purchase_request_items || [];\n      const itemsText = items.map((item: any) => \n        `- ${item.item_name} (${item.specification}) ${item.quantity}개`\n      ).join('\\n');\n      \n      purchaseInfo = `발주번호: ${selectedPurchase.purchase_order_number}\n업체: ${selectedPurchase.vendor_name}\n요청자: ${selectedPurchase.requester_name}\n요청일: ${selectedPurchase.request_date}\n품목:\n${itemsText}`;\n\n      finalMessage = `${message}\n\n[관련 발주 정보]\n${purchaseInfo}`;\n    }\n\n    const result = await supportService.createInquiry({\n      inquiry_type: inquiryType as any,\n      subject,\n      message: finalMessage,\n      purchase_info: purchaseInfo,\n      purchase_order_number: selectedPurchase?.purchase_order_number\n    })\n\n    if (result.success) {\n      toast.success('문의가 접수되었습니다.')\n      // 폼 초기화\n      setInquiryType('')\n      setSubject('')\n      setMessage('')\n      setSelectedPurchase(null)\n      setPurchaseRequests([])\n      setStartDate('')\n      setEndDate('')\n      // 목록 새로고침\n      loadInquiries()\n    } else {\n      toast.error(result.error || '문의 접수에 실패했습니다.')\n    }\n    \n    setLoading(false)\n  }\n\n  // 문의 상태 업데이트 (관리자용)\n  const handleStatusUpdate = async (inquiryId: number, newStatus: 'in_progress' | 'resolved' | 'closed') => {\n    const result = await supportService.updateInquiryStatus(inquiryId, newStatus)\n    \n    if (result.success) {\n      toast.success('상태가 업데이트되었습니다.')\n      loadInquiries()\n    } else {\n      toast.error(result.error || '상태 업데이트 실패')\n    }\n  }\n\n  // 문의 삭제\n  const handleDeleteInquiry = async (inquiryId: number) => {\n    if (!confirm('정말로 이 문의를 삭제하시겠습니까?\\n삭제된 문의는 복구할 수 없습니다.')) return\n\n    const result = await supportService.deleteInquiry(inquiryId)\n    \n    if (result.success) {\n      toast.success('문의가 삭제되었습니다.')\n      loadInquiries()\n    } else {\n      toast.error(result.error || '문의 삭제 실패')\n    }\n  }\n\n  // 문의 상세 보기\n  const viewInquiryDetail = (inquiry: SupportInquiry) => {\n    setSelectedInquiryDetail(inquiry)\n    setShowDetailModal(true)\n  }\n\n  // 품목 수정 시작\n  const startEditItem = (item: any) => {\n    setEditingItemId(item.id)\n    setEditingItem({\n      item_name: item.item_name,\n      specification: item.specification,\n      quantity: item.quantity,\n      unit_price_value: item.unit_price_value,\n      remark: item.remark\n    })\n  }\n\n  // 품목 수정 취소\n  const cancelEditItem = () => {\n    setEditingItemId(null)\n    setEditingItem(null)\n  }\n\n  // 품목 수정 저장\n  const saveEditItem = async (itemId: string) => {\n    if (!editingItem) return\n\n    const totalPrice = (editingItem.quantity || 0) * (editingItem.unit_price_value || 0)\n    const result = await supportService.updatePurchaseRequestItem(itemId, {\n      item_name: editingItem.item_name,\n      specification: editingItem.specification,\n      quantity: editingItem.quantity,\n      unit_price_value: editingItem.unit_price_value,\n      amount_value: totalPrice,\n      remark: editingItem.remark\n    })\n\n    if (result.success) {\n      toast.success('품목이 수정되었습니다.')\n      // 목록 새로고침 - 상세 정보가 있다면 다시 로드\n      if (selectedInquiryDetail?.id) {\n        // fetchPurchaseDetail 함수가 정의되어 있지 않으므로 주석 처리\n        // TODO: 필요시 상세 정보 새로고침 로직 구현\n      }\n      cancelEditItem()\n    } else {\n      toast.error(result.error || '품목 수정 실패')\n    }\n  }\n\n  // 품목 삭제\n  const deleteItem = async (itemId: string) => {\n    if (!confirm('이 품목을 삭제하시겠습니까?')) return\n\n    const result = await supportService.deletePurchaseRequestItem(itemId)\n\n    if (result.success) {\n      toast.success('품목이 삭제되었습니다.')\n      // 목록 새로고침 - 상세 정보가 있다면 다시 로드\n      if (selectedInquiryDetail?.id) {\n        // fetchPurchaseDetail 함수가 정의되어 있지 않으므로 주석 처리\n        // TODO: 필요시 상세 정보 새로고침 로직 구현\n      }\n    } else {\n      toast.error(result.error || '품목 삭제 실패')\n    }\n  }\n\n  // 발주요청 전체 삭제\n  const deletePurchaseRequest = async () => {\n    if (!selectedInquiryDetail?.id) return\n    if (!confirm('이 발주요청 전체를 삭제하시겠습니까?\\n모든 품목이 함께 삭제됩니다.')) return\n\n    const result = await supportService.deletePurchaseRequest(selectedInquiryDetail.id)\n\n    if (result.success) {\n      toast.success('발주요청이 삭제되었습니다.')\n      setShowDetailModal(false)\n      setSelectedInquiryDetail(null)\n      // 문의 목록 새로고침\n      loadInquiries()\n    } else {\n      toast.error(result.error || '발주요청 삭제 실패')\n    }\n  }\n\n  // 상태 배지 스타일\n  const getStatusBadge = (status?: string) => {\n    switch (status) {\n      case 'open':\n        return <Badge className=\"bg-yellow-100 text-yellow-800\">대기</Badge>\n      case 'in_progress':\n        return <Badge className=\"bg-blue-100 text-blue-800\">처리중</Badge>\n      case 'resolved':\n        return <Badge className=\"bg-green-100 text-green-800\">완료</Badge>\n      case 'closed':\n        return <Badge className=\"bg-gray-100 text-gray-800\">종료</Badge>\n      default:\n        return <Badge>-</Badge>\n    }\n  }\n\n  // 문의 유형 라벨\n  const getInquiryTypeLabel = (type: string) => {\n    switch (type) {\n      case 'bug': return '오류 신고'\n      case 'modify': return '수정 요청'\n      case 'delete': return '삭제 요청'\n      case 'other': return '기타 문의'\n      default: return type\n    }\n  }\n\n  // 권한 확인 중일 때 로딩 표시\n  if (isAdmin === null) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n          <p className=\"text-gray-600\">권한 확인 중...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <div className=\"w-full\">\n        {/* 헤더 */}\n        <div className=\"mb-4\">\n          <h1 className=\"text-2xl font-bold text-gray-900\">문의하기</h1>\n          <p className=\"text-sm text-gray-600 mt-1\">\n            {isAdmin \n              ? '모든 문의를 관리하고 답변할 수 있습니다'\n              : '시스템 사용 중 궁금하신 점이나 개선사항을 알려주세요'}\n          </p>\n        </div>\n\n        <div className={`${isAdmin ? 'max-w-4xl' : 'grid grid-cols-1 xl:grid-cols-2 gap-4'}`}>\n          {/* 문의 작성 폼 - app_admin이 아닌 경우에만 표시 */}\n          {!isAdmin && (\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <MessageCircle className=\"w-5 h-5\" />\n                  문의 내용\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <form onSubmit={handleSubmit} className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    문의 유형 <span className=\"text-red-500\">*</span>\n                  </label>\n                  <Select value={inquiryType} onValueChange={setInquiryType}>\n                    <SelectTrigger>\n                      <SelectValue placeholder=\"문의 유형을 선택해주세요\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"bug\">오류 신고</SelectItem>\n                      <SelectItem value=\"modify\">수정 요청</SelectItem>\n                      <SelectItem value=\"delete\">삭제 요청</SelectItem>\n                      <SelectItem value=\"other\">기타 문의</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                {/* 수정/삭제 요청 시 발주요청 선택 */}\n                {showPurchaseSelect && (\n                  <div className=\"space-y-3 p-4 bg-blue-50 rounded-lg border border-blue-200\">\n                    <div className=\"text-sm font-medium text-blue-900\">\n                      수정/삭제할 발주요청 선택\n                    </div>\n                    \n                    <div className=\"grid grid-cols-2 gap-2\">\n                      <div>\n                        <label className=\"text-xs text-gray-600\">시작일</label>\n                        <Input\n                          type=\"date\"\n                          value={startDate}\n                          onChange={(e) => setStartDate(e.target.value)}\n                          className=\"h-9\"\n                        />\n                      </div>\n                      <div>\n                        <label className=\"text-xs text-gray-600\">종료일</label>\n                        <Input\n                          type=\"date\"\n                          value={endDate}\n                          onChange={(e) => setEndDate(e.target.value)}\n                          className=\"h-9\"\n                        />\n                      </div>\n                    </div>\n                    \n                    <Button\n                      type=\"button\"\n                      onClick={searchPurchaseRequests}\n                      disabled={searchingPurchase}\n                      className=\"w-full h-9\"\n                      variant=\"outline\"\n                    >\n                      {searchingPurchase ? (\n                        <>\n                          <div className=\"w-4 h-4 border-2 border-gray-600 border-t-transparent rounded-full animate-spin mr-2\" />\n                          검색 중...\n                        </>\n                      ) : (\n                        <>\n                          <Search className=\"w-4 h-4 mr-2\" />\n                          발주요청 검색\n                        </>\n                      )}\n                    </Button>\n                    \n                    {purchaseRequests.length > 0 && (\n                      <div className=\"space-y-3\">\n                        <div className=\"text-xs text-gray-600\">\n                          발주요청 선택 (총 {purchaseRequests.length}건)\n                        </div>\n                        \n                        {/* 발주요청 리스트 */}\n                        <div className=\"space-y-1\">\n                          {currentPurchaseRequests.map((pr) => (\n                            <div key={pr.id} className=\"border rounded overflow-hidden\">\n                              <div\n                                onClick={() => setSelectedPurchase(pr)}\n                                className={`px-3 py-2 cursor-pointer transition-all text-xs ${\n                                  selectedPurchase?.id === pr.id\n                                    ? 'border-blue-500 bg-blue-50'\n                                    : 'hover:bg-gray-50'\n                                }`}\n                              >\n                                <div className=\"flex items-center justify-between gap-2\">\n                                  <div className=\"flex items-center gap-3 flex-1 min-w-0\">\n                                    <span className=\"font-medium whitespace-nowrap\">\n                                      {pr.purchase_order_number || 'N/A'}\n                                    </span>\n                                    <span className=\"text-gray-600 truncate\">\n                                      {pr.vendor_name}\n                                    </span>\n                                    <span className=\"text-gray-500\">\n                                      {pr.purchase_request_items?.[0]?.item_name || '품목 없음'}\n                                      {pr.purchase_request_items?.length > 1 && (\n                                        <span className=\"font-medium text-blue-600\">\n                                          {` 외 ${pr.purchase_request_items.length - 1}건`}\n                                        </span>\n                                      )}\n                                    </span>\n                                    <span className=\"text-gray-400 whitespace-nowrap ml-auto\">\n                                      {pr.request_date && format(new Date(pr.request_date), 'MM/dd')}\n                                    </span>\n                                  </div>\n                                  <div className=\"flex items-center gap-1\">\n                                    {selectedPurchase?.id === pr.id && (\n                                      <CheckCircle className=\"w-4 h-4 text-blue-500 flex-shrink-0\" />\n                                    )}\n                                    {pr.purchase_request_items?.length > 1 && (\n                                      <button\n                                        type=\"button\"\n                                        onClick={(e) => {\n                                          e.stopPropagation()\n                                          setExpandedPurchase(expandedPurchase === pr.id ? null : pr.id)\n                                        }}\n                                        className=\"p-1 hover:bg-gray-200 rounded\"\n                                      >\n                                        {expandedPurchase === pr.id ? (\n                                          <ChevronUp className=\"w-4 h-4\" />\n                                        ) : (\n                                          <ChevronDown className=\"w-4 h-4\" />\n                                        )}\n                                      </button>\n                                    )}\n                                  </div>\n                                </div>\n                              </div>\n                              \n                              {/* 상세 품목 목록 */}\n                              {expandedPurchase === pr.id && pr.purchase_request_items?.length > 0 && (\n                                <div className=\"px-3 py-2 bg-gray-50 border-t text-xs\">\n                                  <div className=\"space-y-1\">\n                                    <div className=\"font-medium text-gray-700 mb-1\">품목 상세</div>\n                                    {pr.purchase_request_items.map((item: any, index: number) => (\n                                      <div key={index} className=\"flex items-center gap-2 text-gray-600 pl-2\">\n                                        <span className=\"text-gray-400\">{index + 1}.</span>\n                                        <span>{item.item_name}</span>\n                                        {item.specification && (\n                                          <span className=\"text-gray-500\">({item.specification})</span>\n                                        )}\n                                        <span className=\"text-gray-500\">- {item.quantity}개</span>\n                                      </div>\n                                    ))}\n                                  </div>\n                                </div>\n                              )}\n                            </div>\n                          ))}\n                        </div>\n                        \n                        {/* 페이지네이션 */}\n                        {totalPages > 1 && (\n                          <div className=\"flex justify-center items-center gap-1 pt-2\">\n                            <Button\n                              type=\"button\"\n                              variant=\"outline\"\n                              size=\"sm\"\n                              onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}\n                              disabled={currentPage === 1}\n                              className=\"h-8 w-8 p-0\"\n                            >\n                              <ChevronLeft className=\"w-4 h-4\" />\n                            </Button>\n                            \n                            {Array.from({ length: totalPages }, (_, i) => i + 1).map((page) => (\n                              <Button\n                                key={page}\n                                type=\"button\"\n                                variant={currentPage === page ? \"default\" : \"outline\"}\n                                size=\"sm\"\n                                onClick={() => setCurrentPage(page)}\n                                className=\"h-8 w-8 p-0\"\n                              >\n                                {page}\n                              </Button>\n                            ))}\n                            \n                            <Button\n                              type=\"button\"\n                              variant=\"outline\"\n                              size=\"sm\"\n                              onClick={() => setCurrentPage(Math.min(totalPages, currentPage + 1))}\n                              disabled={currentPage === totalPages}\n                              className=\"h-8 w-8 p-0\"\n                            >\n                              <ChevronRight className=\"w-4 h-4\" />\n                            </Button>\n                          </div>\n                        )}\n                      </div>\n                    )}\n                  </div>\n                )}\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    제목 <span className=\"text-red-500\">*</span>\n                  </label>\n                  <Input\n                    value={subject}\n                    onChange={(e) => setSubject(e.target.value)}\n                    placeholder=\"문의 제목을 입력해주세요\"\n                    maxLength={100}\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    내용 <span className=\"text-red-500\">*</span>\n                  </label>\n                  <Textarea\n                    value={message}\n                    onChange={(e) => setMessage(e.target.value)}\n                    placeholder=\"문의 내용을 자세히 입력해주세요\"\n                    rows={6}\n                    maxLength={1000}\n                  />\n                  <p className=\"text-xs text-gray-500 mt-1\">\n                    {message.length}/1000\n                  </p>\n                </div>\n\n                <Button \n                  type=\"submit\" \n                  className=\"w-full\"\n                  disabled={loading}\n                >\n                  {loading ? (\n                    <>\n                      <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin mr-2\" />\n                      전송 중...\n                    </>\n                  ) : (\n                    <>\n                      <Send className=\"w-4 h-4 mr-2\" />\n                      문의 보내기\n                    </>\n                  )}\n                </Button>\n              </form>\n            </CardContent>\n          </Card>\n          )}\n\n          {/* 문의 목록 */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center justify-between\">\n                <span className=\"flex items-center gap-2\">\n                  <AlertCircle className=\"w-5 h-5 text-orange-500\" />\n                  {isAdmin ? '전체 문의 목록' : '내 문의 내역'}\n                </span>\n                <Badge variant=\"outline\">\n                  {inquiries.length}건\n                </Badge>\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              {loadingInquiries ? (\n                <div className=\"flex items-center justify-center py-8\">\n                  <div className=\"w-6 h-6 border-2 border-gray-300 border-t-transparent rounded-full animate-spin\" />\n                </div>\n              ) : inquiries.length === 0 ? (\n                <div className=\"text-center py-8 text-gray-500\">\n                  <MessageCircle className=\"w-12 h-12 mx-auto mb-3 text-gray-300\" />\n                  <p className=\"text-sm\">문의 내역이 없습니다</p>\n                </div>\n              ) : (\n                <div className=\"space-y-1 max-h-[600px] overflow-y-auto\">\n                  {inquiries.map((inquiry) => (\n                    <div key={inquiry.id} className=\"border rounded overflow-hidden\">\n                      {/* 문의 요약 (한 줄) */}\n                      <div \n                        className=\"px-3 py-2 hover:bg-gray-50 transition-colors cursor-pointer\"\n                        onClick={() => {\n                          setExpandedInquiry(expandedInquiry === inquiry.id ? null : inquiry.id!)\n                        }}\n                      >\n                        <div className=\"flex items-center justify-between gap-2\">\n                          <div className=\"flex items-center gap-2 flex-1 min-w-0\">\n                            <Badge variant=\"outline\" className=\"text-xs whitespace-nowrap\">\n                              {getInquiryTypeLabel(inquiry.inquiry_type)}\n                            </Badge>\n                            {getStatusBadge(inquiry.status)}\n                            <span className=\"text-sm font-medium truncate\">\n                              {inquiry.subject}\n                            </span>\n                            {isAdmin && (\n                              <span className=\"text-xs text-gray-500\">\n                                {inquiry.user_name || inquiry.user_email}\n                              </span>\n                            )}\n                            {inquiry.purchase_order_number && (\n                              <span className=\"text-xs text-blue-600\">\n                                [{inquiry.purchase_order_number}]\n                              </span>\n                            )}\n                            <span className=\"text-xs text-gray-400 ml-auto whitespace-nowrap\">\n                              {inquiry.created_at && format(new Date(inquiry.created_at), 'MM/dd HH:mm')}\n                            </span>\n                          </div>\n                          <div className=\"flex items-center gap-1\">\n                            {isAdmin && inquiry.status === 'open' && (\n                              <Button\n                                size=\"sm\"\n                                variant=\"outline\"\n                                onClick={(e) => {\n                                  e.stopPropagation()\n                                  handleStatusUpdate(inquiry.id!, 'in_progress')\n                                }}\n                                className=\"h-6 text-xs px-2\"\n                              >\n                                처리중\n                              </Button>\n                            )}\n                            {isAdmin && (inquiry.status === 'open' || inquiry.status === 'in_progress') && (\n                              <Button\n                                size=\"sm\"\n                                onClick={(e) => {\n                                  e.stopPropagation()\n                                  handleStatusUpdate(inquiry.id!, 'resolved')\n                                }}\n                                className=\"h-6 text-xs px-2 bg-green-600 hover:bg-green-700\"\n                              >\n                                완료\n                              </Button>\n                            )}\n                            {/* 삭제 버튼 - 관리자는 모든 문의 삭제 가능, 일반 사용자는 본인의 open 상태만 */}\n                            {(isAdmin || (inquiry.status === 'open' && !inquiry.resolution_note && inquiry.user_email === currentUserEmail)) && (\n                              <Button\n                                size=\"sm\"\n                                variant=\"ghost\"\n                                onClick={(e) => {\n                                  e.stopPropagation()\n                                  handleDeleteInquiry(inquiry.id!)\n                                }}\n                                className=\"h-6 w-6 p-0 hover:bg-red-50\"\n                                title=\"문의 삭제\"\n                              >\n                                <Trash2 className=\"w-3 h-3 text-red-600\" />\n                              </Button>\n                            )}\n                            <button\n                              type=\"button\"\n                              className=\"p-1 hover:bg-gray-200 rounded\"\n                            >\n                              {expandedInquiry === inquiry.id ? (\n                                <ChevronUp className=\"w-4 h-4\" />\n                              ) : (\n                                <ChevronDown className=\"w-4 h-4\" />\n                              )}\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                      \n                      {/* 상세 내역 */}\n                      {expandedInquiry === inquiry.id && (\n                        <div className=\"px-3 py-3 bg-gray-50 border-t text-sm\">\n                          <div className=\"space-y-2\">\n                            <div>\n                              <span className=\"font-medium text-gray-700\">내용:</span>\n                              <p className=\"text-gray-600 mt-1 whitespace-pre-wrap\">{inquiry.message}</p>\n                            </div>\n                            {inquiry.purchase_order_number && (\n                              <div>\n                                <span className=\"font-medium text-gray-700\">관련 발주번호:</span>\n                                <span className=\"text-blue-600 ml-2\">{inquiry.purchase_order_number}</span>\n                              </div>\n                            )}\n                            {inquiry.handled_by && (\n                              <div>\n                                <span className=\"font-medium text-gray-700\">처리자:</span>\n                                <span className=\"text-green-600 ml-2\">\n                                  {inquiry.handled_by}\n                                  {inquiry.processed_at && ` (${format(new Date(inquiry.processed_at), 'yyyy-MM-dd HH:mm')})`}\n                                </span>\n                              </div>\n                            )}\n                            {inquiry.resolution_note && (\n                              <div>\n                                <span className=\"font-medium text-gray-700\">처리 내용:</span>\n                                <p className=\"text-gray-600 mt-1\">{inquiry.resolution_note}</p>\n                              </div>\n                            )}\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  ))}\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n\n      {/* 발주요청 상세 모달 */}\n      <Dialog open={showDetailModal} onOpenChange={setShowDetailModal}>\n        <DialogContent className=\"max-w-6xl max-h-[90vh] overflow-y-auto\">\n          <DialogHeader>\n            <DialogTitle className=\"flex items-center justify-between text-lg\">\n              <div className=\"flex items-center gap-2\">\n                <span>발주요청 상세</span>\n                {selectedInquiryDetail?.purchase_order_number && (\n                  <Badge variant=\"outline\" className=\"font-normal\">\n                    {selectedInquiryDetail.purchase_order_number}\n                  </Badge>\n                )}\n              </div>\n              {isAdmin && selectedInquiryDetail && (\n                <Button\n                  variant=\"destructive\"\n                  size=\"sm\"\n                  onClick={deletePurchaseRequest}\n                  className=\"h-8 px-3\"\n                >\n                  <Trash2 className=\"w-4 h-4 mr-1\" />\n                  전체 삭제\n                </Button>\n              )}\n            </DialogTitle>\n          </DialogHeader>\n          \n          {loadingDetail ? (\n            <div className=\"flex items-center justify-center py-8\">\n              <div className=\"w-6 h-6 border-2 border-gray-300 border-t-transparent rounded-full animate-spin\" />\n            </div>\n          ) : selectedInquiryDetail && (\n            <div className=\"space-y-6\">\n              {/* 기본 정보 */}\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 p-4 bg-gray-50 rounded-lg\">\n                <div>\n                  <span className=\"text-xs text-gray-500 uppercase tracking-wider\">발주번호</span>\n                  <p className=\"font-semibold text-sm mt-1\">{selectedInquiryDetail.purchase_order_number || 'N/A'}</p>\n                </div>\n                <div>\n                  <span className=\"text-xs text-gray-500 uppercase tracking-wider\">업체명</span>\n                  <p className=\"font-semibold text-sm mt-1\">{selectedInquiryDetail.vendor_name}</p>\n                </div>\n                <div>\n                  <span className=\"text-xs text-gray-500 uppercase tracking-wider\">요청자</span>\n                  <p className=\"font-semibold text-sm mt-1\">{selectedInquiryDetail.requester_name}</p>\n                </div>\n                <div>\n                  <span className=\"text-xs text-gray-500 uppercase tracking-wider\">요청일</span>\n                  <p className=\"font-semibold text-sm mt-1\">\n                    {selectedInquiryDetail.request_date && \n                      format(new Date(selectedInquiryDetail.request_date), 'yyyy-MM-dd')}\n                  </p>\n                </div>\n              </div>\n\n              {/* 품목 목록 - 개선된 디자인 */}\n              <div>\n                <h3 className=\"font-semibold text-base mb-3\">품목 상세</h3>\n                <div className=\"border rounded-lg overflow-x-auto\">\n                  <table className=\"w-full\">\n                    <thead className=\"bg-gray-50 border-b\">\n                      <tr>\n                        <th className=\"text-left text-xs font-medium text-gray-700 px-3 py-3 w-12\">번호</th>\n                        <th className=\"text-left text-xs font-medium text-gray-700 px-3 py-3 min-w-[180px]\">품명</th>\n                        <th className=\"text-left text-xs font-medium text-gray-700 px-3 py-3 min-w-[150px]\">규격</th>\n                        <th className=\"text-center text-xs font-medium text-gray-700 px-3 py-3 w-20\">수량</th>\n                        <th className=\"text-right text-xs font-medium text-gray-700 px-3 py-3 w-28\">단가</th>\n                        <th className=\"text-right text-xs font-medium text-gray-700 px-3 py-3 w-32\">금액</th>\n                        <th className=\"text-left text-xs font-medium text-gray-700 px-3 py-3 min-w-[150px]\">비고</th>\n                        <th className=\"text-center text-xs font-medium text-gray-700 px-3 py-3 w-16\">링크</th>\n                        {isAdmin && <th className=\"text-center text-xs font-medium text-gray-700 px-3 py-3 w-24\">작업</th>}\n                      </tr>\n                    </thead>\n                    <tbody className=\"divide-y divide-gray-200\">\n                      {selectedInquiryDetail.purchase_request_items?.map((item: any, index: number) => (\n                        <tr key={item.id} className=\"hover:bg-gray-50 transition-colors\">\n                          <td className=\"text-sm px-3 py-3 text-center font-medium text-gray-600\">\n                            {item.line_number || index + 1}\n                          </td>\n                          <td className=\"text-sm px-3 py-3\">\n                            {editingItemId === item.id ? (\n                              <Input\n                                value={editingItem?.item_name || ''}\n                                onChange={(e) => setEditingItem({...editingItem, item_name: e.target.value})}\n                                className=\"h-9 text-sm w-full\"\n                                autoFocus\n                              />\n                            ) : (\n                              <span className=\"font-medium text-gray-900\">{item.item_name}</span>\n                            )}\n                          </td>\n                          <td className=\"text-sm px-3 py-3\">\n                            {editingItemId === item.id ? (\n                              <Input\n                                value={editingItem?.specification || ''}\n                                onChange={(e) => setEditingItem({...editingItem, specification: e.target.value})}\n                                className=\"h-9 text-sm w-full\"\n                              />\n                            ) : (\n                              <span className=\"text-gray-600\">{item.specification || '-'}</span>\n                            )}\n                          </td>\n                          <td className=\"text-sm text-center px-3 py-3\">\n                            {editingItemId === item.id ? (\n                              <Input\n                                type=\"number\"\n                                value={editingItem?.quantity || ''}\n                                onChange={(e) => setEditingItem({...editingItem, quantity: parseInt(e.target.value)})}\n                                className=\"h-9 text-sm text-center w-full\"\n                              />\n                            ) : (\n                              <span className=\"font-medium\">{item.quantity}</span>\n                            )}\n                          </td>\n                          <td className=\"text-sm text-right px-3 py-3\">\n                            {editingItemId === item.id ? (\n                              <Input\n                                type=\"number\"\n                                value={editingItem?.unit_price_value || ''}\n                                onChange={(e) => setEditingItem({...editingItem, unit_price_value: parseInt(e.target.value)})}\n                                className=\"h-9 text-sm text-right w-full\"\n                              />\n                            ) : (\n                              <span className=\"font-medium\">\n                                {item.unit_price_value ? `${parseFloat(item.unit_price_value).toLocaleString()}` : '-'}\n                              </span>\n                            )}\n                          </td>\n                          <td className=\"text-sm text-right px-3 py-3\">\n                            {editingItemId === item.id ? (\n                              <span className=\"font-semibold text-blue-600\">\n                                {((editingItem?.quantity || 0) * (editingItem?.unit_price_value || 0)).toLocaleString()}\n                              </span>\n                            ) : (\n                              <span className=\"font-semibold text-blue-600\">\n                                {item.amount_value ? `${parseFloat(item.amount_value).toLocaleString()}` : '-'}\n                              </span>\n                            )}\n                          </td>\n                          <td className=\"text-sm px-3 py-3\">\n                            {editingItemId === item.id ? (\n                              <Textarea\n                                value={editingItem?.remark || ''}\n                                onChange={(e) => setEditingItem({...editingItem, remark: e.target.value})}\n                                className=\"h-9 text-sm w-full resize-none\"\n                                rows={1}\n                              />\n                            ) : (\n                              <span className=\"text-gray-600 text-xs\">{item.remark || '-'}</span>\n                            )}\n                          </td>\n                          <td className=\"text-sm text-center px-3 py-3\">\n                            {item.link ? (\n                              <a \n                                href={item.link} \n                                target=\"_blank\" \n                                rel=\"noopener noreferrer\" \n                                className=\"inline-flex items-center justify-center w-8 h-8 rounded hover:bg-blue-50 text-blue-600\"\n                              >\n                                <Eye className=\"w-4 h-4\" />\n                              </a>\n                            ) : (\n                              <span className=\"text-gray-400\">-</span>\n                            )}\n                          </td>\n                          {isAdmin && (\n                            <td className=\"text-sm text-center px-3 py-3\">\n                              {editingItemId === item.id ? (\n                                <div className=\"flex justify-center gap-1\">\n                                  <Button\n                                    size=\"sm\"\n                                    onClick={() => saveEditItem(item.id)}\n                                    className=\"h-8 px-2 bg-green-600 hover:bg-green-700\"\n                                  >\n                                    <Save className=\"w-4 h-4 mr-1\" />\n                                    저장\n                                  </Button>\n                                  <Button\n                                    size=\"sm\"\n                                    variant=\"outline\"\n                                    onClick={cancelEditItem}\n                                    className=\"h-8 px-2\"\n                                  >\n                                    취소\n                                  </Button>\n                                </div>\n                              ) : (\n                                <div className=\"flex justify-center gap-1\">\n                                  <Button\n                                    size=\"sm\"\n                                    variant=\"ghost\"\n                                    onClick={() => startEditItem(item)}\n                                    className=\"h-8 w-8 p-0 hover:bg-blue-50\"\n                                  >\n                                    <Edit2 className=\"w-4 h-4 text-blue-600\" />\n                                  </Button>\n                                  <Button\n                                    size=\"sm\"\n                                    variant=\"ghost\"\n                                    onClick={() => deleteItem(item.id)}\n                                    className=\"h-8 w-8 p-0 hover:bg-red-50\"\n                                  >\n                                    <Trash2 className=\"w-4 h-4 text-red-600\" />\n                                  </Button>\n                                </div>\n                              )}\n                            </td>\n                          )}\n                        </tr>\n                      ))}\n                    </tbody>\n                    <tfoot className=\"bg-gray-50 border-t-2\">\n                      <tr>\n                        <td colSpan={5} className=\"text-sm font-semibold text-right px-3 py-3\">\n                          합계\n                        </td>\n                        <td className=\"text-sm font-bold text-right px-3 py-3 text-blue-600\">\n                          {selectedInquiryDetail.purchase_request_items\n                            ?.reduce((sum: number, item: any) => sum + (parseFloat(item.amount_value) || 0), 0)\n                            .toLocaleString()}\n                        </td>\n                        <td colSpan={isAdmin ? 3 : 2} className=\"px-3 py-3\"></td>\n                      </tr>\n                    </tfoot>\n                  </table>\n                </div>\n              </div>\n\n              {/* 비고 */}\n              {selectedInquiryDetail.notes && (\n                <div>\n                  <h3 className=\"font-medium mb-2\">비고</h3>\n                  <p className=\"text-sm text-gray-600 p-3 bg-gray-50 rounded-lg\">\n                    {selectedInquiryDetail.notes}\n                  </p>\n                </div>\n              )}\n            </div>\n          )}\n        </DialogContent>\n      </Dialog>\n    </div>\n  )\n}"],"names":["Send","createLucideIcon","d","key","supportService","constructor","this","supabase","createClient","createInquiry","payload","data","user","error","authError","auth","getUser","success","employee","from","select","eq","email","maybeSingle","insert","user_id","id","user_email","user_name","name","requester_id","inquiry_type","subject","message","purchase_info","purchase_order_number","status","logger","code","details","hint","e","Error","getMyInquiries","order","ascending","getAllInquiries","updateInquiryStatus","inquiryId","resolution_note","single","updateData","handled_by","updated_at","Date","toISOString","processed_at","update","getMyPurchaseRequests","startDate","endDate","query","gte","lte","limit","subscribeToInquiries","callback","channel","on","event","schema","table","subscribe","updatePurchaseRequestItem","itemId","updates","item_name","specification","quantity","remark","unit_price_value","unit_price_currency","amount_value","amount_currency","deletePurchaseRequestItem","delete","deletePurchaseRequest","requestId","itemsError","getPurchaseRequestDetail","deleteInquiry","isAdmin","purchase_role","includes","inquiry","fetchError","SupportMain","inquiryType","setInquiryType","useState","setSubject","setMessage","loading","setLoading","showPurchaseSelect","setShowPurchaseSelect","setStartDate","setEndDate","purchaseRequests","setPurchaseRequests","selectedPurchase","setSelectedPurchase","searchingPurchase","setSearchingPurchase","currentPage","setCurrentPage","expandedPurchase","setExpandedPurchase","inquiries","setInquiries","setIsAdmin","currentUserEmail","setCurrentUserEmail","loadingInquiries","setLoadingInquiries","expandedInquiry","setExpandedInquiry","showDetailModal","setShowDetailModal","selectedInquiryDetail","setSelectedInquiryDetail","loadingDetail","setLoadingDetail","editingItemId","setEditingItemId","editingItem","setEditingItem","useEffect","async","checkUserRole","init","subscription","unsubscribe","adminStatus","Array","isArray","split","map","r","trim","loadInquiriesWithRole","result","loadInquiries","totalPages","Math","ceil","length","startIndex","endIndex","currentPurchaseRequests","slice","handleStatusUpdate","newStatus","toast","cancelEditItem","getStatusBadge","jsx","Badge","className","children","getInquiryTypeLabel","type","jsxs","Card","CardHeader","CardTitle","MessageCircle","CardContent","onSubmit","preventDefault","finalMessage","purchaseInfo","itemsText","purchase_request_items","item","join","vendor_name","requester_name","request_date","Select","value","onValueChange","SelectTrigger","SelectValue","placeholder","SelectContent","SelectItem","Input","onChange","target","Button","onClick","disabled","variant","Fragment","Search","pr","format","CheckCircle","stopPropagation","ChevronUp","ChevronDown","index","size","max","ChevronLeft","_","i","page","min","ChevronRight","maxLength","Textarea","rows","AlertCircle","created_at","confirm","handleDeleteInquiry","title","Trash2","Dialog","open","onOpenChange","DialogContent","DialogHeader","DialogTitle","line_number","autoFocus","parseInt","parseFloat","toLocaleString","link","href","rel","Eye","totalPrice","saveEditItem","Save","startEditItem","Edit2","deleteItem","colSpan","reduce","sum","notes"],"mappings":"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","x_google_ignoreList":[0]}