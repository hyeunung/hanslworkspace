{"version":3,"file":"DashboardMain-CHegrcFM.js","sources":["../../node_modules/lucide-react/dist/esm/icons/arrow-right.js","../../node_modules/lucide-react/dist/esm/icons/clock.js","../../src/components/dashboard/DashboardStats.tsx","../../node_modules/date-fns/locale/ko/_lib/formatDistance.js","../../node_modules/date-fns/locale/ko/_lib/formatLong.js","../../node_modules/date-fns/locale/ko/_lib/formatRelative.js","../../node_modules/date-fns/locale/ko/_lib/localize.js","../../node_modules/date-fns/locale/ko/_lib/match.js","../../node_modules/date-fns/locale/ko.js","../../src/components/dashboard/RecentRequests.tsx","../../src/components/dashboard/PendingApprovals.tsx","../../src/components/dashboard/DashboardMain.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M5 12h14\", key: \"1ays0h\" }],\n  [\"path\", { d: \"m12 5 7 7-7 7\", key: \"xquz4c\" }]\n];\nconst ArrowRight = createLucideIcon(\"arrow-right\", __iconNode);\n\nexport { __iconNode, ArrowRight as default };\n//# sourceMappingURL=arrow-right.js.map\n","/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M12 6v6l4 2\", key: \"mmk7yg\" }],\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }]\n];\nconst Clock = createLucideIcon(\"clock\", __iconNode);\n\nexport { __iconNode, Clock as default };\n//# sourceMappingURL=clock.js.map\n","\nimport { Package, FileText, Clock, CheckCircle } from 'lucide-react'\n\ninterface StatsProps {\n  stats: {\n    total: number\n    myRequests: number\n    pending: number\n    completed: number\n  }\n}\n\nexport default function DashboardStats({ stats }: StatsProps) {\n  const statCards = [\n    {\n      title: '전체 발주',\n      value: stats.total,\n      icon: Package,\n      color: 'bg-hansl-500',\n      bgColor: 'bg-hansl-50'\n    },\n    {\n      title: '내 발주',\n      value: stats.myRequests,\n      icon: FileText,\n      color: 'bg-green-500',\n      bgColor: 'bg-green-50'\n    },\n    {\n      title: '승인 대기',\n      value: stats.pending,\n      icon: Clock,\n      color: 'bg-yellow-500',\n      bgColor: 'bg-yellow-50'\n    },\n    {\n      title: '이번 달 완료',\n      value: stats.completed,\n      icon: CheckCircle,\n      color: 'bg-purple-500',\n      bgColor: 'bg-purple-50'\n    }\n  ]\n\n  return (\n    <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6\">\n      {statCards.map((stat) => {\n        const Icon = stat.icon\n        return (\n          <div\n            key={stat.title}\n            className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6 hover:shadow-md transition-shadow\"\n          >\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-gray-600 mb-1\">{stat.title}</p>\n                <p className=\"text-3xl font-semibold text-gray-900\">\n                  {stat.value.toLocaleString()}\n                </p>\n              </div>\n              <div className={`${stat.bgColor} p-3 rounded-lg`}>\n                <Icon className={`w-6 h-6 ${stat.color.replace('bg-', 'text-')}`} />\n              </div>\n            </div>\n          </div>\n        )\n      })}\n    </div>\n  )\n}","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"1초 미만\",\n    other: \"{{count}}초 미만\",\n  },\n\n  xSeconds: {\n    one: \"1초\",\n    other: \"{{count}}초\",\n  },\n\n  halfAMinute: \"30초\",\n\n  lessThanXMinutes: {\n    one: \"1분 미만\",\n    other: \"{{count}}분 미만\",\n  },\n\n  xMinutes: {\n    one: \"1분\",\n    other: \"{{count}}분\",\n  },\n\n  aboutXHours: {\n    one: \"약 1시간\",\n    other: \"약 {{count}}시간\",\n  },\n\n  xHours: {\n    one: \"1시간\",\n    other: \"{{count}}시간\",\n  },\n\n  xDays: {\n    one: \"1일\",\n    other: \"{{count}}일\",\n  },\n\n  aboutXWeeks: {\n    one: \"약 1주\",\n    other: \"약 {{count}}주\",\n  },\n\n  xWeeks: {\n    one: \"1주\",\n    other: \"{{count}}주\",\n  },\n\n  aboutXMonths: {\n    one: \"약 1개월\",\n    other: \"약 {{count}}개월\",\n  },\n\n  xMonths: {\n    one: \"1개월\",\n    other: \"{{count}}개월\",\n  },\n\n  aboutXYears: {\n    one: \"약 1년\",\n    other: \"약 {{count}}년\",\n  },\n\n  xYears: {\n    one: \"1년\",\n    other: \"{{count}}년\",\n  },\n\n  overXYears: {\n    one: \"1년 이상\",\n    other: \"{{count}}년 이상\",\n  },\n\n  almostXYears: {\n    one: \"거의 1년\",\n    other: \"거의 {{count}}년\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return result + \" 후\";\n    } else {\n      return result + \" 전\";\n    }\n  }\n\n  return result;\n};\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"y년 M월 d일 EEEE\",\n  long: \"y년 M월 d일\",\n  medium: \"y.MM.dd\",\n  short: \"y.MM.dd\",\n};\n\nconst timeFormats = {\n  full: \"a H시 mm분 ss초 zzzz\",\n  long: \"a H:mm:ss z\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} {{time}}\",\n  long: \"{{date}} {{time}}\",\n  medium: \"{{date}} {{time}}\",\n  short: \"{{date}} {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'지난' eeee p\",\n  yesterday: \"'어제' p\",\n  today: \"'오늘' p\",\n  tomorrow: \"'내일' p\",\n  nextWeek: \"'다음' eeee p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"BC\", \"AD\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"기원전\", \"서기\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1분기\", \"2분기\", \"3분기\", \"4분기\"],\n};\n\nconst monthValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\"],\n\n  abbreviated: [\n    \"1월\",\n    \"2월\",\n    \"3월\",\n    \"4월\",\n    \"5월\",\n    \"6월\",\n    \"7월\",\n    \"8월\",\n    \"9월\",\n    \"10월\",\n    \"11월\",\n    \"12월\",\n  ],\n\n  wide: [\n    \"1월\",\n    \"2월\",\n    \"3월\",\n    \"4월\",\n    \"5월\",\n    \"6월\",\n    \"7월\",\n    \"8월\",\n    \"9월\",\n    \"10월\",\n    \"11월\",\n    \"12월\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"],\n  short: [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"],\n  abbreviated: [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"],\n  wide: [\"일요일\", \"월요일\", \"화요일\", \"수요일\", \"목요일\", \"금요일\", \"토요일\"],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"오전\",\n    pm: \"오후\",\n    midnight: \"자정\",\n    noon: \"정오\",\n    morning: \"아침\",\n    afternoon: \"오후\",\n    evening: \"저녁\",\n    night: \"밤\",\n  },\n  abbreviated: {\n    am: \"오전\",\n    pm: \"오후\",\n    midnight: \"자정\",\n    noon: \"정오\",\n    morning: \"아침\",\n    afternoon: \"오후\",\n    evening: \"저녁\",\n    night: \"밤\",\n  },\n  wide: {\n    am: \"오전\",\n    pm: \"오후\",\n    midnight: \"자정\",\n    noon: \"정오\",\n    morning: \"아침\",\n    afternoon: \"오후\",\n    evening: \"저녁\",\n    night: \"밤\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"오전\",\n    pm: \"오후\",\n    midnight: \"자정\",\n    noon: \"정오\",\n    morning: \"아침\",\n    afternoon: \"오후\",\n    evening: \"저녁\",\n    night: \"밤\",\n  },\n  abbreviated: {\n    am: \"오전\",\n    pm: \"오후\",\n    midnight: \"자정\",\n    noon: \"정오\",\n    morning: \"아침\",\n    afternoon: \"오후\",\n    evening: \"저녁\",\n    night: \"밤\",\n  },\n  wide: {\n    am: \"오전\",\n    pm: \"오후\",\n    midnight: \"자정\",\n    noon: \"정오\",\n    morning: \"아침\",\n    afternoon: \"오후\",\n    evening: \"저녁\",\n    night: \"밤\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, options) => {\n  const number = Number(dirtyNumber);\n  const unit = String(options?.unit);\n\n  switch (unit) {\n    case \"minute\":\n    case \"second\":\n      return String(number);\n    case \"date\":\n      return number + \"일\";\n    default:\n      return number + \"번째\";\n  }\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(일|번째)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(기원전|서기)/i,\n};\nconst parseEraPatterns = {\n  any: [/^(bc|기원전)/i, /^(ad|서기)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234]사?분기/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^(1[012]|[123456789])/,\n  abbreviated: /^(1[012]|[123456789])월/i,\n  wide: /^(1[012]|[123456789])월/i,\n};\nconst parseMonthPatterns = {\n  any: [\n    /^1월?$/,\n    /^2/,\n    /^3/,\n    /^4/,\n    /^5/,\n    /^6/,\n    /^7/,\n    /^8/,\n    /^9/,\n    /^10/,\n    /^11/,\n    /^12/,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[일월화수목금토]/,\n  short: /^[일월화수목금토]/,\n  abbreviated: /^[일월화수목금토]/,\n  wide: /^[일월화수목금토]요일/,\n};\nconst parseDayPatterns = {\n  any: [/^일/, /^월/, /^화/, /^수/, /^목/, /^금/, /^토/],\n};\n\nconst matchDayPeriodPatterns = {\n  any: /^(am|pm|오전|오후|자정|정오|아침|저녁|밤)/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^(am|오전)/i,\n    pm: /^(pm|오후)/i,\n    midnight: /^자정/i,\n    noon: /^정오/i,\n    morning: /^아침/i,\n    afternoon: /^오후/i,\n    evening: /^저녁/i,\n    night: /^밤/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","import { formatDistance } from \"./ko/_lib/formatDistance.js\";\nimport { formatLong } from \"./ko/_lib/formatLong.js\";\nimport { formatRelative } from \"./ko/_lib/formatRelative.js\";\nimport { localize } from \"./ko/_lib/localize.js\";\nimport { match } from \"./ko/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Korean locale.\n * @language Korean\n * @iso-639-2 kor\n * @author Hong Chulju [@angdev](https://github.com/angdev)\n * @author Lee Seoyoen [@iamssen](https://github.com/iamssen)\n * @author Taiki IKeda [@so99ynoodles](https://github.com/so99ynoodles)\n */\nexport const ko = {\n  code: \"ko\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default ko;\n","\nimport { Link } from 'react-router-dom'\nimport { format } from 'date-fns'\nimport { ko } from 'date-fns/locale'\nimport { ArrowRight } from 'lucide-react'\n\ninterface RequestProps {\n  requests: any[]\n}\n\nexport default function RecentRequests({ requests }: RequestProps) {\n  const getStatusBadge = (request: any) => {\n    if (request.delivery_status === 'completed') {\n      return <span className=\"px-2 py-1 text-xs font-medium bg-green-100 text-green-700 rounded-full\">완료</span>\n    }\n    if (request.final_manager_status === 'approved') {\n      return <span className=\"px-2 py-1 text-xs font-medium bg-hansl-100 text-hansl-700 rounded-full\">구매중</span>\n    }\n    if (request.middle_manager_status === 'approved') {\n      return <span className=\"px-2 py-1 text-xs font-medium bg-yellow-100 text-yellow-700 rounded-full\">최종승인 대기</span>\n    }\n    if (request.middle_manager_status === 'pending') {\n      return <span className=\"px-2 py-1 text-xs font-medium bg-gray-100 text-gray-700 rounded-full\">1차승인 대기</span>\n    }\n    return <span className=\"px-2 py-1 text-xs font-medium bg-red-100 text-red-700 rounded-full\">반려</span>\n  }\n\n  return (\n    <div className=\"bg-white rounded-xl shadow-sm border border-gray-200\">\n      <div className=\"p-6 border-b border-gray-200\">\n        <div className=\"flex items-center justify-between\">\n          <h2 className=\"text-lg font-semibold text-gray-900\">최근 발주 내역</h2>\n          <Link\n            to=\"/purchase/list\"\n            className=\"flex items-center gap-1 text-sm text-primary hover:underline\"\n          >\n            전체보기\n            <ArrowRight className=\"w-4 h-4\" />\n          </Link>\n        </div>\n      </div>\n\n      <div className=\"divide-y divide-gray-200\">\n        {requests.length === 0 ? (\n          <div className=\"p-6 text-center text-gray-500\">\n            최근 발주 내역이 없습니다.\n          </div>\n        ) : (\n          requests.map((request) => (\n            <div key={request.id} className=\"p-4 hover:bg-gray-50 transition-colors\">\n              <div className=\"flex items-center justify-between mb-2\">\n                <div>\n                  <p className=\"font-medium text-gray-900\">\n                    {request.purchase_order_number || `발주 #${request.id.slice(0, 8)}`}\n                  </p>\n                  <p className=\"text-sm text-gray-600\">\n                    {request.purchase_request_items?.[0]?.item_name}\n                    {request.purchase_request_items?.length > 1 && \n                      ` 외 ${request.purchase_request_items.length - 1}건`}\n                  </p>\n                </div>\n                {getStatusBadge(request)}\n              </div>\n              <div className=\"flex items-center justify-between text-sm text-gray-500\">\n                <span>\n                  {format(new Date(request.created_at), 'yyyy년 MM월 dd일', { locale: ko })}\n                </span>\n                <span className=\"font-medium\">\n                  ₩{request.total_amount?.toLocaleString() || '0'}\n                </span>\n              </div>\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n  )\n}","\nimport { Link } from 'react-router-dom'\nimport { format } from 'date-fns'\nimport { ko } from 'date-fns/locale'\nimport { ArrowRight, AlertCircle } from 'lucide-react'\n\ninterface ApprovalProps {\n  approvals: any[]\n  role?: string\n}\n\nexport default function PendingApprovals({ approvals, role }: ApprovalProps) {\n  const getActionText = () => {\n    if (role === 'middle_manager') return '1차 승인 필요'\n    if (role === 'final_approver' || role === 'ceo') return '최종 승인 필요'\n    if (role === 'lead_buyer') return '구매 처리 필요'\n    return '처리 필요'\n  }\n\n  return (\n    <div className=\"bg-white rounded-xl shadow-sm border border-gray-200\">\n      <div className=\"p-6 border-b border-gray-200\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center gap-2\">\n            <AlertCircle className=\"w-5 h-5 text-yellow-500\" />\n            <h2 className=\"text-lg font-semibold text-gray-900\">승인 대기 항목</h2>\n          </div>\n          <Link\n            to=\"/approval\"\n            className=\"flex items-center gap-1 text-sm text-primary hover:underline\"\n          >\n            전체보기\n            <ArrowRight className=\"w-4 h-4\" />\n          </Link>\n        </div>\n      </div>\n\n      <div className=\"divide-y divide-gray-200\">\n        {approvals.map((approval) => (\n          <div key={approval.id} className=\"p-4 hover:bg-gray-50 transition-colors\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <div className=\"flex-1\">\n                <p className=\"font-medium text-gray-900\">\n                  {approval.purchase_order_number || `발주 #${approval.id.slice(0, 8)}`}\n                </p>\n                <p className=\"text-sm text-gray-600\">\n                  요청자: {approval.requester_name || approval.requester_email}\n                </p>\n                <p className=\"text-sm text-gray-600\">\n                  {approval.purchase_request_items?.[0]?.item_name}\n                  {approval.purchase_request_items?.length > 1 && \n                    ` 외 ${approval.purchase_request_items.length - 1}건`}\n                </p>\n              </div>\n              <span className=\"px-3 py-1 text-xs font-medium bg-yellow-100 text-yellow-700 rounded-full\">\n                {getActionText()}\n              </span>\n            </div>\n            <div className=\"flex items-center justify-between text-sm text-gray-500\">\n              <span>\n                {format(new Date(approval.created_at), 'yyyy년 MM월 dd일', { locale: ko })}\n              </span>\n              <span className=\"font-medium\">\n                ₩{approval.total_amount?.toLocaleString() || '0'}\n              </span>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}","\nimport { useState, useEffect } from 'react';\nimport { createClient } from '@/lib/supabase/client';\nimport DashboardStats from '@/components/dashboard/DashboardStats';\nimport RecentRequests from '@/components/dashboard/RecentRequests';\nimport PendingApprovals from '@/components/dashboard/PendingApprovals';\n\ninterface Employee {\n  id: string;\n  name: string;\n  email: string;\n  purchase_role: string | string[];\n}\n\ninterface DashboardData {\n  employee: Employee | null;\n  stats: {\n    total: number;\n    myRequests: number;\n    pending: number;\n    completed: number;\n  };\n  recentRequests: any[];\n  pendingApprovals: any[];\n}\n\nexport default function DashboardMain() {\n  const [data, setData] = useState<DashboardData>({\n    employee: null,\n    stats: { total: 0, myRequests: 0, pending: 0, completed: 0 },\n    recentRequests: [],\n    pendingApprovals: []\n  });\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    loadDashboardData();\n  }, []);\n\n  const loadDashboardData = async () => {\n    try {\n      setLoading(true);\n      const supabase = createClient();\n      \n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) {\n        setLoading(false);\n        return;\n      }\n\n      // Get employee data\n      const { data: employee } = await supabase\n        .from('employees')\n        .select('*')\n        .eq('email', user.email)\n        .single();\n\n      if (!employee) {\n        setLoading(false);\n        return;\n      }\n\n      // Get statistics based on user role - 병렬 처리로 성능 개선\n      const [stats, recentRequests, pendingApprovals] = await Promise.all([\n        getDashboardStats(supabase, employee),\n        getRecentRequests(supabase, employee),\n        getPendingApprovals(supabase, employee)\n      ]);\n\n      setData({\n        employee,\n        stats,\n        recentRequests,\n        pendingApprovals\n      });\n    } catch (error) {\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center py-12\">\n        <div className=\"w-8 h-8 border-2 border-hansl-600 border-t-transparent rounded-full animate-spin\" />\n        <span className=\"ml-3 text-gray-600\">로딩 중...</span>\n      </div>\n    );\n  }\n\n  if (!data.employee) {\n    return (\n      <div className=\"text-center py-12\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">사용자 정보를 찾을 수 없습니다</h3>\n        <p className=\"text-gray-600\">로그인을 다시 시도해주세요.</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div>\n        <h1 className=\"text-2xl font-semibold text-gray-900\">대시보드</h1>\n        <p className=\"text-gray-600 mt-1\">\n          {data.employee.name}님, 환영합니다. 오늘의 발주 현황을 확인하세요.\n        </p>\n      </div>\n\n      <DashboardStats stats={data.stats} />\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <RecentRequests requests={data.recentRequests} />\n        {data.pendingApprovals.length > 0 && (\n          <PendingApprovals \n            approvals={data.pendingApprovals} \n            role={data.employee.purchase_role} \n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\n// 기존 서버 로직을 클라이언트로 변환\nasync function getDashboardStats(supabase: any, employee: any) {\n  const today = new Date().toISOString().split('T')[0];\n  const startOfMonth = new Date(new Date().getFullYear(), new Date().getMonth(), 1).toISOString();\n\n  // Total requests count\n  let totalQuery = supabase\n    .from('purchase_requests')\n    .select('id', { count: 'exact', head: true });\n\n  // My requests count\n  let myQuery = supabase\n    .from('purchase_requests')\n    .select('id', { count: 'exact', head: true })\n    .eq('requester_email', employee?.email);\n\n  // Pending approvals count based on role\n  let pendingQuery = supabase\n    .from('purchase_requests')\n    .select('id', { count: 'exact', head: true });\n\n  if (employee?.purchase_role === 'middle_manager') {\n    pendingQuery = pendingQuery.eq('middle_manager_status', 'pending');\n  } else if (employee?.purchase_role === 'final_approver' || employee?.purchase_role === 'ceo') {\n    pendingQuery = pendingQuery\n      .eq('middle_manager_status', 'approved')\n      .eq('final_manager_status', 'pending');\n  } else if (employee?.purchase_role === 'lead_buyer') {\n    pendingQuery = pendingQuery\n      .eq('final_manager_status', 'approved')\n      .eq('purchase_status', 'pending');\n  }\n\n  const [totalResult, myResult, pendingResult] = await Promise.all([\n    totalQuery,\n    myQuery,\n    pendingQuery\n  ]);\n\n  // This month's completed requests\n  const { count: completedCount } = await supabase\n    .from('purchase_requests')\n    .select('id', { count: 'exact', head: true })\n    .eq('delivery_status', 'completed')\n    .gte('created_at', startOfMonth);\n\n  return {\n    total: totalResult.count || 0,\n    myRequests: myResult.count || 0,\n    pending: pendingResult.count || 0,\n    completed: completedCount || 0\n  };\n}\n\nasync function getRecentRequests(supabase: any, employee: any) {\n  const { data } = await supabase\n    .from('purchase_requests')\n    .select(`\n      *,\n      purchase_request_items (\n        item_name,\n        quantity,\n        unit_price\n      )\n    `)\n    .eq('requester_email', employee?.email)\n    .order('created_at', { ascending: false })\n    .limit(5);\n\n  return data || [];\n}\n\nasync function getPendingApprovals(supabase: any, employee: any) {\n  let query = supabase\n    .from('purchase_requests')\n    .select(`\n      *,\n      purchase_request_items (\n        item_name,\n        quantity,\n        unit_price\n      )\n    `);\n\n  if (employee?.purchase_role === 'middle_manager') {\n    query = query.eq('middle_manager_status', 'pending');\n  } else if (employee?.purchase_role === 'final_approver' || employee?.purchase_role === 'ceo') {\n    query = query\n      .eq('middle_manager_status', 'approved')\n      .eq('final_manager_status', 'pending');\n  } else if (employee?.purchase_role === 'lead_buyer') {\n    query = query\n      .eq('final_manager_status', 'approved')\n      .eq('purchase_status', 'pending');\n  } else {\n    return [];\n  }\n\n  const { data } = await query\n    .order('created_at', { ascending: false })\n    .limit(5);\n\n  return data || [];\n}"],"names":["__iconNode","ArrowRight","createLucideIcon","Clock","DashboardStats","stats","statCards","Package","FileText","CheckCircle","stat","Icon","jsx","jsxs","formatDistanceLocale","formatDistance","token","count","options","result","tokenValue","dateFormats","timeFormats","dateTimeFormats","formatLong","buildFormatLongFn","formatRelativeLocale","formatRelative","_date","_baseDate","_options","eraValues","quarterValues","monthValues","dayValues","dayPeriodValues","formattingDayPeriodValues","ordinalNumber","dirtyNumber","number","localize","buildLocalizeFn","quarter","matchOrdinalNumberPattern","parseOrdinalNumberPattern","matchEraPatterns","parseEraPatterns","matchQuarterPatterns","parseQuarterPatterns","matchMonthPatterns","parseMonthPatterns","matchDayPatterns","parseDayPatterns","matchDayPeriodPatterns","parseDayPeriodPatterns","match","buildMatchPatternFn","value","buildMatchFn","index","ko","RecentRequests","requests","getStatusBadge","request","Link","format","PendingApprovals","approvals","role","getActionText","AlertCircle","approval","DashboardMain","data","setData","useState","loading","setLoading","useEffect","loadDashboardData","supabase","createClient","user","employee","recentRequests","pendingApprovals","getDashboardStats","getRecentRequests","getPendingApprovals","startOfMonth","totalQuery","myQuery","pendingQuery","totalResult","myResult","pendingResult","completedCount","query"],"mappings":"gKAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GASA,MAAMA,EAAa,CACjB,CAAC,OAAQ,CAAE,EAAG,WAAY,IAAK,QAAQ,CAAE,EACzC,CAAC,OAAQ,CAAE,EAAG,gBAAiB,IAAK,QAAQ,CAAE,CAChD,EACMC,EAAaC,EAAiB,cAAeF,CAAU,ECb7D;AAAA;AAAA;AAAA;AAAA;AAAA,GASA,MAAMA,EAAa,CACjB,CAAC,OAAQ,CAAE,EAAG,cAAe,IAAK,QAAQ,CAAE,EAC5C,CAAC,SAAU,CAAE,GAAI,KAAM,GAAI,KAAM,EAAG,KAAM,IAAK,QAAQ,CAAE,CAC3D,EACMG,EAAQD,EAAiB,QAASF,CAAU,ECDlD,SAAwBI,EAAe,CAAE,MAAAC,GAAqB,CAC5D,MAAMC,EAAY,CAChB,CACE,MAAO,QACP,MAAOD,EAAM,MACb,KAAME,EACN,MAAO,eACP,QAAS,aAAA,EAEX,CACE,MAAO,OACP,MAAOF,EAAM,WACb,KAAMG,EACN,MAAO,eACP,QAAS,aAAA,EAEX,CACE,MAAO,QACP,MAAOH,EAAM,QACb,KAAMF,EACN,MAAO,gBACP,QAAS,cAAA,EAEX,CACE,MAAO,UACP,MAAOE,EAAM,UACb,KAAMI,EACN,MAAO,gBACP,QAAS,cAAA,CACX,EAGF,aACG,MAAA,CAAI,UAAU,uDACZ,SAAAH,EAAU,IAAKI,GAAS,CACvB,MAAMC,EAAOD,EAAK,KAClB,OACEE,EAAAA,IAAC,MAAA,CAEC,UAAU,6FAEV,SAAAC,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAD,EAAAA,IAAC,IAAA,CAAE,UAAU,6BAA8B,SAAAF,EAAK,MAAM,QACrD,IAAA,CAAE,UAAU,uCACV,SAAAA,EAAK,MAAM,gBAAe,CAC7B,CAAA,EACF,QACC,MAAA,CAAI,UAAW,GAAGA,EAAK,OAAO,kBAC7B,SAAAE,MAACD,EAAA,CAAK,UAAW,WAAWD,EAAK,MAAM,QAAQ,MAAO,OAAO,CAAC,GAAI,CAAA,CACpE,CAAA,CAAA,CACF,CAAA,EAbKA,EAAK,KAAA,CAgBhB,CAAC,CAAA,CACH,CAEJ,CCrEA,MAAMI,EAAuB,CAC3B,iBAAkB,CAChB,IAAK,QACL,MAAO,eACX,EAEE,SAAU,CACR,IAAK,KACL,MAAO,YACX,EAEE,YAAa,MAEb,iBAAkB,CAChB,IAAK,QACL,MAAO,eACX,EAEE,SAAU,CACR,IAAK,KACL,MAAO,YACX,EAEE,YAAa,CACX,IAAK,QACL,MAAO,eACX,EAEE,OAAQ,CACN,IAAK,MACL,MAAO,aACX,EAEE,MAAO,CACL,IAAK,KACL,MAAO,YACX,EAEE,YAAa,CACX,IAAK,OACL,MAAO,cACX,EAEE,OAAQ,CACN,IAAK,KACL,MAAO,YACX,EAEE,aAAc,CACZ,IAAK,QACL,MAAO,eACX,EAEE,QAAS,CACP,IAAK,MACL,MAAO,aACX,EAEE,YAAa,CACX,IAAK,OACL,MAAO,cACX,EAEE,OAAQ,CACN,IAAK,KACL,MAAO,YACX,EAEE,WAAY,CACV,IAAK,QACL,MAAO,eACX,EAEE,aAAc,CACZ,IAAK,QACL,MAAO,eACX,CACA,EAEaC,EAAiB,CAACC,EAAOC,EAAOC,IAAY,CACvD,IAAIC,EAEJ,MAAMC,EAAaN,EAAqBE,CAAK,EAS7C,OARI,OAAOI,GAAe,SACxBD,EAASC,EACAH,IAAU,EACnBE,EAASC,EAAW,IAEpBD,EAASC,EAAW,MAAM,QAAQ,YAAaH,EAAM,UAAU,EAG7DC,GAAS,UACPA,EAAQ,YAAcA,EAAQ,WAAa,EACtCC,EAAS,KAETA,EAAS,KAIbA,CACT,EClGME,EAAc,CAClB,KAAM,gBACN,KAAM,WACN,OAAQ,UACR,MAAO,SACT,EAEMC,EAAc,CAClB,KAAM,oBACN,KAAM,cACN,OAAQ,WACR,MAAO,OACT,EAEMC,EAAkB,CACtB,KAAM,oBACN,KAAM,oBACN,OAAQ,oBACR,MAAO,mBACT,EAEaC,EAAa,CACxB,KAAMC,EAAkB,CACtB,QAASJ,EACT,aAAc,MAClB,CAAG,EAED,KAAMI,EAAkB,CACtB,QAASH,EACT,aAAc,MAClB,CAAG,EAED,SAAUG,EAAkB,CAC1B,QAASF,EACT,aAAc,MAClB,CAAG,CACH,ECtCMG,EAAuB,CAC3B,SAAU,cACV,UAAW,SACX,MAAO,SACP,SAAU,SACV,SAAU,cACV,MAAO,GACT,EAEaC,EAAiB,CAACX,EAAOY,EAAOC,EAAWC,IACtDJ,EAAqBV,CAAK,ECRtBe,EAAY,CAChB,OAAQ,CAAC,KAAM,IAAI,EACnB,YAAa,CAAC,KAAM,IAAI,EACxB,KAAM,CAAC,MAAO,IAAI,CACpB,EAEMC,EAAgB,CACpB,OAAQ,CAAC,IAAK,IAAK,IAAK,GAAG,EAC3B,YAAa,CAAC,KAAM,KAAM,KAAM,IAAI,EACpC,KAAM,CAAC,MAAO,MAAO,MAAO,KAAK,CACnC,EAEMC,EAAc,CAClB,OAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,IAAI,EAEtE,YAAa,CACX,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,MACA,KACJ,EAEE,KAAM,CACJ,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,MACA,KACJ,CACA,EAEMC,EAAY,CAChB,OAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAG,EAC1C,MAAO,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAG,EACzC,YAAa,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAG,EAC/C,KAAM,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,KAAK,CACxD,EAEMC,EAAkB,CACtB,OAAQ,CACN,GAAI,KACJ,GAAI,KACJ,SAAU,KACV,KAAM,KACN,QAAS,KACT,UAAW,KACX,QAAS,KACT,MAAO,GACX,EACE,YAAa,CACX,GAAI,KACJ,GAAI,KACJ,SAAU,KACV,KAAM,KACN,QAAS,KACT,UAAW,KACX,QAAS,KACT,MAAO,GACX,EACE,KAAM,CACJ,GAAI,KACJ,GAAI,KACJ,SAAU,KACV,KAAM,KACN,QAAS,KACT,UAAW,KACX,QAAS,KACT,MAAO,GACX,CACA,EAEMC,EAA4B,CAChC,OAAQ,CACN,GAAI,KACJ,GAAI,KACJ,SAAU,KACV,KAAM,KACN,QAAS,KACT,UAAW,KACX,QAAS,KACT,MAAO,GACX,EACE,YAAa,CACX,GAAI,KACJ,GAAI,KACJ,SAAU,KACV,KAAM,KACN,QAAS,KACT,UAAW,KACX,QAAS,KACT,MAAO,GACX,EACE,KAAM,CACJ,GAAI,KACJ,GAAI,KACJ,SAAU,KACV,KAAM,KACN,QAAS,KACT,UAAW,KACX,QAAS,KACT,MAAO,GACX,CACA,EAEMC,EAAgB,CAACC,EAAapB,IAAY,CAC9C,MAAMqB,EAAS,OAAOD,CAAW,EAGjC,OAFa,OAAOpB,GAAS,IAAI,EAErB,CACV,IAAK,SACL,IAAK,SACH,OAAO,OAAOqB,CAAM,EACtB,IAAK,OACH,OAAOA,EAAS,IAClB,QACE,OAAOA,EAAS,IACtB,CACA,EAEaC,EAAW,CACtB,cAAAH,EAEA,IAAKI,EAAgB,CACnB,OAAQV,EACR,aAAc,MAClB,CAAG,EAED,QAASU,EAAgB,CACvB,OAAQT,EACR,aAAc,OACd,iBAAmBU,GAAYA,EAAU,CAC7C,CAAG,EAED,MAAOD,EAAgB,CACrB,OAAQR,EACR,aAAc,MAClB,CAAG,EAED,IAAKQ,EAAgB,CACnB,OAAQP,EACR,aAAc,MAClB,CAAG,EAED,UAAWO,EAAgB,CACzB,OAAQN,EACR,aAAc,OACd,iBAAkBC,EAClB,uBAAwB,MAC5B,CAAG,CACH,ECnKMO,EAA4B,iBAC5BC,EAA4B,OAE5BC,EAAmB,CACvB,OAAQ,6DACR,YAAa,6DACb,KAAM,YACR,EACMC,EAAmB,CACvB,IAAK,CAAC,aAAc,WAAW,CACjC,EAEMC,EAAuB,CAC3B,OAAQ,WACR,YAAa,YACb,KAAM,cACR,EACMC,EAAuB,CAC3B,IAAK,CAAC,KAAM,KAAM,KAAM,IAAI,CAC9B,EAEMC,EAAqB,CACzB,OAAQ,wBACR,YAAa,0BACb,KAAM,yBACR,EACMC,GAAqB,CACzB,IAAK,CACH,QACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,MACA,KACJ,CACA,EAEMC,GAAmB,CACvB,OAAQ,aACR,MAAO,aACP,YAAa,aACb,KAAM,cACR,EACMC,GAAmB,CACvB,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAI,CAChD,EAEMC,GAAyB,CAC7B,IAAK,+BACP,EACMC,GAAyB,CAC7B,IAAK,CACH,GAAI,YACJ,GAAI,YACJ,SAAU,OACV,KAAM,OACN,QAAS,OACT,UAAW,OACX,QAAS,OACT,MAAO,KACX,CACA,EAEaC,GAAQ,CACnB,cAAeC,EAAoB,CACjC,aAAcb,EACd,aAAcC,EACd,cAAgBa,GAAU,SAASA,EAAO,EAAE,CAChD,CAAG,EAED,IAAKC,EAAa,CAChB,cAAeb,EACf,kBAAmB,OACnB,cAAeC,EACf,kBAAmB,KACvB,CAAG,EAED,QAASY,EAAa,CACpB,cAAeX,EACf,kBAAmB,OACnB,cAAeC,EACf,kBAAmB,MACnB,cAAgBW,GAAUA,EAAQ,CACtC,CAAG,EAED,MAAOD,EAAa,CAClB,cAAeT,EACf,kBAAmB,OACnB,cAAeC,GACf,kBAAmB,KACvB,CAAG,EAED,IAAKQ,EAAa,CAChB,cAAeP,GACf,kBAAmB,OACnB,cAAeC,GACf,kBAAmB,KACvB,CAAG,EAED,UAAWM,EAAa,CACtB,cAAeL,GACf,kBAAmB,MACnB,cAAeC,GACf,kBAAmB,KACvB,CAAG,CACH,ECnGaM,EAAK,CAChB,KAAM,KACN,eAAgB7C,EAChB,WAAYS,EACZ,eAAgBG,EAChB,SAAUa,EACV,MAAOe,GACP,QAAS,CACP,aAAc,EACd,sBAAuB,CAC3B,CACA,EChBA,SAAwBM,GAAe,CAAE,SAAAC,GAA0B,CACjE,MAAMC,EAAkBC,GAClBA,EAAQ,kBAAoB,YACvBpD,EAAAA,IAAC,OAAA,CAAK,UAAU,yEAAyE,SAAA,KAAE,EAEhGoD,EAAQ,uBAAyB,WAC5BpD,EAAAA,IAAC,OAAA,CAAK,UAAU,yEAAyE,SAAA,MAAG,EAEjGoD,EAAQ,wBAA0B,WAC7BpD,EAAAA,IAAC,OAAA,CAAK,UAAU,2EAA2E,SAAA,UAAO,EAEvGoD,EAAQ,wBAA0B,UAC7BpD,EAAAA,IAAC,OAAA,CAAK,UAAU,uEAAuE,SAAA,UAAO,EAEhGA,EAAAA,IAAC,OAAA,CAAK,UAAU,qEAAqE,SAAA,KAAE,EAGhG,OACEC,EAAAA,KAAC,MAAA,CAAI,UAAU,uDACb,SAAA,CAAAD,EAAAA,IAAC,OAAI,UAAU,+BACb,SAAAC,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAD,EAAAA,IAAC,KAAA,CAAG,UAAU,sCAAsC,SAAA,WAAQ,EAC5DC,EAAAA,KAACoD,EAAA,CACC,GAAG,iBACH,UAAU,+DACX,SAAA,CAAA,OAECrD,EAAAA,IAACX,EAAA,CAAW,UAAU,SAAA,CAAU,CAAA,CAAA,CAAA,CAClC,CAAA,CACF,CAAA,CACF,EAEAW,EAAAA,IAAC,OAAI,UAAU,2BACZ,WAAS,SAAW,QAClB,MAAA,CAAI,UAAU,gCAAgC,SAAA,iBAAA,CAE/C,EAEAkD,EAAS,IAAKE,GACZnD,EAAAA,KAAC,MAAA,CAAqB,UAAU,yCAC9B,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAD,EAAAA,IAAC,IAAA,CAAE,UAAU,4BACV,SAAAoD,EAAQ,uBAAyB,OAAOA,EAAQ,GAAG,MAAM,EAAG,CAAC,CAAC,GACjE,EACAnD,EAAAA,KAAC,IAAA,CAAE,UAAU,wBACV,SAAA,CAAAmD,EAAQ,yBAAyB,CAAC,GAAG,UACrCA,EAAQ,wBAAwB,OAAS,GACxC,MAAMA,EAAQ,uBAAuB,OAAS,CAAC,GAAA,CAAA,CACnD,CAAA,EACF,EACCD,EAAeC,CAAO,CAAA,EACzB,EACAnD,EAAAA,KAAC,MAAA,CAAI,UAAU,0DACb,SAAA,CAAAD,EAAAA,IAAC,OAAA,CACE,SAAAsD,EAAO,IAAI,KAAKF,EAAQ,UAAU,EAAG,gBAAiB,CAAE,OAAQJ,CAAA,CAAI,CAAA,CACvE,EACA/C,EAAAA,KAAC,OAAA,CAAK,UAAU,cAAc,SAAA,CAAA,IAC1BmD,EAAQ,cAAc,kBAAoB,GAAA,CAAA,CAC9C,CAAA,CAAA,CACF,CAAA,GArBQA,EAAQ,EAsBlB,CACD,CAAA,CAEL,CAAA,EACF,CAEJ,CClEA,SAAwBG,GAAiB,CAAE,UAAAC,EAAW,KAAAC,GAAuB,CAC3E,MAAMC,EAAgB,IAChBD,IAAS,iBAAyB,WAClCA,IAAS,kBAAoBA,IAAS,MAAc,WACpDA,IAAS,aAAqB,WAC3B,QAGT,OACExD,EAAAA,KAAC,MAAA,CAAI,UAAU,uDACb,SAAA,CAAAD,EAAAA,IAAC,OAAI,UAAU,+BACb,SAAAC,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAD,EAAAA,IAAC2D,EAAA,CAAY,UAAU,yBAAA,CAA0B,EACjD3D,EAAAA,IAAC,KAAA,CAAG,UAAU,sCAAsC,SAAA,UAAA,CAAQ,CAAA,EAC9D,EACAC,EAAAA,KAACoD,EAAA,CACC,GAAG,YACH,UAAU,+DACX,SAAA,CAAA,OAECrD,EAAAA,IAACX,EAAA,CAAW,UAAU,SAAA,CAAU,CAAA,CAAA,CAAA,CAClC,CAAA,CACF,CAAA,CACF,EAEAW,EAAAA,IAAC,MAAA,CAAI,UAAU,2BACZ,SAAAwD,EAAU,IAAKI,GACd3D,EAAAA,KAAC,MAAA,CAAsB,UAAU,yCAC/B,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,SACb,SAAA,CAAAD,EAAAA,IAAC,IAAA,CAAE,UAAU,4BACV,SAAA4D,EAAS,uBAAyB,OAAOA,EAAS,GAAG,MAAM,EAAG,CAAC,CAAC,GACnE,EACA3D,EAAAA,KAAC,IAAA,CAAE,UAAU,wBAAwB,SAAA,CAAA,QAC7B2D,EAAS,gBAAkBA,EAAS,eAAA,EAC5C,EACA3D,EAAAA,KAAC,IAAA,CAAE,UAAU,wBACV,SAAA,CAAA2D,EAAS,yBAAyB,CAAC,GAAG,UACtCA,EAAS,wBAAwB,OAAS,GACzC,MAAMA,EAAS,uBAAuB,OAAS,CAAC,GAAA,CAAA,CACpD,CAAA,EACF,EACA5D,EAAAA,IAAC,OAAA,CAAK,UAAU,2EACb,YAAc,CACjB,CAAA,EACF,EACAC,EAAAA,KAAC,MAAA,CAAI,UAAU,0DACb,SAAA,CAAAD,EAAAA,IAAC,OAAA,CACE,SAAAsD,EAAO,IAAI,KAAKM,EAAS,UAAU,EAAG,gBAAiB,CAAE,OAAQZ,CAAA,CAAI,CAAA,CACxE,EACA/C,EAAAA,KAAC,OAAA,CAAK,UAAU,cAAc,SAAA,CAAA,IAC1B2D,EAAS,cAAc,kBAAoB,GAAA,CAAA,CAC/C,CAAA,CAAA,CACF,CAAA,GA1BQA,EAAS,EA2BnB,CACD,CAAA,CACH,CAAA,EACF,CAEJ,CC7CA,SAAwBC,IAAgB,CACtC,KAAM,CAACC,EAAMC,CAAO,EAAIC,WAAwB,CAC9C,SAAU,KACV,MAAO,CAAE,MAAO,EAAG,WAAY,EAAG,QAAS,EAAG,UAAW,CAAA,EACzD,eAAgB,CAAA,EAChB,iBAAkB,CAAA,CAAC,CACpB,EACK,CAACC,EAASC,CAAU,EAAIF,EAAAA,SAAS,EAAI,EAE3CG,EAAAA,UAAU,IAAM,CACdC,EAAA,CACF,EAAG,CAAA,CAAE,EAEL,MAAMA,EAAoB,SAAY,CACpC,GAAI,CACFF,EAAW,EAAI,EACf,MAAMG,EAAWC,EAAA,EAEX,CAAE,KAAM,CAAE,KAAAC,CAAA,GAAW,MAAMF,EAAS,KAAK,QAAA,EAC/C,GAAI,CAACE,EAAM,CACTL,EAAW,EAAK,EAChB,MACF,CAGA,KAAM,CAAE,KAAMM,CAAA,EAAa,MAAMH,EAC9B,KAAK,WAAW,EAChB,OAAO,GAAG,EACV,GAAG,QAASE,EAAK,KAAK,EACtB,OAAA,EAEH,GAAI,CAACC,EAAU,CACbN,EAAW,EAAK,EAChB,MACF,CAGA,KAAM,CAACzE,EAAOgF,EAAgBC,CAAgB,EAAI,MAAM,QAAQ,IAAI,CAClEC,GAAkBN,EAAUG,CAAQ,EACpCI,GAAkBP,EAAUG,CAAQ,EACpCK,GAAoBR,EAAUG,CAAQ,CAAA,CACvC,EAEDT,EAAQ,CACN,SAAAS,EACA,MAAA/E,EACA,eAAAgF,EACA,iBAAAC,CAAA,CACD,CACH,MAAgB,CAChB,QAAA,CACER,EAAW,EAAK,CAClB,CACF,EAEA,OAAID,EAEAhE,EAAAA,KAAC,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAD,EAAAA,IAAC,MAAA,CAAI,UAAU,kFAAA,CAAmF,EAClGA,EAAAA,IAAC,OAAA,CAAK,UAAU,qBAAqB,SAAA,SAAA,CAAO,CAAA,EAC9C,EAIC8D,EAAK,SAUR7D,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAD,EAAAA,IAAC,KAAA,CAAG,UAAU,uCAAuC,SAAA,OAAI,EACzDC,EAAAA,KAAC,IAAA,CAAE,UAAU,qBACV,SAAA,CAAA6D,EAAK,SAAS,KAAK,6BAAA,CAAA,CACtB,CAAA,EACF,EAEA9D,EAAAA,IAACR,EAAA,CAAe,MAAOsE,EAAK,KAAA,CAAO,EAEnC7D,EAAAA,KAAC,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAD,EAAAA,IAACiD,GAAA,CAAe,SAAUa,EAAK,cAAA,CAAgB,EAC9CA,EAAK,iBAAiB,OAAS,GAC9B9D,EAAAA,IAACuD,GAAA,CACC,UAAWO,EAAK,iBAChB,KAAMA,EAAK,SAAS,aAAA,CAAA,CACtB,CAAA,CAEJ,CAAA,EACF,EA3BE7D,EAAAA,KAAC,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAD,EAAAA,IAAC,KAAA,CAAG,UAAU,2CAA2C,SAAA,oBAAiB,EAC1EA,EAAAA,IAAC,IAAA,CAAE,UAAU,gBAAgB,SAAA,iBAAA,CAAe,CAAA,EAC9C,CA0BN,CAGA,eAAe2E,GAAkBN,EAAeG,EAAe,KAC3C,KAAA,EAAO,cAAc,MAAM,GAAG,EAAE,CAAC,EACnD,MAAMM,EAAe,IAAI,KAAK,IAAI,OAAO,YAAA,EAAe,IAAI,OAAO,SAAA,EAAY,CAAC,EAAE,YAAA,EAGlF,IAAIC,EAAaV,EACd,KAAK,mBAAmB,EACxB,OAAO,KAAM,CAAE,MAAO,QAAS,KAAM,EAAA,CAAM,EAG1CW,EAAUX,EACX,KAAK,mBAAmB,EACxB,OAAO,KAAM,CAAE,MAAO,QAAS,KAAM,GAAM,EAC3C,GAAG,kBAAmBG,GAAU,KAAK,EAGpCS,EAAeZ,EAChB,KAAK,mBAAmB,EACxB,OAAO,KAAM,CAAE,MAAO,QAAS,KAAM,EAAA,CAAM,EAE1CG,GAAU,gBAAkB,iBAC9BS,EAAeA,EAAa,GAAG,wBAAyB,SAAS,EACxDT,GAAU,gBAAkB,kBAAoBA,GAAU,gBAAkB,MACrFS,EAAeA,EACZ,GAAG,wBAAyB,UAAU,EACtC,GAAG,uBAAwB,SAAS,EAC9BT,GAAU,gBAAkB,eACrCS,EAAeA,EACZ,GAAG,uBAAwB,UAAU,EACrC,GAAG,kBAAmB,SAAS,GAGpC,KAAM,CAACC,EAAaC,EAAUC,CAAa,EAAI,MAAM,QAAQ,IAAI,CAC/DL,EACAC,EACAC,CAAA,CACD,EAGK,CAAE,MAAOI,CAAA,EAAmB,MAAMhB,EACrC,KAAK,mBAAmB,EACxB,OAAO,KAAM,CAAE,MAAO,QAAS,KAAM,EAAA,CAAM,EAC3C,GAAG,kBAAmB,WAAW,EACjC,IAAI,aAAcS,CAAY,EAEjC,MAAO,CACL,MAAOI,EAAY,OAAS,EAC5B,WAAYC,EAAS,OAAS,EAC9B,QAASC,EAAc,OAAS,EAChC,UAAWC,GAAkB,CAAA,CAEjC,CAEA,eAAeT,GAAkBP,EAAeG,EAAe,CAC7D,KAAM,CAAE,KAAAV,GAAS,MAAMO,EACpB,KAAK,mBAAmB,EACxB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOP,EACA,GAAG,kBAAmBG,GAAU,KAAK,EACrC,MAAM,aAAc,CAAE,UAAW,EAAA,CAAO,EACxC,MAAM,CAAC,EAEV,OAAOV,GAAQ,CAAA,CACjB,CAEA,eAAee,GAAoBR,EAAeG,EAAe,CAC/D,IAAIc,EAAQjB,EACT,KAAK,mBAAmB,EACxB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOP,EAEH,GAAIG,GAAU,gBAAkB,iBAC9Bc,EAAQA,EAAM,GAAG,wBAAyB,SAAS,UAC1Cd,GAAU,gBAAkB,kBAAoBA,GAAU,gBAAkB,MACrFc,EAAQA,EACL,GAAG,wBAAyB,UAAU,EACtC,GAAG,uBAAwB,SAAS,UAC9Bd,GAAU,gBAAkB,aACrCc,EAAQA,EACL,GAAG,uBAAwB,UAAU,EACrC,GAAG,kBAAmB,SAAS,MAElC,OAAO,CAAA,EAGT,KAAM,CAAE,KAAAxB,CAAA,EAAS,MAAMwB,EACpB,MAAM,aAAc,CAAE,UAAW,EAAA,CAAO,EACxC,MAAM,CAAC,EAEV,OAAOxB,GAAQ,CAAA,CACjB","x_google_ignoreList":[0,1,3,4,5,6,7,8]}