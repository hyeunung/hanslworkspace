{"version":3,"file":"DashboardMain-BBQ4_Bo4.js","sources":["../../node_modules/lucide-react/dist/esm/icons/arrow-right.js","../../node_modules/lucide-react/dist/esm/icons/clock.js","../../node_modules/lucide-react/dist/esm/icons/thumbs-up.js","../../node_modules/lucide-react/dist/esm/icons/triangle-alert.js","../../node_modules/lucide-react/dist/esm/icons/truck.js","../../src/services/dashboardService.ts","../../src/components/dashboard/DashboardMain.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M5 12h14\", key: \"1ays0h\" }],\n  [\"path\", { d: \"m12 5 7 7-7 7\", key: \"xquz4c\" }]\n];\nconst ArrowRight = createLucideIcon(\"arrow-right\", __iconNode);\n\nexport { __iconNode, ArrowRight as default };\n//# sourceMappingURL=arrow-right.js.map\n","/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M12 6v6l4 2\", key: \"mmk7yg\" }],\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }]\n];\nconst Clock = createLucideIcon(\"clock\", __iconNode);\n\nexport { __iconNode, Clock as default };\n//# sourceMappingURL=clock.js.map\n","/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M7 10v12\", key: \"1qc93n\" }],\n  [\n    \"path\",\n    {\n      d: \"M15 5.88 14 10h5.83a2 2 0 0 1 1.92 2.56l-2.33 8A2 2 0 0 1 17.5 22H4a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h2.76a2 2 0 0 0 1.79-1.11L12 2a3.13 3.13 0 0 1 3 3.88Z\",\n      key: \"emmmcr\"\n    }\n  ]\n];\nconst ThumbsUp = createLucideIcon(\"thumbs-up\", __iconNode);\n\nexport { __iconNode, ThumbsUp as default };\n//# sourceMappingURL=thumbs-up.js.map\n","/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3\",\n      key: \"wmoenq\"\n    }\n  ],\n  [\"path\", { d: \"M12 9v4\", key: \"juzpu7\" }],\n  [\"path\", { d: \"M12 17h.01\", key: \"p32p05\" }]\n];\nconst TriangleAlert = createLucideIcon(\"triangle-alert\", __iconNode);\n\nexport { __iconNode, TriangleAlert as default };\n//# sourceMappingURL=triangle-alert.js.map\n","/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M14 18V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v11a1 1 0 0 0 1 1h2\", key: \"wrbu53\" }],\n  [\"path\", { d: \"M15 18H9\", key: \"1lyqi6\" }],\n  [\n    \"path\",\n    {\n      d: \"M19 18h2a1 1 0 0 0 1-1v-3.65a1 1 0 0 0-.22-.624l-3.48-4.35A1 1 0 0 0 17.52 8H14\",\n      key: \"lysw3i\"\n    }\n  ],\n  [\"circle\", { cx: \"17\", cy: \"18\", r: \"2\", key: \"332jqn\" }],\n  [\"circle\", { cx: \"7\", cy: \"18\", r: \"2\", key: \"19iecd\" }]\n];\nconst Truck = createLucideIcon(\"truck\", __iconNode);\n\nexport { __iconNode, Truck as default };\n//# sourceMappingURL=truck.js.map\n","import { createClient } from '@/lib/supabase/client'\nimport type { \n  DashboardData, \n  DashboardStats, \n  UrgentRequest, \n  MyRequestStatus, \n  QuickAction,\n  Employee \n} from '@/types/purchase'\n\nexport class DashboardService {\n  private supabase = createClient()\n\n  // 역할 파싱 유틸: 배열/CSV 문자열/단일 문자열을 모두 배열로 정규화\n  // usePurchaseData.ts와 동일한 로직 사용\n  private parseRoles(purchaseRole: string | string[] | null | undefined): string[] {\n    let roles: string[] = []\n    \n    if (purchaseRole) {\n      if (Array.isArray(purchaseRole)) {\n        // 배열인 경우\n        roles = purchaseRole.map((r: any) => String(r).trim())\n      } else {\n        // 문자열인 경우 (일반적)\n        const roleString = String(purchaseRole)\n        // 쉼표로 분할하고 공백 제거\n        roles = roleString\n          .split(',')\n          .map((r: string) => r.trim())\n          .filter((r: string) => r.length > 0)\n      }\n    }\n    \n    return roles\n  }\n\n  // 메인 대시보드 데이터 로드\n  async getDashboardData(employee: Employee): Promise<DashboardData> {\n    const [\n      stats,\n      urgentRequests,\n      myRecentRequests,\n      pendingApprovals,\n      quickActions,\n      todaySummary,\n      myPurchaseStatus\n    ] = await Promise.all([\n      this.getDashboardStats(employee),\n      this.getUrgentRequests(employee),\n      this.getMyRecentRequests(employee),\n      this.getPendingApprovals(employee),\n      this.getQuickActions(employee),\n      this.getTodaySummary(employee),\n      this.getMyPurchaseStatus(employee)\n    ])\n\n    return {\n      employee,\n      stats,\n      urgentRequests,\n      myRecentRequests,\n      pendingApprovals,\n      quickActions,\n      todaySummary,\n      myPurchaseStatus\n    }\n  }\n\n  // 통계 정보 (우선순위 재정렬)\n  async getDashboardStats(employee: Employee): Promise<DashboardStats> {\n    const today = new Date().toISOString().split('T')[0]\n    const roles = this.parseRoles(employee.purchase_role)\n\n    console.log('Getting stats for employee:', employee.name, 'with roles:', roles) // 디버깅용\n\n    // 병렬 쿼리로 성능 최적화\n    const [\n      totalResult,\n      myRequestsResult,\n      pendingResult,\n      completedResult,\n      urgentResult,\n      todayActionsResult\n    ] = await Promise.all([\n      // 전체 요청 수\n      this.supabase\n        .from('purchase_requests')\n        .select('id', { count: 'exact', head: true }),\n\n      // 내 요청 수\n      this.supabase\n        .from('purchase_requests')\n        .select('id', { count: 'exact', head: true })\n        .eq('requester_name', employee.name),\n\n      // 내가 처리해야 할 승인 대기\n      this.getPendingCount(employee, roles),\n\n      // 이번 달 완료된 요청 수  \n      this.supabase\n        .from('purchase_requests')\n        .select('id', { count: 'exact', head: true })\n        .eq('is_received', true)\n        .gte('received_at', new Date(new Date().getFullYear(), new Date().getMonth(), 1).toISOString()),\n\n      // 긴급 요청 수 (3일 이상 대기)\n      this.getUrgentCount(employee, roles),\n\n      // 오늘 처리한 액션 수\n      this.getTodayActionsCount(employee, today)\n    ])\n\n    const stats = {\n      total: totalResult.count || 0,\n      myRequests: myRequestsResult.count || 0,\n      pending: pendingResult,\n      completed: completedResult.count || 0,\n      urgent: urgentResult,\n      todayActions: todayActionsResult\n    }\n\n    console.log('Dashboard stats:', stats) // 디버깅용\n    return stats\n  }\n\n  // 긴급 요청 목록 (우선순위 최상위)\n  async getUrgentRequests(employee: Employee): Promise<UrgentRequest[]> {\n    const threeDaysAgo = new Date(Date.now() - 3 * 24 * 60 * 60 * 1000).toISOString()\n    const roles = this.parseRoles(employee.purchase_role)\n\n    // 역할이 없으면 긴급 요청도 없음\n    if (roles.length === 0) {\n      return []\n    }\n\n    let query = this.supabase\n      .from('purchase_requests')\n      .select(`\n        *,\n        vendors (vendor_name),\n        purchase_request_items (id)\n      `)\n      .lt('created_at', threeDaysAgo)\n\n    // 역할별 긴급 요청 필터링\n    if (roles.includes('app_admin')) {\n      query = query.or('middle_manager_status.eq.pending,final_manager_status.eq.pending,purchase_status.eq.pending')\n    } else if (roles.includes('middle_manager')) {\n      query = query.eq('middle_manager_status', 'pending')\n    } else if (roles.includes('final_approver') || roles.includes('ceo')) {\n      query = query\n        .eq('middle_manager_status', 'approved')\n        .eq('final_manager_status', 'pending')\n    } else if (roles.includes('lead_buyer')) {\n      query = query\n        .eq('final_manager_status', 'approved')\n        .eq('purchase_status', 'pending')\n    } else {\n      // 다른 역할은 긴급 요청 없음\n      return []\n    }\n\n    const { data } = await query\n      .order('created_at', { ascending: true })\n      .limit(5)\n\n    return (data || []).map(item => ({\n      ...item,\n      vendor_name: item.vendors?.vendor_name,\n      total_items: item.purchase_request_items?.length || 0,\n      daysOverdue: Math.floor((Date.now() - new Date(item.created_at).getTime()) / (1000 * 60 * 60 * 24)),\n      priority: this.calculatePriority(item),\n      urgentReason: this.getUrgentReason(item, roles)\n    })) as UrgentRequest[]\n  }\n\n  // 내 최근 요청 상태 (승인 단계 요청만)\n  async getMyRecentRequests(employee: Employee): Promise<MyRequestStatus[]> {\n    const { data } = await this.supabase\n      .from('purchase_requests')\n      .select(`\n        *,\n        vendors (vendor_name),\n        purchase_request_items (id)\n      `)\n      .eq('requester_name', employee.name)\n      // 승인이 완료되지 않은 항목만 (승인 진행 중인 것들)\n      .or('middle_manager_status.eq.pending,final_manager_status.eq.pending')\n      .order('created_at', { ascending: false })\n      .limit(5)\n\n    return (data || []).map(item => ({\n      ...item,\n      vendor_name: item.vendors?.vendor_name,\n      total_items: item.purchase_request_items?.length || 0,\n      progress_percentage: this.calculateProgress(item),\n      current_step: this.getCurrentStep(item),\n      next_action: this.getNextAction(item),\n      estimated_completion: this.estimateCompletion(item)\n    })) as MyRequestStatus[]\n  }\n\n  // 승인 대기 항목 (전체 조회) - 발주 리스트와 동일한 방식\n  async getPendingApprovals(employee: Employee) {\n    const roles = this.parseRoles(employee.purchase_role)\n\n    // 먼저 모든 발주요청을 가져옴 (발주 리스트와 동일)\n    // 스키마에 맞춰 item 단가/금액 컬럼 수정 (unit_price_value, amount_value)\n    let allRequests: any[] | null = null\n    let baseError: any = null\n\n    const firstTry = await this.supabase\n      .from('purchase_requests')\n      .select(`\n        *,\n        vendors (vendor_name),\n        purchase_request_items (item_name, quantity, unit_price_value, amount_value)\n      `)\n      .order('request_date', { ascending: false })\n      .limit(1000)\n\n    if (firstTry.error) {\n      // 관계 조회 실패 시 최소 컬럼으로 재시도하여 리스트 자체는 표시되도록 함\n      baseError = firstTry.error\n      const fallback = await this.supabase\n        .from('purchase_requests')\n        .select('*')\n        .order('request_date', { ascending: false })\n        .limit(1000)\n      if (fallback.error) {\n        console.error('Error fetching purchase requests (fallback failed):', fallback.error)\n        return []\n      }\n      allRequests = fallback.data || []\n    } else {\n      allRequests = firstTry.data || []\n    }\n\n    // 클라이언트 사이드에서 역할별 필터링\n    let filteredData = allRequests || []\n\n    // 역할별 필터링 로직 - 실제 \"내가 승인해야 할\" 항목만\n    // pending, 대기, 빈문자열, null 모두 대기로 처리\n    const isPending = (status: any) => (\n      status === 'pending' || status === '대기' || status === '' || status === null || status === undefined\n    )\n\n    if (roles.includes('app_admin')) {\n      // app_admin은 중간/최종 승인 대기를 모두 본다 (구매 대기는 제외)\n      filteredData = filteredData.filter(item => (\n        isPending(item.middle_manager_status) ||\n        (item.middle_manager_status === 'approved' && isPending(item.final_manager_status))\n      ))\n    } else if (roles.includes('middle_manager') && !roles.some(r => ['final_approver','ceo','app_admin'].includes(r))) {\n      // 중간 승인 대기 항목만\n      filteredData = filteredData.filter(item => isPending(item.middle_manager_status))\n    } else if (roles.some(r => ['final_approver','ceo','app_admin'].includes(r))) {\n      // 최종 승인 대기 (중간 승인 완료)\n      filteredData = filteredData.filter(item => \n        item.middle_manager_status === 'approved' && isPending(item.final_manager_status)\n      )\n    } else if (roles.includes('lead_buyer')) {\n      // 구매 책임자는 승인 대상이 아님 → 이 리스트에서는 제외\n      filteredData = []\n    } else {\n      return []\n    }\n\n    // 총 금액 계산 추가 (amount_value가 우선, 없으면 quantity*unit_price_value 사용)\n    return filteredData.map(item => ({\n      ...item,\n      vendor_name: item.vendors?.vendor_name,\n      purchase_request_items: item.purchase_request_items || item.items || [],\n      total_amount: (item.purchase_request_items || item.items || []).reduce((sum: number, i: any) => {\n        const amount = Number(i?.amount_value) || (Number(i?.quantity) || 0) * (Number(i?.unit_price_value) || 0)\n        return sum + amount\n      }, 0)\n    }))\n  }\n\n  // 빠른 액션 버튼 데이터\n  async getQuickActions(employee: Employee): Promise<QuickAction[]> {\n    const roles = this.parseRoles(employee.purchase_role)\n\n    const actions: QuickAction[] = []\n\n    // 승인 권한이 있는 경우\n    if (roles.includes('app_admin') || roles.includes('middle_manager') || roles.includes('final_approver') || roles.includes('ceo')) {\n      const pendingCount = await this.getPendingCount(employee, roles)\n      if (pendingCount > 0) {\n        actions.push({\n          id: 'approve',\n          type: 'approve',\n          label: '승인 대기',\n          description: `${pendingCount}건의 승인 대기 중`,\n          count: pendingCount,\n          color: 'red'\n        })\n      }\n    }\n\n    // 구매 권한이 있는 경우\n    if (roles.includes('lead_buyer')) {\n      const { count: purchaseCount } = await this.supabase\n        .from('purchase_requests')\n        .select('id', { count: 'exact', head: true })\n        .eq('final_manager_status', 'approved')\n        .eq('purchase_status', 'pending')\n\n      if (purchaseCount && purchaseCount > 0) {\n        actions.push({\n          id: 'purchase',\n          type: 'purchase',\n          label: '구매 처리',\n          description: `${purchaseCount}건의 구매 대기 중`,\n          count: purchaseCount,\n          color: 'yellow'\n        })\n      }\n    }\n\n    return actions\n  }\n\n  // 오늘 요약 정보\n  async getTodaySummary(employee: Employee) {\n    const today = new Date().toISOString().split('T')[0]\n    const tomorrow = new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString().split('T')[0]\n\n    const [approvedResult, requestedResult, receivedResult] = await Promise.all([\n      // 오늘 내가 승인한 건수\n      this.supabase\n        .from('purchase_requests')\n        .select('id', { count: 'exact', head: true })\n        .gte('updated_at', today)\n        .lt('updated_at', tomorrow)\n        .or('middle_manager_status.eq.approved,final_manager_status.eq.approved'),\n\n      // 오늘 내가 요청한 건수\n      this.supabase\n        .from('purchase_requests')\n        .select('id', { count: 'exact', head: true })\n        .eq('requester_name', employee.name)\n        .gte('created_at', today)\n        .lt('created_at', tomorrow),\n\n      // 오늘 입고 처리한 건수\n      this.supabase\n        .from('purchase_requests')\n        .select('id', { count: 'exact', head: true })\n        .eq('is_received', true)\n        .gte('received_at', today)\n        .lt('received_at', tomorrow)\n    ])\n\n    return {\n      approved: approvedResult.count || 0,\n      requested: requestedResult.count || 0,\n      received: receivedResult.count || 0\n    }\n  }\n\n  // 내 구매/입고 상태 확인\n  async getMyPurchaseStatus(employee: Employee) {\n    const sevenDaysAgo = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString()\n\n    const [waitingPurchase, waitingDelivery, recentCompleted] = await Promise.all([\n      // 내가 요청했고 구매 대기중인 항목: 승인 완료 + 구매 미착수(또는 대기)\n      this.supabase\n        .from('purchase_requests')\n        .select(`\n          *,\n          vendors (vendor_name),\n          purchase_request_items (item_name, quantity)\n        `)\n        .eq('requester_name', employee.name)\n        .or('purchase_status.is.null,purchase_status.eq.pending,purchase_status.eq.,purchase_status.eq.대기')\n        .order('created_at', { ascending: false })\n        .limit(5),\n\n      // 내가 요청했고 입고 대기중인 항목\n      this.supabase\n        .from('purchase_requests')\n        .select(`\n          *,\n          vendors (vendor_name),\n          purchase_request_items (item_name, quantity)\n        `)\n        .eq('requester_name', employee.name)\n        .eq('is_payment_completed', true)\n        .or('is_received.is.null,is_received.eq.false')\n        .order('created_at', { ascending: false })\n        .limit(5),\n\n      // 최근 7일간 완료된 내 요청\n      this.supabase\n        .from('purchase_requests')\n        .select(`\n          *,\n          vendors (vendor_name),\n          purchase_request_items (item_name, quantity)\n        `)\n        .eq('requester_name', employee.name)\n        .eq('is_received', true)\n        .gte('received_at', sevenDaysAgo)\n        .order('received_at', { ascending: false })\n        .limit(5)\n    ])\n\n    // 선진행은 최종승인 없어도 포함, 일반은 최종승인된 것만 포함\n    const waitingPurchaseRows = (waitingPurchase.data || []).filter((item: any) => {\n      const isAdvance = (item.progress_type || '').includes('선진행')\n      return isAdvance || item.final_manager_status === 'approved'\n    })\n\n    return {\n      waitingPurchase: waitingPurchaseRows,\n      waitingDelivery: waitingDelivery.data || [],\n      recentCompleted: recentCompleted.data || []\n    }\n  }\n\n  // 원클릭 승인 API\n  async quickApprove(requestId: string, employee: Employee): Promise<{success: boolean, error?: string}> {\n    try {\n      const roles = this.parseRoles(employee.purchase_role)\n\n      // 먼저 현재 요청의 상태를 확인\n      const { data: request } = await this.supabase\n        .from('purchase_requests')\n        .select('middle_manager_status, final_manager_status')\n        .eq('id', requestId)\n        .single()\n\n      if (!request) {\n        return { success: false, error: '요청을 찾을 수 없습니다.' }\n      }\n\n      let updateData: any = {}\n\n      // pending, 대기, null, 빈 문자열 모두 대기 상태로 간주\n      const isPending = (status: any) => (\n        status === 'pending' || status === '대기' || status === '' || status === null || status === undefined\n      )\n\n      // app_admin은 현재 필요한 승인 단계를 처리\n      if (roles.includes('app_admin')) {\n        if (isPending(request.middle_manager_status)) {\n          updateData = {\n            middle_manager_status: 'approved',\n            middle_manager_approved_at: new Date().toISOString(),\n            middle_manager_id: employee.id\n          }\n        } else if (request.middle_manager_status === 'approved' && isPending(request.final_manager_status)) {\n          updateData = {\n            final_manager_status: 'approved',\n            final_manager_approved_at: new Date().toISOString(),\n            final_manager_id: employee.id\n          }\n        }\n      } else if (roles.includes('middle_manager')) {\n        if (isPending(request.middle_manager_status)) {\n          updateData = {\n            middle_manager_status: 'approved',\n            middle_manager_approved_at: new Date().toISOString(),\n            middle_manager_id: employee.id\n          }\n        }\n      } else if (roles.includes('final_approver') || roles.includes('ceo')) {\n        if (request.middle_manager_status === 'approved' && isPending(request.final_manager_status)) {\n          updateData = {\n            final_manager_status: 'approved',\n            final_manager_approved_at: new Date().toISOString(),\n            final_manager_id: employee.id\n          }\n        }\n      }\n\n      // updateData가 비어있으면 승인할 단계가 없음\n      if (Object.keys(updateData).length === 0) {\n        console.log('No approval needed for request:', requestId, request)\n        return { success: false, error: '승인할 수 있는 상태가 아닙니다.' }\n      }\n\n      console.log('Approving request:', requestId, 'with data:', updateData)\n\n      const { error } = await this.supabase\n        .from('purchase_requests')\n        .update(updateData)\n        .eq('id', requestId)\n\n      if (error) {\n        console.error('Approval error:', error)\n        throw error\n      }\n\n      return { success: true }\n    } catch (error) {\n      return { success: false, error: (error as Error).message }\n    }\n  }\n\n  // Helper methods\n  private async getPendingCount(employee: Employee, roles: string[]): Promise<number> {\n    // 공통: '대기', null, 빈 문자열도 대기 상태로 간주\n    const pendingClause = (col: string) => (\n      `${col}.in.(pending,대기),${col}.is.null,${col}.eq.`\n    )\n\n    // 역할별 카운트 쿼리 구성\n    if (roles.includes('app_admin')) {\n      // 1) 중간 승인 대기 + 2) 최종 승인 대기(중간 승인 완료) + 3) 구매 대기(최종 승인 완료)\n      const [mid, fin, pur] = await Promise.all([\n        this.supabase\n          .from('purchase_requests')\n          .select('id', { count: 'exact', head: true })\n          .or(pendingClause('middle_manager_status')),\n        this.supabase\n          .from('purchase_requests')\n          .select('id', { count: 'exact', head: true })\n          .eq('middle_manager_status', 'approved')\n          .or(pendingClause('final_manager_status')),\n        this.supabase\n          .from('purchase_requests')\n          .select('id', { count: 'exact', head: true })\n          .eq('final_manager_status', 'approved')\n          .or(pendingClause('purchase_status'))\n      ])\n\n      const total = (mid.count || 0) + (fin.count || 0) + (pur.count || 0)\n      console.log('Pending count (admin):', total)\n      return total\n    }\n\n    if (roles.includes('middle_manager')) {\n      const { count, error } = await this.supabase\n        .from('purchase_requests')\n        .select('id', { count: 'exact', head: true })\n        .or(pendingClause('middle_manager_status'))\n\n      if (error) {\n        console.error('Error counting pending (middle_manager):', error)\n        return 0\n      }\n      console.log('Pending count (middle_manager):', count)\n      return count || 0\n    }\n\n    if (roles.includes('final_approver') || roles.includes('ceo')) {\n      const { count, error } = await this.supabase\n        .from('purchase_requests')\n        .select('id', { count: 'exact', head: true })\n        .eq('middle_manager_status', 'approved')\n        .or(pendingClause('final_manager_status'))\n\n      if (error) {\n        console.error('Error counting pending (final_approver/ceo):', error)\n        return 0\n      }\n      console.log('Pending count (final_approver/ceo):', count)\n      return count || 0\n    }\n\n    if (roles.includes('lead_buyer')) {\n      const { count, error } = await this.supabase\n        .from('purchase_requests')\n        .select('id', { count: 'exact', head: true })\n        .eq('final_manager_status', 'approved')\n        .or(pendingClause('purchase_status'))\n\n      if (error) {\n        console.error('Error counting pending (lead_buyer):', error)\n        return 0\n      }\n      console.log('Pending count (lead_buyer):', count)\n      return count || 0\n    }\n\n    return 0\n  }\n\n  private async getUrgentCount(employee: Employee, roles: string[]): Promise<number> {\n    // 역할이 없으면 긴급 요청 카운트도 0\n    if (roles.length === 0) {\n      return 0\n    }\n\n    const threeDaysAgo = new Date(Date.now() - 3 * 24 * 60 * 60 * 1000).toISOString()\n    \n    let query = this.supabase\n      .from('purchase_requests')\n      .select('id', { count: 'exact', head: true })\n      .lt('created_at', threeDaysAgo)\n\n    if (roles.includes('app_admin')) {\n      query = query.or('middle_manager_status.eq.pending,final_manager_status.eq.pending,purchase_status.eq.pending')\n    } else if (roles.includes('middle_manager')) {\n      query = query.eq('middle_manager_status', 'pending')\n    } else if (roles.includes('final_approver') || roles.includes('ceo')) {\n      query = query\n        .eq('middle_manager_status', 'approved')\n        .eq('final_manager_status', 'pending')\n    } else if (roles.includes('lead_buyer')) {\n      query = query\n        .eq('final_manager_status', 'approved')\n        .eq('purchase_status', 'pending')\n    } else {\n      return 0\n    }\n\n    const { count } = await query\n    return count || 0\n  }\n\n  private async getTodayActionsCount(employee: Employee, today: string): Promise<number> {\n    const tomorrow = new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString().split('T')[0]\n    \n    const { count } = await this.supabase\n      .from('purchase_requests')\n      .select('id', { count: 'exact', head: true })\n      .gte('updated_at', today)\n      .lt('updated_at', tomorrow)\n      .or(`middle_manager_id.eq.${employee.id},final_manager_id.eq.${employee.id}`)\n\n    return count || 0\n  }\n\n  private calculatePriority(request: any): 'high' | 'medium' | 'low' {\n    const daysPending = Math.floor((Date.now() - new Date(request.created_at).getTime()) / (1000 * 60 * 60 * 24))\n    \n    if (daysPending >= 7) return 'high'\n    if (daysPending >= 5) return 'medium'\n    return 'low'\n  }\n\n  private getUrgentReason(request: any, roles: string[]): 'overdue_approval' | 'delivery_delay' | 'payment_pending' {\n    if (roles.includes('middle_manager') && request.middle_manager_status === 'pending') {\n      return 'overdue_approval'\n    }\n    if ((roles.includes('final_approver') || roles.includes('ceo')) && request.final_manager_status === 'pending') {\n      return 'overdue_approval'\n    }\n    if (!request.is_received) {\n      return 'delivery_delay'\n    }\n    return 'payment_pending'\n  }\n\n  private calculateProgress(request: any): number {\n    let progress = 0\n    \n    if (request.middle_manager_status === 'approved') progress += 25\n    if (request.final_manager_status === 'approved') progress += 25\n    if (request.is_payment_completed) progress += 25\n    if (request.is_received) progress += 25\n    \n    return progress\n  }\n\n  private getCurrentStep(request: any): 'approval' | 'purchase' | 'delivery' | 'payment' | 'completed' {\n    if (request.is_received) return 'completed'\n    if (request.is_payment_completed) return 'delivery'\n    if (request.final_manager_status === 'approved') return 'purchase'\n    return 'approval'\n  }\n\n  private getNextAction(request: any): string {\n    if (request.middle_manager_status === 'pending') return '중간 승인 대기 중'\n    if (request.final_manager_status === 'pending') return '최종 승인 대기 중'\n    if (!request.is_payment_completed) return '구매 처리 대기 중'\n    if (!request.is_received) return '입고 대기 중'\n    return '완료'\n  }\n\n  private estimateCompletion(request: any): string {\n    const created = new Date(request.created_at)\n    const today = new Date()\n    const daysPassed = Math.floor((today.getTime() - created.getTime()) / (1000 * 60 * 60 * 24))\n    \n    // 평균 처리 시간을 기반으로 예상 완료일 계산\n    let estimatedDays = 7 // 기본 7일\n    if (request.progress_type === '긴급') estimatedDays = 3\n    \n    const estimatedCompletion = new Date(created.getTime() + estimatedDays * 24 * 60 * 60 * 1000)\n    return estimatedCompletion.toLocaleDateString('ko-KR')\n  }\n}\n\nexport const dashboardService = new DashboardService()","\nimport { useState, useEffect } from 'react'\nimport { createClient } from '@/lib/supabase/client'\nimport { dashboardService } from '@/services/dashboardService'\nimport { Button } from '@/components/ui/button'\nimport { Badge } from '@/components/ui/badge'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\nimport { AlertTriangle, Clock, CheckCircle, TrendingUp, Zap, Calendar, ArrowRight, Eye, ThumbsUp, X, Package, Truck, ShoppingCart } from 'lucide-react'\nimport { toast } from 'sonner'\nimport type { DashboardData, UrgentRequest, MyRequestStatus } from '@/types/purchase'\nimport { useNavigate } from 'react-router-dom'\n\nexport default function DashboardMain() {\n  const [data, setData] = useState<DashboardData | null>(null)\n  const [loading, setLoading] = useState(true)\n  const [actionLoading, setActionLoading] = useState<string | null>(null)\n  const navigate = useNavigate()\n\n  useEffect(() => {\n    loadDashboardData()\n  }, [])\n\n  const loadDashboardData = async () => {\n    try {\n      setLoading(true)\n      const supabase = createClient()\n      \n      const { data: { user } } = await supabase.auth.getUser()\n      if (!user) return\n\n      const { data: employee } = await supabase\n        .from('employees')\n        .select('*')\n        .eq('email', user.email)\n        .single()\n\n      if (!employee) return\n\n      const dashboardData = await dashboardService.getDashboardData(employee)\n      console.log('=== Dashboard Debug ===')\n      console.log('Employee:', employee)\n      console.log('Employee purchase_role:', employee.purchase_role)\n      console.log('Dashboard Data:', dashboardData)\n      console.log('Pending Approvals:', dashboardData.pendingApprovals)\n      console.log('Pending Count:', dashboardData.pendingApprovals?.length || 0)\n      console.log('===================')\n      setData(dashboardData)\n    } catch (error) {\n      console.error('Dashboard load error:', error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const handleQuickApprove = async (requestId: string) => {\n    if (!data?.employee) return\n\n    setActionLoading(requestId)\n    try {\n      const result = await dashboardService.quickApprove(requestId, data.employee)\n      \n      if (result.success) {\n        toast.success('승인이 완료되었습니다.')\n        loadDashboardData() // 데이터 새로고침\n      } else {\n        toast.error(result.error || '승인 처리 중 오류가 발생했습니다.')\n      }\n    } catch (error) {\n      toast.error('승인 처리 중 오류가 발생했습니다.')\n    } finally {\n      setActionLoading(null)\n    }\n  }\n\n  const getPriorityColor = (priority: 'high' | 'medium' | 'low') => {\n    switch (priority) {\n      case 'high': return 'bg-red-100 text-red-800 border-red-200'\n      case 'medium': return 'bg-yellow-100 text-yellow-800 border-yellow-200'\n      case 'low': return 'bg-green-100 text-green-800 border-green-200'\n      default: return 'bg-gray-100 text-gray-800 border-gray-200'\n    }\n  }\n\n  const getStepColor = (step: string) => {\n    switch (step) {\n      case 'approval': return 'bg-yellow-100 text-yellow-800'\n      case 'purchase': return 'bg-blue-100 text-blue-800'\n      case 'delivery': return 'bg-purple-100 text-purple-800'\n      case 'completed': return 'bg-green-100 text-green-800'\n      default: return 'bg-gray-100 text-gray-800'\n    }\n  }\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-screen bg-gray-50\">\n        <div className=\"text-center\">\n          <div className=\"w-12 h-12 border-3 border-hansl-500 border-t-transparent rounded-full animate-spin mx-auto\" />\n          <p className=\"mt-4 text-sm text-gray-600\">대시보드를 불러오고 있습니다...</p>\n        </div>\n      </div>\n    )\n  }\n\n  if (!data?.employee) {\n    return (\n      <div className=\"flex items-center justify-center h-screen bg-gray-50\">\n        <div className=\"text-center bg-white p-8 rounded-lg border border-gray-200\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">사용자 정보를 찾을 수 없습니다</h3>\n          <p className=\"text-sm text-gray-600\">로그인을 다시 시도해주세요.</p>\n        </div>\n      </div>\n    )\n  }\n\n  // 권한 파싱 및 표시 여부 결정\n  const roles = Array.isArray(data.employee.purchase_role)\n    ? (data.employee.purchase_role as any[]).map((r: any) => String(r).trim())\n    : (data.employee.purchase_role\n        ? String(data.employee.purchase_role)\n            .split(',')\n            .map((r: string) => r.trim())\n            .filter((r: string) => r.length > 0)\n        : [])\n\n  const canSeeApprovalBox = roles.some((r: string) => ['middle_manager', 'final_approver', 'app_admin'].includes(r))\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <div className=\"w-full\">\n        {/* 헤더 */}\n        <div className=\"mb-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h1 className=\"text-2xl font-bold text-gray-900\">대시보드</h1>\n              <p className=\"text-sm text-gray-600 mt-1\">\n                {data.employee.name}님, 환영합니다. 📊\n              </p>\n            </div>\n            <div className=\"flex items-center gap-3\">\n              <Badge variant=\"outline\" className=\"text-xs\">\n                {new Date().toLocaleDateString('ko-KR', { \n                  month: 'long', \n                  day: 'numeric',\n                  weekday: 'short'\n                })}\n              </Badge>\n            </div>\n          </div>\n        </div>\n\n        {/* 긴급 알림 섹션 */}\n        {data.urgentRequests.length > 0 && (\n          <Card className=\"mb-4 border-red-200 bg-red-50\">\n            <CardHeader className=\"pb-3\">\n              <CardTitle className=\"flex items-center gap-2 text-red-800\">\n                <AlertTriangle className=\"w-5 h-5\" />\n                긴급 처리 필요 ({data.urgentRequests.length}건)\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-3\">\n              {data.urgentRequests.slice(0, 3).map((request) => (\n                <div key={request.id} className=\"bg-white rounded-lg p-4 border border-red-200\">\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex-1\">\n                      <div className=\"flex items-center gap-2 mb-2\">\n                        <Badge className={getPriorityColor(request.priority)}>\n                          {request.priority === 'high' ? '높음' : request.priority === 'medium' ? '보통' : '낮음'}\n                        </Badge>\n                        <span className=\"text-sm font-medium text-gray-900\">\n                          {request.vendor_name || '업체명 없음'}\n                        </span>\n                        <span className=\"text-xs text-gray-500\">\n                          {request.daysOverdue}일 지연\n                        </span>\n                      </div>\n                      <div className=\"text-sm text-gray-600\">\n                        발주요청번호: {request.purchase_order_number || request.id.slice(0, 8)}\n                        <span className=\"ml-2\">항목: {request.total_items}개</span>\n                      </div>\n                    </div>\n                    <div className=\"flex gap-2\">\n                      <Button\n                        size=\"sm\"\n                        variant=\"outline\"\n                        onClick={() => navigate(`/purchase?highlight=${request.id}`)}\n                      >\n                        <Eye className=\"w-4 h-4 mr-1\" />\n                        보기\n                      </Button>\n                      <Button\n                        size=\"sm\"\n                        onClick={() => handleQuickApprove(request.id)}\n                        disabled={actionLoading === request.id}\n                        className=\"bg-red-600 hover:bg-red-700\"\n                      >\n                        <ThumbsUp className=\"w-4 h-4 mr-1\" />\n                        {actionLoading === request.id ? '처리중...' : '승인'}\n                      </Button>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </CardContent>\n          </Card>\n        )}\n\n\n        {/* 메인 콘텐츠 그리드 */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-3\">\n          {/* 내 승인 진행중 */}\n          <Card>\n            <CardHeader className=\"pb-3\">\n              <div className=\"flex items-center justify-between\">\n                <CardTitle className=\"text-sm font-semibold\">{data.employee.name}님의 승인 진행중</CardTitle>\n                <Button \n                  variant=\"ghost\" \n                  size=\"sm\"\n                  onClick={() => navigate('/purchase')}\n                >\n                  전체보기 <ArrowRight className=\"w-4 h-4 ml-1\" />\n                </Button>\n              </div>\n            </CardHeader>\n            <CardContent className=\"space-y-3\">\n              {data.myRecentRequests.length === 0 ? (\n                <div className=\"text-center py-6 text-gray-500\">\n                  <Clock className=\"w-8 h-8 mx-auto mb-2 text-gray-400\" />\n                  <p className=\"text-xs\">승인 진행중 없음</p>\n                  <Button \n                    size=\"sm\" \n                    variant=\"outline\"\n                    className=\"mt-2 h-7 text-xs\"\n                    onClick={() => navigate('/purchase/new')}\n                  >\n                    새 요청\n                  </Button>\n                </div>\n              ) : (\n                data.myRecentRequests.map((request) => (\n                  <div key={request.id} className=\"border rounded-lg p-4 hover:shadow-sm transition-shadow\">\n                    <div className=\"flex items-center justify-between mb-3\">\n                      <div className=\"flex items-center gap-2\">\n                        <span className=\"font-medium text-sm\">{request.vendor_name}</span>\n                        <Badge className=\"bg-yellow-100 text-yellow-800\" variant=\"outline\">\n                          {request.middle_manager_status === 'pending' ? '중간 승인 대기' : '최종 승인 대기'}\n                        </Badge>\n                      </div>\n                      <span className=\"text-xs text-gray-500\">\n                        {new Date(request.created_at).toLocaleDateString('ko-KR')}\n                      </span>\n                    </div>\n                    \n                    <div className=\"mb-3\">\n                      <div className=\"flex justify-between text-sm mb-1\">\n                        <span className=\"text-gray-600\">승인 진행률</span>\n                        <span className=\"font-medium\">\n                          {request.middle_manager_status === 'pending' ? '25%' : '50%'}\n                        </span>\n                      </div>\n                      <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                        <div \n                          className=\"bg-yellow-500 h-2 rounded-full transition-all duration-300\"\n                          style={{ width: request.middle_manager_status === 'pending' ? '25%' : '50%' }}\n                        />\n                      </div>\n                    </div>\n                    \n                    <div className=\"flex justify-between items-center text-sm\">\n                      <span className=\"text-gray-600\">{request.next_action}</span>\n                      <Button\n                        size=\"sm\"\n                        variant=\"ghost\"\n                        onClick={() => navigate(`/purchase?highlight=${request.id}`)}\n                      >\n                        상세보기 <ArrowRight className=\"w-3 h-3 ml-1\" />\n                      </Button>\n                    </div>\n                  </div>\n                ))\n              )}\n            </CardContent>\n          </Card>\n\n          {/* 승인 대기 (승인 권한자만 표시) */}\n          {canSeeApprovalBox && (\n            <Card>\n              <CardHeader className=\"pb-3\">\n                <div className=\"flex items-center justify-between\">\n                  <CardTitle className=\"text-sm font-semibold flex items-center gap-2\">\n                    <Clock className=\"w-4 h-4 text-orange-500\" />\n                    승인 대기\n                    {data.pendingApprovals.length > 0 && (\n                      <Badge variant=\"destructive\" className=\"text-xs h-5 px-1.5\">\n                        {data.pendingApprovals.length}\n                      </Badge>\n                    )}\n                  </CardTitle>\n                  {data.pendingApprovals.length > 0 && (\n                    <Button\n                      size=\"sm\"\n                      variant=\"ghost\"\n                      onClick={() => navigate('/purchase')}\n                      className=\"text-xs\"\n                    >\n                      전체보기\n                      <ArrowRight className=\"w-3 h-3 ml-1\" />\n                    </Button>\n                  )}\n                </div>\n              </CardHeader>\n              <CardContent className=\"space-y-2\">\n                {data.pendingApprovals.length === 0 ? (\n                  <div className=\"text-center py-4 text-gray-400\">\n                    <CheckCircle className=\"w-6 h-6 mx-auto mb-1\" />\n                    <p className=\"text-xs\">대기 항목 없음</p>\n                  </div>\n                ) : (\n                  <div className=\"max-h-80 overflow-y-auto space-y-2\">\n                    {data.pendingApprovals.map((approval) => (\n                      <div key={approval.id} className=\"border rounded-lg p-3 hover:bg-gray-50 transition-colors\">\n                        <div className=\"flex items-start justify-between gap-2\">\n                          <div className=\"flex-1 min-w-0\">\n                            <div className=\"flex items-center gap-2 mb-1\">\n                              <span className=\"font-medium text-sm truncate\">\n                                {approval.requester_name}\n                              </span>\n                              <Badge \n                                variant=\"outline\" \n                                className={`text-xs h-4 px-1 ${\n                                  approval.middle_manager_status === 'approved' \n                                    ? 'bg-blue-50 text-blue-700 border-blue-200' \n                                    : 'bg-yellow-50 text-yellow-700 border-yellow-200'\n                                }`}\n                              >\n                                {approval.middle_manager_status === 'approved' ? '최종' : '1차'}\n                              </Badge>\n                            </div>\n                            <div className=\"flex items-center gap-3 text-xs text-gray-500\">\n                              <span className=\"truncate\">{approval.vendor_name || '업체 미지정'}</span>\n                              <span className=\"font-medium\">{approval.total_amount?.toLocaleString()}원</span>\n                              <span>{new Date(approval.created_at).toLocaleDateString('ko-KR', { month: 'numeric', day: 'numeric' })}</span>\n                            </div>\n                          </div>\n                          <div className=\"flex gap-1\">\n                            <Button\n                              size=\"sm\"\n                              variant=\"ghost\"\n                              onClick={() => navigate(`/purchase/requests/${approval.id}`)}\n                              className=\"h-7 w-7 p-0\"\n                            >\n                              <Eye className=\"w-3.5 h-3.5\" />\n                            </Button>\n                            <Button\n                              size=\"sm\"\n                              onClick={() => handleQuickApprove(approval.id)}\n                              disabled={actionLoading === approval.id}\n                              className=\"h-7 px-2 bg-green-600 hover:bg-green-700 text-white\"\n                            >\n                              {actionLoading === approval.id ? (\n                                <div className=\"w-3 h-3 border-2 border-white border-t-transparent rounded-full animate-spin\" />\n                              ) : (\n                                <>\n                                  <ThumbsUp className=\"w-3 h-3 mr-1\" />\n                                  승인\n                                </>\n                              )}\n                            </Button>\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          )}\n        </div>\n\n        {/* 구매/입고 추적 섹션 */}\n        <div className=\"mt-4\">\n          <h2 className=\"text-base font-semibold text-gray-900 mb-3 flex items-center gap-2\">\n            <Package className=\"w-4 h-4 text-gray-600\" />\n            {data.employee.name}님의 발주 처리 현황\n          </h2>\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 2xl:grid-cols-6 gap-3\">\n            {/* 구매 대기중 */}\n            <Card>\n              <CardHeader className=\"pb-3\">\n                <CardTitle className=\"text-sm font-semibold flex items-center gap-2\">\n                  <ShoppingCart className=\"w-4 h-4 text-yellow-600\" />\n                  구매 대기\n                  {data.myPurchaseStatus.waitingPurchase.length > 0 && (\n                    <Badge variant=\"outline\" className=\"text-xs bg-yellow-50\">\n                      {data.myPurchaseStatus.waitingPurchase.length}\n                    </Badge>\n                  )}\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-3\">\n                {data.myPurchaseStatus.waitingPurchase.length === 0 ? (\n                  <div className=\"text-center py-4 text-gray-500\">\n                    <ShoppingCart className=\"w-6 h-6 mx-auto mb-1 text-gray-400\" />\n                    <p className=\"text-xs\">구매 대기 없음</p>\n                  </div>\n                ) : (\n                  data.myPurchaseStatus.waitingPurchase.map((item) => {\n                    const items = item.purchase_request_items || []\n                    const totalAmount = items.reduce((sum: number, i: any) => {\n                      return sum + (Number(i.amount_value) || 0)\n                    }, 0)\n                    const totalQuantity = items.reduce((sum: number, i: any) => {\n                      return sum + (Number(i.quantity) || 0)\n                    }, 0)\n                    const firstItem = items[0]\n                    \n                    return (\n                      <div key={item.id} className=\"border rounded-lg p-3 hover:shadow-sm transition-shadow\">\n                        <div className=\"flex justify-between items-start mb-2\">\n                          <span className=\"font-medium text-sm truncate\">{item.vendor_name || '업체명 없음'}</span>\n                          <Badge variant=\"outline\" className=\"text-xs bg-yellow-50 text-yellow-700 shrink-0\">\n                            구매 대기\n                          </Badge>\n                        </div>\n                        <div className=\"text-xs text-gray-600 space-y-1\">\n                          {firstItem && (\n                            <>\n                              <div className=\"truncate\">품명: {firstItem.item_name || '-'}</div>\n                              <div className=\"truncate\">규격: {firstItem.specification || '-'}</div>\n                            </>\n                          )}\n                          <div>품목: {items.length}개 / 수량: {totalQuantity}</div>\n                          <div className=\"font-medium text-gray-900\">총액: {totalAmount.toLocaleString()}원</div>\n                        </div>\n                        <Button\n                          size=\"sm\"\n                          variant=\"ghost\"\n                          className=\"w-full mt-2\"\n                          onClick={() => navigate(`/purchase?highlight=${item.id}`)}\n                        >\n                          상세보기 <ArrowRight className=\"w-3 h-3 ml-1\" />\n                        </Button>\n                      </div>\n                    )\n                  })\n                )}\n              </CardContent>\n            </Card>\n\n            {/* 입고 대기중 */}\n            <Card>\n              <CardHeader className=\"pb-3\">\n                <CardTitle className=\"text-sm font-semibold flex items-center gap-2\">\n                  <Truck className=\"w-4 h-4 text-blue-600\" />\n                  입고 대기\n                  {data.myPurchaseStatus.waitingDelivery.length > 0 && (\n                    <Badge variant=\"outline\" className=\"text-xs bg-blue-50\">\n                      {data.myPurchaseStatus.waitingDelivery.length}\n                    </Badge>\n                  )}\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-3\">\n                {data.myPurchaseStatus.waitingDelivery.length === 0 ? (\n                  <div className=\"text-center py-4 text-gray-500\">\n                    <Truck className=\"w-6 h-6 mx-auto mb-1 text-gray-400\" />\n                    <p className=\"text-xs\">입고 대기 없음</p>\n                  </div>\n                ) : (\n                  data.myPurchaseStatus.waitingDelivery.map((item) => {\n                    const totalItems = item.purchase_request_items?.length || 0\n                    const receivedItems = item.purchase_request_items?.filter((i: any) => i.is_received).length || 0\n                    const partialDelivery = receivedItems > 0 && receivedItems < totalItems\n                    \n                    return (\n                      <div key={item.id} className=\"border rounded-lg p-3 hover:shadow-sm transition-shadow\">\n                        <div className=\"flex justify-between items-start mb-2\">\n                          <span className=\"font-medium text-sm truncate\">{item.vendor_name || '업체명 없음'}</span>\n                          <Badge variant=\"outline\" className={`text-xs shrink-0 ${partialDelivery ? 'bg-orange-50 text-orange-700' : 'bg-blue-50 text-blue-700'}`}>\n                            {partialDelivery ? '부분입고' : '입고 대기'}\n                          </Badge>\n                        </div>\n                        <div className=\"text-xs text-gray-600 space-y-1\">\n                          {item.purchase_request_items?.[0] && (\n                            <>\n                              <div className=\"truncate\">품명: {item.purchase_request_items[0].item_name || '-'}</div>\n                              <div className=\"truncate\">규격: {item.purchase_request_items[0].specification || '-'}</div>\n                            </>\n                          )}\n                          <div>품목: {totalItems}개 / 입고: {receivedItems}/{totalItems}</div>\n                          <div className=\"font-medium text-gray-900\">총액: {(item.purchase_request_items?.reduce((sum: number, i: any) => sum + (Number(i.amount_value) || 0), 0) || 0).toLocaleString()}원</div>\n                        </div>\n                        {partialDelivery && (\n                          <div className=\"mt-2\">\n                            <div className=\"w-full bg-gray-200 rounded-full h-1.5\">\n                              <div \n                                className=\"bg-blue-500 h-1.5 rounded-full\"\n                                style={{ width: `${(receivedItems / totalItems) * 100}%` }}\n                              />\n                            </div>\n                          </div>\n                        )}\n                        <Button\n                          size=\"sm\"\n                          variant=\"ghost\"\n                          className=\"w-full mt-2\"\n                          onClick={() => navigate(`/purchase?highlight=${item.id}`)}\n                        >\n                          상세보기 <ArrowRight className=\"w-3 h-3 ml-1\" />\n                        </Button>\n                      </div>\n                    )\n                  })\n                )}\n              </CardContent>\n            </Card>\n\n            {/* 최근 완료 */}\n            <Card>\n              <CardHeader className=\"pb-3\">\n                <CardTitle className=\"text-sm font-semibold flex items-center gap-2\">\n                  <Package className=\"w-4 h-4 text-green-600\" />\n                  최근 완료\n                  {data.myPurchaseStatus.recentCompleted.length > 0 && (\n                    <Badge variant=\"outline\" className=\"text-xs bg-green-50\">\n                      {data.myPurchaseStatus.recentCompleted.length}\n                    </Badge>\n                  )}\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-3\">\n                {data.myPurchaseStatus.recentCompleted.length === 0 ? (\n                  <div className=\"text-center py-4 text-gray-500\">\n                    <Package className=\"w-6 h-6 mx-auto mb-1 text-gray-400\" />\n                    <p className=\"text-xs\">최근 완료 없음</p>\n                  </div>\n                ) : (\n                  data.myPurchaseStatus.recentCompleted.map((item) => {\n                    const items = item.purchase_request_items || []\n                    const totalAmount = items.reduce((sum: number, i: any) => {\n                      return sum + (Number(i.amount_value) || 0)\n                    }, 0)\n                    const totalQuantity = items.reduce((sum: number, i: any) => {\n                      return sum + (Number(i.quantity) || 0)\n                    }, 0)\n                    const firstItem = items[0]\n                    \n                    return (\n                      <div key={item.id} className=\"border rounded-lg p-3 hover:shadow-sm transition-shadow bg-green-50/30\">\n                        <div className=\"flex justify-between items-start mb-2\">\n                          <span className=\"font-medium text-sm truncate\">{item.vendor_name || '업체명 없음'}</span>\n                          <Badge className=\"text-xs bg-green-100 text-green-800 shrink-0\">\n                            <CheckCircle className=\"w-3 h-3 mr-1\" />\n                            완료\n                          </Badge>\n                        </div>\n                        <div className=\"text-xs text-gray-600 space-y-1\">\n                          {firstItem && (\n                            <>\n                              <div className=\"truncate\">품명: {firstItem.item_name || '-'}</div>\n                              <div className=\"truncate\">규격: {firstItem.specification || '-'}</div>\n                            </>\n                          )}\n                          <div>품목: {items.length}개 / 수량: {totalQuantity}</div>\n                          <div className=\"font-medium text-gray-900\">총액: {totalAmount.toLocaleString()}원</div>\n                        </div>\n                        <Button\n                          size=\"sm\"\n                          variant=\"ghost\"\n                          className=\"w-full mt-2\"\n                          onClick={() => navigate(`/purchase?highlight=${item.id}`)}\n                        >\n                          상세보기 <ArrowRight className=\"w-3 h-3 ml-1\" />\n                        </Button>\n                      </div>\n                    )\n                  })\n                )}\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n\n        {/* 오늘의 요약 - 상단 통계에 통합 */}\n      </div>\n    </div>\n  )\n}"],"names":["__iconNode","ArrowRight","createLucideIcon","Clock","ThumbsUp","TriangleAlert","Truck","DashboardService","createClient","purchaseRole","roles","r","employee","stats","urgentRequests","myRecentRequests","pendingApprovals","quickActions","todaySummary","myPurchaseStatus","today","totalResult","myRequestsResult","pendingResult","completedResult","urgentResult","todayActionsResult","threeDaysAgo","query","data","item","allRequests","firstTry","fallback","filteredData","isPending","status","sum","i","amount","actions","pendingCount","purchaseCount","tomorrow","approvedResult","requestedResult","receivedResult","sevenDaysAgo","waitingPurchase","waitingDelivery","recentCompleted","requestId","request","updateData","error","pendingClause","col","mid","fin","pur","total","count","daysPending","progress","created","estimatedDays","dashboardService","DashboardMain","setData","useState","loading","setLoading","actionLoading","setActionLoading","navigate","useNavigate","useEffect","loadDashboardData","supabase","user","dashboardData","handleQuickApprove","result","toast","getPriorityColor","priority","jsxs","jsx","canSeeApprovalBox","Badge","Card","CardHeader","CardTitle","AlertTriangle","CardContent","Button","Eye","CheckCircle","approval","Fragment","Package","ShoppingCart","items","totalAmount","totalQuantity","firstItem","totalItems","receivedItems","partialDelivery"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4]}