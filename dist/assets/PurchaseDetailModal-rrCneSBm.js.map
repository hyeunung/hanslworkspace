{"version":3,"file":"PurchaseDetailModal-rrCneSBm.js","sources":["../../node_modules/lucide-react/dist/esm/icons/circle-x.js","../../node_modules/lucide-react/dist/esm/icons/package.js","../../src/components/purchase/PurchaseDetailModal.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"path\", { d: \"m15 9-6 6\", key: \"1uzhvr\" }],\n  [\"path\", { d: \"m9 9 6 6\", key: \"z0biqf\" }]\n];\nconst CircleX = createLucideIcon(\"circle-x\", __iconNode);\n\nexport { __iconNode, CircleX as default };\n//# sourceMappingURL=circle-x.js.map\n","/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M11 21.73a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73z\",\n      key: \"1a0edw\"\n    }\n  ],\n  [\"path\", { d: \"M12 22V12\", key: \"d0xqtd\" }],\n  [\"polyline\", { points: \"3.29 7 12 12 20.71 7\", key: \"ousv84\" }],\n  [\"path\", { d: \"m7.5 4.27 9 5.15\", key: \"1c824w\" }]\n];\nconst Package = createLucideIcon(\"package\", __iconNode);\n\nexport { __iconNode, Package as default };\n//# sourceMappingURL=package.js.map\n","import { useEffect, useState } from 'react'\nimport { createClient } from '@/lib/supabase/client'\nimport { PurchaseRequestWithDetails } from '@/types/purchase'\nimport { \n  Calendar, \n  User, \n  Building2, \n  Package, \n  CreditCard,\n  X,\n  FileText,\n  DollarSign,\n  Edit2,\n  Trash2,\n  Save,\n  Plus,\n  CheckCircle,\n  XCircle,\n  Check,\n  Truck\n} from 'lucide-react'\nimport { Button } from '@/components/ui/button'\nimport { Badge } from '@/components/ui/badge'\nimport { Input } from '@/components/ui/input'\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog'\nimport { toast } from 'sonner'\n\ninterface PurchaseDetailModalProps {\n  purchaseId: number | null\n  isOpen: boolean\n  onClose: () => void\n  embedded?: boolean  // Dialog 없이 내용만 렌더링\n  currentUserRoles?: string[]\n  activeTab?: string\n  onRefresh?: () => void\n  onDelete?: (purchase: PurchaseRequestWithDetails) => void\n}\n\nexport default function PurchaseDetailModal({ \n  purchaseId, \n  isOpen, \n  onClose, \n  embedded = false,\n  currentUserRoles = [],\n  activeTab,\n  onRefresh,\n  onDelete\n}: PurchaseDetailModalProps) {\n  const [loading, setLoading] = useState(false)\n  const [purchase, setPurchase] = useState<PurchaseRequestWithDetails | null>(null)\n  const [isEditing, setIsEditing] = useState(false)\n  const [editedPurchase, setEditedPurchase] = useState<PurchaseRequestWithDetails | null>(null)\n  const [editedItems, setEditedItems] = useState<any[]>([])\n  const [deletedItemIds, setDeletedItemIds] = useState<number[]>([])\n  const [userRoles, setUserRoles] = useState<string[]>([])\n  const [currentUserName, setCurrentUserName] = useState<string>('')\n  const supabase = createClient()\n  \n  // 사용자 권한 및 이름 직접 로드\n  useEffect(() => {\n    const loadUserRoles = async () => {\n      try {\n        const { data: { user } } = await supabase.auth.getUser()\n        if (user) {\n          // 먼저 ID로 시도\n          let { data: employeeData } = await supabase\n            .from('employees')\n            .select('*')\n            .eq('id', user.id)\n            .maybeSingle()\n          \n          // ID로 못 찾았으면 이메일로 시도\n          if (!employeeData && user.email) {\n            const { data: employeeByEmail } = await supabase\n              .from('employees')\n              .select('*')\n              .eq('email', user.email)\n              .maybeSingle()\n            \n            employeeData = employeeByEmail\n          }\n          \n          // 사용자 이름 저장\n          if (employeeData?.name) {\n            setCurrentUserName(employeeData.name)\n          }\n          \n          if (employeeData?.purchase_role) {\n            let roles: string[] = []\n            if (Array.isArray(employeeData.purchase_role)) {\n              roles = employeeData.purchase_role.map((r: any) => String(r).trim())\n            } else {\n              const roleString = String(employeeData.purchase_role)\n              roles = roleString\n                .split(',')\n                .map((r: string) => r.trim())\n                .filter((r: string) => r.length > 0)\n            }\n            setUserRoles(roles)\n          }\n        }\n      } catch (error) {\n      }\n    }\n    \n    if (isOpen) {\n      loadUserRoles()\n    }\n  }, [isOpen])\n  \n  // currentUserRoles가 배열이 아니면 userRoles 사용\n  const effectiveRoles = Array.isArray(currentUserRoles) && currentUserRoles.length > 0 \n    ? currentUserRoles \n    : userRoles\n  \n  // 권한 체크\n  const canEdit = effectiveRoles.includes('final_approver') || \n                  effectiveRoles.includes('app_admin') || \n                  effectiveRoles.includes('ceo')\n  \n  const canDelete = canEdit\n  \n  // 입고 권한 체크 \n  // 1. 관리자는 모든 건 입고 처리 가능\n  // 2. 일반 직원은 본인이 요청한 건만 입고 처리 가능\n  const isAdmin = effectiveRoles.includes('final_approver') || \n                  effectiveRoles.includes('app_admin') || \n                  effectiveRoles.includes('ceo')\n  const isRequester = purchase?.requester_name === currentUserName\n  const canReceiptCheck = isAdmin || isRequester\n  \n  // 디버깅용 로그\n  console.log('Receipt Check Debug:', {\n    activeTab,\n    canReceiptCheck,\n    isAdmin,\n    isRequester,\n    currentUserName,\n    requesterName: purchase?.requester_name,\n    effectiveRoles\n  })\n  \n  // 승인 권한 체크\n  const canApproveMiddle = effectiveRoles.includes('middle_manager') || \n                           effectiveRoles.includes('app_admin') || \n                           effectiveRoles.includes('ceo')\n  \n   const canApproveFinal = effectiveRoles.includes('final_approver') || \n                           effectiveRoles.includes('app_admin') || \n                           effectiveRoles.includes('ceo')\n   \n   // 디버깅 로그\n   console.log('=== PurchaseDetailModal Debug ===')\n   console.log('Current User Roles (prop):', currentUserRoles)\n   console.log('User Roles (direct load):', userRoles)\n   console.log('Effective Roles:', effectiveRoles)\n   console.log('Can Approve Middle:', canApproveMiddle)\n   console.log('Can Approve Final:', canApproveFinal)\n   console.log('Is Editing:', isEditing)\n   console.log('Middle Manager Status:', purchase?.middle_manager_status)\n   console.log('Final Manager Status:', purchase?.final_manager_status)\n   console.log('================================')\n \n  useEffect(() => {\n    if (purchaseId && isOpen) {\n      loadPurchaseDetail(purchaseId.toString())\n    }\n  }, [purchaseId, isOpen])\n\n  const loadPurchaseDetail = async (id: string) => {\n    try {\n      setLoading(true)\n      const supabase = createClient()\n      \n      const { data, error } = await supabase\n        .from('purchase_requests')\n        .select(`\n          *,\n          vendors(id, vendor_name),\n          purchase_request_items(*)\n        `)\n        .eq('id', id)\n        .single()\n\n      if (error) throw error\n\n      if (data) {\n        const purchaseData = {\n          ...data,\n          items: data.purchase_request_items || [],\n          vendor: data.vendors || { id: 0, vendor_name: '알 수 없음' },\n          vendor_contacts: []\n        } as PurchaseRequestWithDetails\n        setPurchase(purchaseData)\n        setEditedPurchase(purchaseData)\n        setEditedItems(purchaseData.items || [])\n      }\n    } catch (error) {\n      toast.error('발주 상세 정보를 불러오는데 실패했습니다.')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const getStatusBadge = () => {\n    if (!purchase) return null\n    \n    if (purchase.is_received) {\n      return <Badge className=\"bg-green-100 text-green-800\">입고완료</Badge>\n    } else if (purchase.middle_manager_status === 'approved' && purchase.final_manager_status === 'approved') {\n      return <Badge className=\"bg-hansl-100 text-hansl-800\">구매진행</Badge>\n    } else if (purchase.middle_manager_status === 'rejected' || purchase.final_manager_status === 'rejected') {\n      return <Badge className=\"bg-red-100 text-red-800\">반려</Badge>\n    } else {\n      return <Badge className=\"bg-yellow-100 text-yellow-800\">승인대기</Badge>\n    }\n  }\n\n  const formatDate = (date: string | null | undefined) => {\n    if (!date) return '-'\n    return new Date(date).toLocaleDateString('ko-KR')\n  }\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('ko-KR').format(amount)\n  }\n\n  const handleSave = async () => {\n    if (!purchase || !editedPurchase) return\n    \n    try {\n      // 발주 기본 정보 업데이트\n      const totalAmount = editedItems.reduce((sum, item) => sum + (item.amount_value || 0), 0)\n      \n      const { error: updateError } = await supabase\n        .from('purchase_requests')\n        .update({\n          purchase_order_number: editedPurchase.purchase_order_number,\n          requester_name: editedPurchase.requester_name,\n          vendor_name: editedPurchase.vendor?.vendor_name || editedPurchase.vendor_name,\n          delivery_request_date: editedPurchase.delivery_request_date,\n          request_date: editedPurchase.request_date,\n          payment_category: editedPurchase.payment_category,\n          project_vendor: editedPurchase.project_vendor,\n          total_amount: totalAmount,\n          updated_at: new Date().toISOString()\n        })\n        .eq('id', purchase.id)\n\n      if (updateError) throw updateError\n\n      // 삭제된 항목들 처리\n      if (deletedItemIds.length > 0) {\n        const { error: deleteError } = await supabase\n          .from('purchase_request_items')\n          .delete()\n          .in('id', deletedItemIds)\n\n        if (deleteError) throw deleteError\n      }\n\n      // 각 아이템 업데이트 또는 생성\n      for (const item of editedItems) {\n        if (item.id) {\n          // 기존 항목 업데이트\n          const { error } = await supabase\n            .from('purchase_request_items')\n            .update({\n              item_name: item.item_name,\n              specification: item.specification,\n              quantity: item.quantity,\n              unit_price_value: item.unit_price_value,\n              amount_value: item.amount_value,\n              remark: item.remark,\n              updated_at: new Date().toISOString()\n            })\n            .eq('id', item.id)\n\n          if (error) throw error\n        } else {\n          // 새 항목 생성\n          const { error } = await supabase\n            .from('purchase_request_items')\n            .insert({\n              purchase_request_id: purchase.id,\n              item_name: item.item_name,\n              specification: item.specification,\n              quantity: item.quantity,\n              unit_price_value: item.unit_price_value,\n              amount_value: item.amount_value,\n              remark: item.remark,\n              line_number: item.line_number || editedItems.indexOf(item) + 1,\n              created_at: new Date().toISOString()\n            })\n\n          if (error) throw error\n        }\n      }\n\n      toast.success('발주 내역이 수정되었습니다.')\n      setIsEditing(false)\n      setDeletedItemIds([])\n      onRefresh?.()\n      \n      // 수정된 데이터 다시 로드\n      await loadPurchaseDetail(purchaseId?.toString() || '')\n    } catch (error) {\n      toast.error('저장 중 오류가 발생했습니다.')\n    }\n  }\n\n  const handleItemChange = (index: number, field: string, value: any) => {\n    const newItems = [...editedItems]\n    \n    if (field === 'amount_value') {\n      // 금액을 직접 수정한 경우\n      newItems[index] = {\n        ...newItems[index],\n        amount_value: value\n      }\n    } else if (field === 'quantity' || field === 'unit_price_value') {\n      // 수량이나 단가를 수정한 경우 금액 자동 계산\n      const quantity = field === 'quantity' ? value : newItems[index].quantity\n      const unitPrice = field === 'unit_price_value' ? value : newItems[index].unit_price_value\n      newItems[index] = {\n        ...newItems[index],\n        [field]: value,\n        amount_value: quantity * unitPrice\n      }\n    } else {\n      // 기타 필드 수정\n      newItems[index] = {\n        ...newItems[index],\n        [field]: value\n      }\n    }\n    \n    setEditedItems(newItems)\n  }\n\n  const handleAddItem = () => {\n    const newItem = {\n      item_name: '',\n      specification: '',\n      quantity: 1,\n      unit_price_value: 0,\n      amount_value: 0,\n      remark: '',\n      line_number: editedItems.length + 1\n    }\n    setEditedItems([...editedItems, newItem])\n  }\n\n  const handleRemoveItem = (index: number) => {\n    const item = editedItems[index]\n    if (item.id) {\n      setDeletedItemIds([...deletedItemIds, item.id])\n    }\n    const newItems = editedItems.filter((_, i) => i !== index)\n    setEditedItems(newItems)\n  }\n\n  // 입고 처리 함수\n  const handleReceiptToggle = async (itemId: number, isReceived: boolean) => {\n    if (!canReceiptCheck) {\n      toast.error('입고 처리 권한이 없습니다.')\n      return\n    }\n\n    try {\n      // purchase_request_items 테이블 업데이트 (필요한 컬럼만)\n      const { error } = await supabase\n        .from('purchase_request_items')\n        .update({\n          is_received: isReceived,\n          received_at: isReceived ? new Date().toISOString() : null\n        })\n        .eq('id', itemId)\n\n      if (error) throw error\n\n      toast.success(isReceived ? '입고 처리되었습니다.' : '입고가 취소되었습니다.')\n      \n      // 데이터 새로고침\n      if (purchaseId) {\n        await loadPurchaseDetail(purchaseId.toString())\n      }\n      \n      // 부모 컴포넌트 새로고침\n      onRefresh?.()\n    } catch (error) {\n      toast.error('입고 처리 중 오류가 발생했습니다.')\n    }\n  }\n\n  // 승인 처리\n  const handleApprove = async (type: 'middle' | 'final') => {\n    if (!purchase) return\n    \n    try {\n      const updateData = type === 'middle' \n        ? { \n            middle_manager_status: 'approved'\n          }\n        : { \n            final_manager_status: 'approved'\n          }\n      \n      const { error } = await supabase\n        .from('purchase_requests')\n        .update(updateData)\n        .eq('id', purchase.id)\n      \n      if (error) {\n        throw error\n      }\n      \n      toast.success(`${type === 'middle' ? '중간' : '최종'} 승인이 완료되었습니다.`)\n      onRefresh?.()\n      await loadPurchaseDetail(purchaseId?.toString() || '')\n    } catch (error) {\n      toast.error('승인 처리 중 오류가 발생했습니다.')\n    }\n  }\n  \n  // 반려 처리\n  const handleReject = async (type: 'middle' | 'final') => {\n    if (!purchase) return\n    \n    const reason = window.prompt('반려 사유를 입력해주세요:')\n    if (!reason) return\n    \n    try {\n      const updateData = type === 'middle'\n        ? {\n            middle_manager_status: 'rejected'\n          }\n        : {\n            final_manager_status: 'rejected'\n          }\n      \n      const { error } = await supabase\n        .from('purchase_requests')\n        .update(updateData)\n        .eq('id', purchase.id)\n      \n      if (error) {\n        throw error\n      }\n      \n      toast.success(`${type === 'middle' ? '중간' : '최종'} 반려가 완료되었습니다.`)\n      onRefresh?.()\n      await loadPurchaseDetail(purchaseId?.toString() || '')\n    } catch (error) {\n      toast.error('반려 처리 중 오류가 발생했습니다.')\n    }\n  }\n\n  const content = (\n    <>\n      {loading ? (\n        <div className=\"flex items-center justify-center py-12\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-hansl-600\"></div>\n        </div>\n      ) : purchase ? (\n        <div className=\"space-y-6\">\n            {/* 기본 정보 */}\n            <div className=\"bg-gray-50 rounded-lg p-6\">\n              <h3 className=\"font-semibold mb-4 flex items-center text-gray-900\">\n                <FileText className=\"w-5 h-5 mr-2 text-gray-700\" />\n                기본 정보\n              </h3>\n              <div className=\"grid grid-cols-2 gap-6\">\n                <div>\n                  <p className=\"text-sm text-gray-500 mb-1\">요청자</p>\n                  <p className=\"font-medium text-gray-900\">{purchase.requester_name}</p>\n                </div>\n                <div>\n                  <p className=\"text-sm text-gray-500 mb-1\">요청일</p>\n                  <p className=\"font-medium text-gray-900\">{formatDate(purchase.request_date)}</p>\n                </div>\n                <div>\n                  <p className=\"text-sm text-gray-500 mb-1\">입고요청일</p>\n                  <p className=\"font-medium text-gray-900\">{formatDate(purchase.delivery_request_date)}</p>\n                </div>\n                <div>\n                  <p className=\"text-sm text-gray-500 mb-1\">결제유형</p>\n                  <p className=\"font-medium text-gray-900\">{purchase.payment_category || '-'}</p>\n                </div>\n              </div>\n            </div>\n\n            {/* 업체 정보 */}\n            <div className=\"bg-gray-50 rounded-lg p-6\">\n              <h3 className=\"font-semibold mb-4 flex items-center text-gray-900\">\n                <Building2 className=\"w-5 h-5 mr-2 text-gray-700\" />\n                업체 정보\n              </h3>\n              <div className=\"grid grid-cols-2 gap-6\">\n                <div>\n                  <p className=\"text-sm text-gray-500 mb-1\">업체명</p>\n                  <p className=\"font-medium text-gray-900\">{purchase.vendor?.vendor_name || '-'}</p>\n                </div>\n                <div>\n                  <p className=\"text-sm text-gray-500 mb-1\">프로젝트 업체</p>\n                  <p className=\"font-medium text-gray-900\">{purchase.project_vendor || '-'}</p>\n                </div>\n              </div>\n            </div>\n\n            {/* 품목 리스트 */}\n            <div className=\"bg-gray-50 rounded-lg p-6\">\n              <h3 className=\"font-semibold mb-4 flex items-center text-gray-900\">\n                <Package className=\"w-5 h-5 mr-2 text-gray-700\" />\n                품목 리스트\n              </h3>\n              <div className=\"overflow-x-auto\">\n                <table className=\"min-w-full bg-white rounded-lg overflow-hidden shadow-sm\">\n                  <thead className=\"bg-gray-100\">\n                    <tr>\n                      {canReceiptCheck && activeTab === 'receipt' && (\n                        <th className=\"px-4 py-3 text-center text-xs font-semibold text-gray-600 uppercase tracking-wider\">입고</th>\n                      )}\n                      <th className=\"px-4 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">품명</th>\n                      <th className=\"px-4 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">규격</th>\n                      <th className=\"px-4 py-3 text-center text-xs font-semibold text-gray-600 uppercase tracking-wider\">수량</th>\n                      <th className=\"px-4 py-3 text-right text-xs font-semibold text-gray-600 uppercase tracking-wider\">단가</th>\n                      <th className=\"px-4 py-3 text-right text-xs font-semibold text-gray-600 uppercase tracking-wider\">금액</th>\n                      <th className=\"px-4 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">비고</th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\n                    {(isEditing ? editedItems : purchase.items)?.map((item, index) => (\n                      <tr key={index} className=\"hover:bg-gray-50 transition-colors\">\n                        {canReceiptCheck && activeTab === 'receipt' && (\n                          <td className=\"px-4 py-3 text-center\">\n                            <div className=\"flex items-center justify-center\">\n                              {item.is_received ? (\n                                <button\n                                  onClick={() => handleReceiptToggle(item.id, false)}\n                                  className=\"flex items-center gap-1 px-2 py-1 text-xs bg-green-100 text-green-800 rounded-md hover:bg-green-200 transition-colors\"\n                                  disabled={!canReceiptCheck}\n                                >\n                                  <CheckCircle className=\"w-3 h-3\" />\n                                  입고완료\n                                </button>\n                              ) : (\n                                <button\n                                  onClick={() => handleReceiptToggle(item.id, true)}\n                                  className=\"flex items-center gap-1 px-2 py-1 text-xs bg-gray-100 text-gray-600 rounded-md hover:bg-gray-200 transition-colors\"\n                                  disabled={!canReceiptCheck}\n                                >\n                                  <Package className=\"w-3 h-3\" />\n                                  미입고\n                                </button>\n                              )}\n                            </div>\n                          </td>\n                        )}\n                        <td className=\"px-4 py-3\">\n                          {isEditing ? (\n                            <Input\n                              value={item.item_name}\n                              onChange={(e) => handleItemChange(index, 'item_name', e.target.value)}\n                              className=\"text-sm\"\n                            />\n                          ) : (\n                            <span className=\"text-sm\">{item.item_name}</span>\n                          )}\n                        </td>\n                        <td className=\"px-4 py-3\">\n                          {isEditing ? (\n                            <Input\n                              value={item.specification}\n                              onChange={(e) => handleItemChange(index, 'specification', e.target.value)}\n                              className=\"text-sm\"\n                            />\n                          ) : (\n                            <span className=\"text-sm\">{item.specification}</span>\n                          )}\n                        </td>\n                        <td className=\"px-4 py-3 text-center\">\n                          {isEditing ? (\n                            <Input\n                              type=\"number\"\n                              value={item.quantity}\n                              onChange={(e) => handleItemChange(index, 'quantity', Number(e.target.value))}\n                              className=\"text-sm text-center w-20 mx-auto\"\n                            />\n                          ) : (\n                            <span className=\"text-sm\">{item.quantity}</span>\n                          )}\n                        </td>\n                        <td className=\"px-4 py-3 text-right\">\n                          {isEditing ? (\n                            <Input\n                              type=\"number\"\n                              value={item.unit_price_value}\n                              onChange={(e) => handleItemChange(index, 'unit_price_value', Number(e.target.value))}\n                              className=\"text-sm text-right\"\n                            />\n                          ) : (\n                            <span className=\"text-sm\">{formatCurrency(item.unit_price_value)} {purchase.currency}</span>\n                          )}\n                        </td>\n                        <td className=\"px-4 py-3 text-right\">\n                          {isEditing ? (\n                            <Input\n                              type=\"number\"\n                              value={item.amount_value}\n                              onChange={(e) => handleItemChange(index, 'amount_value', Number(e.target.value))}\n                              className=\"text-sm text-right\"\n                            />\n                          ) : (\n                            <span className=\"text-sm\">{formatCurrency(item.amount_value)} {purchase.currency}</span>\n                          )}\n                        </td>\n                        <td className=\"px-4 py-3\">\n                          {isEditing ? (\n                            <div className=\"flex items-center gap-2\">\n                              <Input\n                                value={item.remark || ''}\n                                onChange={(e) => handleItemChange(index, 'remark', e.target.value)}\n                                className=\"text-sm\"\n                              />\n                              <Button\n                                size=\"sm\"\n                                variant=\"ghost\"\n                                onClick={() => handleRemoveItem(index)}\n                                className=\"text-red-600 hover:bg-red-50\"\n                              >\n                                <Trash2 className=\"w-4 h-4\" />\n                              </Button>\n                            </div>\n                          ) : (\n                            <span className=\"text-sm\">{item.remark || '-'}</span>\n                          )}\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                  <tfoot className=\"bg-gray-100\">\n                    <tr>\n                      <td colSpan={canReceiptCheck && activeTab === 'receipt' ? 5 : 4} className=\"px-3 py-2 text-sm font-semibold text-right\">\n                        총액\n                      </td>\n                      <td className=\"px-3 py-2 text-sm font-semibold text-right\">\n                        {formatCurrency(\n                          (isEditing ? editedItems : purchase.items)?.reduce((sum, item) => sum + (item.amount_value || 0), 0) || 0\n                        )} {purchase.currency}\n                      </td>\n                      <td></td>\n                    </tr>\n                  </tfoot>\n                </table>\n              </div>\n              {isEditing && (\n                <Button\n                  size=\"sm\"\n                  variant=\"outline\"\n                  onClick={handleAddItem}\n                  className=\"w-full mt-2\"\n                >\n                  <Plus className=\"w-4 h-4 mr-1\" />\n                  항목 추가\n                </Button>\n              )}\n            </div>\n\n            {/* 승인 정보 */}\n            <div className=\"bg-gray-50 rounded-lg p-4\">\n              <h3 className=\"font-semibold mb-3 flex items-center\">\n                <User className=\"w-4 h-4 mr-2\" />\n                승인 정보\n              </h3>\n              <div className=\"space-y-4\">\n                {/* 중간 승인 */}\n                <div>\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-sm text-gray-500\">중간승인</p>\n                      <Badge \n                        variant={purchase.middle_manager_status === 'approved' ? 'default' : 'secondary'}\n                        className={purchase.middle_manager_status === 'approved' ? 'bg-green-100 text-green-800' : \n                                 purchase.middle_manager_status === 'rejected' ? 'bg-red-100 text-red-800' : ''}\n                      >\n                        {purchase.middle_manager_status === 'approved' ? '승인' : \n                         purchase.middle_manager_status === 'rejected' ? '반려' : '대기'}\n                      </Badge>\n                    </div>\n                    {!isEditing && canApproveMiddle && \n                     purchase.middle_manager_status === 'pending' && (\n                      <div className=\"flex gap-2\">\n                        <Button\n                          size=\"sm\"\n                          onClick={() => handleApprove('middle')}\n                          className=\"bg-green-600 hover:bg-green-700 text-white\"\n                        >\n                          <CheckCircle className=\"w-4 h-4 mr-1\" />\n                          승인\n                        </Button>\n                        <Button\n                          size=\"sm\"\n                          variant=\"outline\"\n                          onClick={() => handleReject('middle')}\n                          className=\"text-red-600 hover:bg-red-50\"\n                        >\n                          <XCircle className=\"w-4 h-4 mr-1\" />\n                          반려\n                        </Button>\n                      </div>\n                    )}\n                  </div>\n                </div>\n                \n                {/* 최종 승인 */}\n                <div>\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-sm text-gray-500\">최종승인</p>\n                      <Badge \n                        variant={purchase.final_manager_status === 'approved' ? 'default' : 'secondary'}\n                        className={purchase.final_manager_status === 'approved' ? 'bg-green-100 text-green-800' : \n                                 purchase.final_manager_status === 'rejected' ? 'bg-red-100 text-red-800' : ''}\n                      >\n                        {purchase.final_manager_status === 'approved' ? '승인' : \n                         purchase.final_manager_status === 'rejected' ? '반려' : '대기'}\n                      </Badge>\n                    </div>\n                    {!isEditing && canApproveFinal && \n                     purchase.middle_manager_status === 'approved' &&\n                     purchase.final_manager_status === 'pending' && (\n                      <div className=\"flex gap-2\">\n                        <Button\n                          size=\"sm\"\n                          onClick={() => handleApprove('final')}\n                          className=\"bg-green-600 hover:bg-green-700 text-white\"\n                        >\n                          <CheckCircle className=\"w-4 h-4 mr-1\" />\n                          승인\n                        </Button>\n                        <Button\n                          size=\"sm\"\n                          variant=\"outline\"\n                          onClick={() => handleReject('final')}\n                          className=\"text-red-600 hover:bg-red-50\"\n                        >\n                          <XCircle className=\"w-4 h-4 mr-1\" />\n                          반려\n                        </Button>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className=\"text-center py-12 text-gray-500\">\n            발주 정보를 불러올 수 없습니다.\n          </div>\n        )}\n    </>\n  )\n\n  // embedded가 true면 Dialog 없이 내용만 반환\n  if (embedded) {\n    return content\n  }\n\n  // embedded가 false면 Dialog로 감싸서 반환\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent className=\"w-full max-w-[95vw] sm:max-w-4xl max-h-[90vh] overflow-y-auto\">\n        <DialogHeader>\n          <DialogTitle className=\"flex items-center justify-between\">\n            <span className=\"text-xl font-bold\">\n              {isEditing ? '발주 내역 수정' : '발주 상세 정보'}\n            </span>\n            {purchase && (\n              <div className=\"flex items-center gap-2\">\n                <span className=\"text-sm text-gray-500\">#{purchase.purchase_order_number}</span>\n                {!isEditing && getStatusBadge()}\n                {!isEditing && canEdit && (\n                  <>\n                    <Button\n                      size=\"sm\"\n                      variant=\"outline\"\n                      onClick={() => setIsEditing(true)}\n                      className=\"text-blue-600 hover:bg-blue-50\"\n                    >\n                      <Edit2 className=\"w-4 h-4 mr-1\" />\n                      수정\n                    </Button>\n                    {canDelete && onDelete && (\n                      <Button\n                        size=\"sm\"\n                        variant=\"outline\"\n                        onClick={() => onDelete(purchase)}\n                        className=\"text-red-600 hover:bg-red-50\"\n                      >\n                        <Trash2 className=\"w-4 h-4 mr-1\" />\n                        삭제\n                      </Button>\n                    )}\n                  </>\n                )}\n                {isEditing && (\n                  <>\n                    <Button\n                      size=\"sm\"\n                      variant=\"outline\"\n                      onClick={() => {\n                        setIsEditing(false)\n                        setEditedPurchase(purchase)\n                        setEditedItems(purchase.items || [])\n                        setDeletedItemIds([])\n                      }}\n                    >\n                      <X className=\"w-4 h-4 mr-1\" />\n                      취소\n                    </Button>\n                    <Button\n                      size=\"sm\"\n                      onClick={handleSave}\n                      className=\"bg-hansl-600 hover:bg-hansl-700 text-white\"\n                    >\n                      <Save className=\"w-4 h-4 mr-1\" />\n                      저장\n                    </Button>\n                  </>\n                )}\n              </div>\n            )}\n          </DialogTitle>\n        </DialogHeader>\n        {content}\n      </DialogContent>\n    </Dialog>\n  )\n}"],"names":["__iconNode","CircleX","createLucideIcon","Package","PurchaseDetailModal","purchaseId","isOpen","onClose","embedded","currentUserRoles","activeTab","onRefresh","onDelete","loading","setLoading","useState","purchase","setPurchase","isEditing","setIsEditing","editedPurchase","setEditedPurchase","editedItems","setEditedItems","deletedItemIds","setDeletedItemIds","userRoles","setUserRoles","currentUserName","setCurrentUserName","supabase","createClient","useEffect","user","employeeData","employeeByEmail","roles","r","effectiveRoles","canEdit","canDelete","isAdmin","isRequester","canReceiptCheck","canApproveMiddle","canApproveFinal","loadPurchaseDetail","id","data","error","purchaseData","toast","getStatusBadge","jsx","Badge","formatDate","date","formatCurrency","amount","handleSave","totalAmount","sum","item","updateError","deleteError","handleItemChange","index","field","value","newItems","quantity","unitPrice","handleAddItem","newItem","handleRemoveItem","_","i","handleReceiptToggle","itemId","isReceived","handleApprove","type","updateData","handleReject","content","Fragment","jsxs","FileText","Building2","CheckCircle","Input","e","Button","Trash2","Plus","User","XCircle","Dialog","DialogContent","DialogHeader","DialogTitle","Edit2","X","Save"],"mappings":"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","x_google_ignoreList":[0,1]}